@import '../theming/theming';
@import '../styles/typography/typography-utils';


.mc-alert {
    display: flex;
    align-items: baseline;

    vertical-align: top;
    text-align: left;

    border: var(--mc-alert-size-border-width, $alert-size-border-width) solid transparent;
    border-radius: var(--mc-alert-size-border-radius, $alert-size-border-radius);

    .mc-link {
        padding-left: 0;
    }

    .mc-alert__icon {
        margin-right: var(--mc-alert-size-icon-margin, $alert-size-icon-margin);
    }

    padding: {
        right: calc(
            var(--mc-alert-size-horizontal-padding, #{$alert-size-horizontal-padding}) -
            var(--mc-alert-size-border-width, #{$alert-size-border-width})
        );
        left: calc(
            var(--mc-alert-size-horizontal-padding, #{$alert-size-horizontal-padding}) -
            var(--mc-alert-size-border-width, #{$alert-size-border-width})
        );
    };

    &:not(.mc-alert_small) {
        padding: {
            top: var(--mc-alert-size-vertical-padding, $alert-size-vertical-padding);
            bottom: var(--mc-alert-size-vertical-padding, $alert-size-vertical-padding);
        };
    }

    &.mc-alert_small {
        padding: {
            top: var(--mc-alert-size-small-vertical-padding, $alert-size-small-vertical-padding);
            bottom: var(--mc-alert-size-small-vertical-padding, $alert-size-small-vertical-padding);
        };
    }

    &.mc-alert_dismissible {
        padding-right: calc(
            var(--mc-alert-size-right-padding-dismissible, #{$alert-size-close-button-width}) +
            var(--mc-alert-size-horizontal-padding, #{$alert-size-horizontal-padding})
        );
    }
}

.mc-alert_dismissible {
    position: relative;

    .mc-alert__close {
        position: absolute;

        z-index: 10;
        right: 15px;

        border: 1px solid transparent;
        outline: 0;

        background: transparent;

        padding: 0;

        cursor: pointer;
        text-align: center;
    }

    &.mc-alert_small {
        .mc-alert__close {
            top: 10px;
        }
    }

    &:not(.mc-alert_small) {
        .mc-alert__close {
            top: 14px;
        }
    }
}

@mixin alert-theme($alert) {
    background-color: map-get($alert, background);
    border-color: map-get($alert, border);

    .mc-alert__icon {
        color: map-get($alert, icon);
    }
}

@mixin mc-alert-theme($theme) {
    $foreground: map-get($theme, foreground);

    $alert: map-get(map-get($theme, components), alert);

    $is-dark: map-get($theme, is-dark);

    .mc-alert__close:focus {
        outline: none;
    }

    .mc-alert {
        color: map-get($foreground, text);
    }

    .mc-alert_error {
        @include alert-theme(map-get($alert, error));
    }

    .mc-alert_warning {
        @include alert-theme(map-get($alert, warning));
    }

    .mc-alert_success {
        @include alert-theme(map-get($alert, success));
    }

    .mc-alert_info {
        @include alert-theme(map-get($alert, info));
    }

    .mc-alert:not(.mc-alert_error):not(.mc-alert_warning):not(.mc-alert_success):not(.mc-alert_info) {
        @include alert-theme(map-get($alert, default));
    }
}

@mixin mc-alert-typography($config) {
    .mc-alert:not(.mc-alert_small) {
        @include mc-typography-level-to-styles($config, $alert-font-default-body);

        header {
            @include mc-typography-level-to-styles($config, $alert-font-default-header);
        }
    }

    .mc-alert.mc-alert_small {
        @include mc-typography-level-to-styles($config, $alert-font-small-body);

        header {
            @include mc-typography-level-to-styles($config, $alert-font-small-header);
        }

        .mc-link__text {
            @include mc-typography-level-to-styles($config, $alert-font-small-body);
        }
    }

    .mc-icon {
        letter-spacing: unset;
    }
}
