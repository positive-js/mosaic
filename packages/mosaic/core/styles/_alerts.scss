@import '../theming/theming';
@import '../styles/typography/typography-utils';


.mc-alert {
    display: flex;
    align-items: baseline;

    vertical-align: top;
    text-align: left;

    border: $alert-size-border-width solid transparent;
    border-radius: $alert-size-border-radius;

    .mc-link {
        padding-left: 0;
    }

    .mc-alert__icon {
        margin-right: 8px;
    }

    &:not(.mc-alert_small) {
        padding: $alert-size-padding;
    }

    &.mc-alert_small {
        padding: $alert-size-padding-small;
    }

    &.mc-alert_dismissible {
        padding-right: $alert-size-right-padding-dismissible;
    }
}

.mc-alert_dismissible {
    position: relative;

    .mc-alert__close {
        position: absolute;

        z-index: 10;
        right: 15px;

        border: 1px solid transparent;
        outline: 0;

        background: transparent;

        padding: 0;

        cursor: pointer;
        text-align: center;
    }

    &.mc-alert_small {
        .mc-alert__close {
            top: 10px;
        }
    }

    &:not(.mc-alert_small) {
        .mc-alert__close {
            top: 14px;
        }
    }
}

@mixin alert-theme($background, $border, $icon) {
    background-color: $background;
    border-color: $border;

    .mc-alert__icon {
        color: $icon;
    }
}

@mixin mc-alert-theme($theme) {
    $foreground: map-get($theme, foreground);

    $info: map-get($theme, info);
    $second: map-get($theme, second);
    $error: map-get($theme, error);
    $warning: map-get($theme, warning);
    $success: map-get($theme, success);

    $is-dark: map-get($theme, is-dark);

    .mc-alert__close:focus {
        outline: none;
    }

    .mc-alert {
        color: map-get($foreground, text);
    }

    .mc-alert_error {
        @if($is-dark) {
            @include alert-theme(mc-color($error, darker), mc-color($error, darker), mc-color($error));
        } @else {
            @include alert-theme(mc-color($error, lighter), mc-color($error, 200), mc-color($error, 400));
        }
    }

    .mc-alert_warning {
        @if($is-dark) {
            @include alert-theme(mc-color($warning, darker), mc-color($warning, darker), mc-color($warning));
        } @else {
            @include alert-theme(mc-color($warning, lighter), mc-color($warning), mc-color($warning, darker));
        }
    }

    .mc-alert_success {
        @if($is-dark) {
            @include alert-theme(mc-color($success, darker), mc-color($success, darker), mc-color($success));
        } @else {
            @include alert-theme(mc-color($success, lighter), mc-color($success), mc-color($success, darker));
        }
    }

    .mc-alert_info {
        @if($is-dark) {
            @include alert-theme(mc-color($info, darker), mc-color($info, darker), mc-color($info));
        } @else {
            @include alert-theme(mc-color($info, lighter), mc-color($info), mc-color($info, darker));
        }
    }

    .mc-alert:not(.mc-alert_error):not(.mc-alert_warning):not(.mc-alert_success):not(.mc-alert_info) {
        @if($is-dark) {
            @include alert-theme(mc-color($second, darker), mc-color($second, darker), mc-color($second));
        } @else {
            @include alert-theme(mc-color($second, lighter), mc-color($second, 200), mc-color($second, 400));
        }
    }
}

@mixin mc-alert-typography($config) {
    .mc-alert:not(.mc-alert_small) {
        @include mc-typography-level-to-styles($config, body);

        header {
            @include mc-typography-level-to-styles($config, subheading);
        }
    }

    .mc-alert.mc-alert_small {
        @include mc-typography-level-to-styles($config, caption);

        header {
            @include mc-typography-level-to-styles($config, caption);
        }

        .mc-link__text {
            @include mc-typography-level-to-styles($config, caption);
        }
    }

    .mc-icon {
        letter-spacing: unset;
    }
}
