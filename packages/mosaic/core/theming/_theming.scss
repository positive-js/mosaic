@import '../../design-tokens/tokens';
@import 'components-theming';


@function mc-contrast($palette, $hue) {
    @return map-get(map-get($palette, contrast), $hue);
}

@function mc-palette($base-palette, $lighter: 100, $default: 500, $darker: 700) {
    $result: map_merge($base-palette, (
        default: map-get($base-palette, $default),
        lighter: map-get($base-palette, $lighter),
        darker:  map-get($base-palette, $darker),

        default-contrast: mc-contrast($base-palette, $default),
        lighter-contrast: mc-contrast($base-palette, $lighter),
        darker-contrast:  mc-contrast($base-palette, $darker)
    ));

    // For each hue in the palette, add a "-contrast" color to the map.
    @each $hue, $color in $base-palette {
        $result: map_merge($result, (
            '#{$hue}-contrast': mc-contrast($base-palette, $hue)
        ));
    }

    @return $result;
}

@function mc-color($palette, $hue: default, $opacity: null) {
    // If hueKey is a number between zero and one, then it actually contains an
    // opacity value, so recall this function with the default hue and that given opacity.
    @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {
        @return mc-color($palette, default, $hue);
    }

    $color: map-get($palette, $hue);
    $opacity: if($opacity == null, opacity($color), $opacity);

    @return rgba($color, $opacity);
}

@function mc-light-theme($primary, $second, $error, $info, $success, $warning) {
    $states: (
        focused-color: $light-color-states-focused-color,
        selected-color: $light-color-states-selected-color,
        pressed-shadow: $light-color-states-pressed-shadow,
        disabled-opacity: $light-color-states-disabled-opacity
    );

    $foreground: (
        text:                       $light-color-foreground-text,
        text-less-contrast:         $light-color-foreground-text-less-contrast,
        text-disabled:              $light-color-foreground-text_disabled,
        divider:                    $light-color-foreground-divider,
        border:                     $light-color-foreground-border,
        icon:                       $light-color-foreground-icon,
    );

    $background: (
        background:                 $light-color-background-background,
        background-popup:           $light-color-background-background-popup,
        background-popup-footer:    $light-color-background-background_popup-footer,
        background-disabled:        $light-color-background-background-disabled,
        overlay-hovered:            $light-color-background-overlay-hovered,
        overlay-active:             $light-color-background-overlay-active,
        overlay-disabled:           $light-color-background-overlay-disabled
    );

    $theme: (
        is-dark: false,

        primary: $primary,
        second: $second,
        error: $error,

        foreground: $foreground,
        background: $background,

        warning: $warning,
        success: $success,
        info: $info,

        states: $states
    );

    @return map_merge($theme, (components: mc-light-theme-components($theme)));
}

@function mc-dark-theme($primary, $second, $error, $info, $success, $warning) {
    $states: (
        focused-color: $dark-color-states-focused-color,
        selected-color: $dark-color-states-focused-color,
        pressed-shadow: $dark-color-states-pressed-shadow,
        disabled-opacity: $dark-color-states-disabled-opacity
    );

    $background: (
        background:                 $dark-color-background-background,
        background-popup:           $dark-color-background-background-popup,
        background-popup-footer:    $dark-color-background-background_popup-footer,
        background-disabled:        $dark-color-background-background-disabled,
        overlay-hovered:            $dark-color-background-overlay-hovered,
        overlay-active:             $dark-color-background-overlay-active,
        overlay-disabled:           $dark-color-background-overlay-disabled
    );

    $foreground: (
        text:                       $dark-color-foreground-text,
        text-less-contrast:         $dark-color-foreground-text-less-contrast,
        text-disabled:              $dark-color-foreground-text_disabled,
        divider:                    $dark-color-foreground-divider,
        border:                     $dark-color-foreground-border,
        icon:                       $dark-color-foreground-icon,
    );

    $theme: (
        is-dark: true,

        primary: $primary,
        second: $second,
        error: $error,

        foreground: $foreground,
        background: $background,

        warning: $warning,
        success: $success,
        info: $info,

        states: $states
    );

    @return map_merge($theme, (components: mc-dark-theme-components($theme)));
}
