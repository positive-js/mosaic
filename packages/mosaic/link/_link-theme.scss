@import '../core/theming/theming';
@import '../core/styles/typography/typography-utils';


@mixin mc-link($foreground, $link) {
    display: inline-block;

    color: map-get($link, text);
    text-decoration: none;
    cursor: pointer;

    transition: $link-animation-transition;

    &:focus {
        outline: none;
    }

    /* stylelint-disable no-descending-specificity */
    &:hover {
        color: map-get($link, state-hover-text);
        transition: $link-animation-state-hover-transition;

        &.mc-text-only,
        &.mc-text-with-icon .mc-link__text {
            border-bottom-color: map-get($link, state-hover-border-bottom);
        }

        & .mc-icon {
            color: map-get($link, state-hover-text);
        }
    }

    &:active {
        color: map-get($link, state-active-text);
    }

    &.cdk-keyboard-focused {
        outline: map-get($link, state-focused-outline) solid $link-size-state-focused-outline-width;

        outline-offset: $link-size-state-focused-outline-offset;
    }

    & .mc-icon {
        color: inherit;
    }

    &.mc-text-only,
    &.mc-text-with-icon .mc-link__text {
        border-bottom-style: solid;
        border-bottom-width: 1px;
        border-bottom-color: map-get($link, border-bottom);
    }

    &.mc-text-with-icon .mc-link__text {
        &:not(:first-child) {
            margin-left: $link-size-icon-margin;
        }

        &:not(:last-child) {
            margin-right: $link-size-icon-margin;
        }
    }

    &.mc-link_pseudo {
        display: inline;

        &.mc-text-only,
        &.mc-text-with-icon .mc-link__text {
            border-bottom-color: transparent;
        }

        &:hover {
            &.mc-text-only,
            &.mc-text-with-icon .mc-link__text {
                border-bottom-color: map-get($link, state-hover-border-bottom);
            }
        }

        &[disabled] {
            &.mc-text-only,
            &.mc-text-with-icon .mc-link__text {
                border-bottom-color: transparent;
            }
        }
    }

    &.mc-link_no-underline {
        &.mc-text-only,
        &.mc-text-with-icon .mc-link__text {
            border-bottom-color: transparent;
        }
    }

    &[disabled] {
        color: map-get($foreground, text-disabled);

        cursor: default;
        pointer-events: none;

        &.mc-text-only,
        &.mc-text-with-icon .mc-link__text {
            border-bottom-color: inherit;
        }

        & .mc-icon {
            color: map-get($foreground, text-disabled);
        }
        /* stylelint-enable no-descending-specificity */
    }
}


@mixin mc-link-theme($theme) {
    $foreground: map-get($theme, foreground);

    $link: map-get(map-get($theme, components), link);

    .mc-link:not(.mc-link_use-visited) {
        &:visited {
            color: map-get($link, text);
        }

        @include mc-link($foreground, $link);
    }

    .mc-link.mc-link_use-visited {
        &:visited {
            color: map-get($link, state-visited-text);

            &.mc-text-only,
            &.mc-text-with-icon .mc-link__text {
                border-bottom-color: map-get($link, state-visited-border-bottom);
            }

            & .mc-icon {
                color: map-get($link, state-visited-text);
            }
        }

        @include mc-link($foreground, $link);
    }

    @media print {
        .mc-link_print:not([disabled]) {
            color: map-get($foreground, text);

            &.mc-text-only,
            &.mc-text-with-icon .mc-link__text {
                border-bottom: none;
            }

            &::after {
                color: map-get($foreground, text);

                content: ":\a" attr(print);
                white-space: pre;
            }
        }
    }
}

@mixin mc-link-typography($config) {
    .mc-link {
        @include mc-typography-level-to-styles($config, $link-font-default);
    }
}
