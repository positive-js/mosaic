@import '../design-tokens/pt-2022/tokens';
@import '../core/styles/common/layout';
@import '../core/styles/variables';


// Applied to elements that appear to make up the outer box of the checkmark, such as the frame
// that contains the border and the actual background element that contains the marks.
%mc-checkbox-outer-box {
    @include mc-fill;

    border-radius: 3px;
    box-sizing: border-box;
    pointer-events: none;
}

.mc-checkbox-checkmark,
.mc-checkbox-mixedmark {
    display: none;

    position: absolute;

    top: -1px;
    left: -1px;
    right: 0;
    bottom: 0;
}

.mc-checkbox-frame {
    @extend %mc-checkbox-outer-box;

    background-color: transparent;
    border: {
        width: var(--mc-checkbox-size-border-width, $checkbox-size-border-width);
        style: solid;
    }
    box-shadow: var(--mc-checkbox-size-toggle-box-shadow, $checkbox-size-toggle-box-shadow);
}

.mc-checkbox {
    display: inline-block;

    cursor: pointer;
    -webkit-tap-highlight-color: transparent;

    &.mc-checked {
        .mc-checkbox-checkmark {
            display: block;
        }

        .mc-checkbox-mixedmark {
            display: none;
        }
    }

    &.mc-indeterminate {
        .mc-checkbox-checkmark {
            display: none;
        }

        .mc-checkbox-mixedmark {
            display: block;
        }
    }

    &.mc-disabled {
        cursor: default;

        .mc-checkbox-frame {
            box-shadow: none;
        }
    }
}

.mc-checkbox-layout {
    // `cursor: inherit` ensures that the wrapper element gets the same cursor as the mc-checkbox
    // (e.g. pointer by default, regular when disabled), instead of the browser default.
    cursor: inherit;
    align-items: baseline;
    vertical-align: middle;
    display: inline-flex;
    white-space: nowrap;

    width: 100%;
}

.mc-checkbox-inner-container {
    display: inline-block;
    height: var(--mc-checkbox-size-width, $checkbox-size-width);
    line-height: 0;
    margin-right: $checkbox-size-label-margin;
    order: 0;
    position: relative;
    align-self: center;
    white-space: nowrap;
    width: var(--mc-checkbox-size-width, $checkbox-size-width);
    flex-shrink: 0;

    [dir='rtl'] & {
        margin: {
            left: $checkbox-size-label-margin;
            right: auto;
        }
    }
}

.mc-checkbox-inner-container-no-side-margin {
    margin: {
        left: 0;
        right: 0;
    }
}

.mc-checkbox-label-before {
    .mc-checkbox-inner-container {
        order: 1;
        margin: {
            left: $checkbox-size-label-margin;
            right: auto;
        }

        [dir='rtl'] & {
            margin: {
                left: auto;
                right: $checkbox-size-label-margin;
            }
        }
    }
}
