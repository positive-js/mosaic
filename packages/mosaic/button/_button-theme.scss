@mixin mc-button-theme($theme) {
    $primary: map-get($theme, primary);
    $second: map-get($theme, second);
    $error: map-get($theme, error);
    $is-dark: map-get($theme, is-dark);

    $in-shadow: if($is-dark, inset 1px 2px 2px 0 rgba(black, 0.2), inset 0 1px 2px 0 rgba(black, 0.2));

    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);

    .mc-button-overlay {
        background: transparent;
    }

    .mc-button,
    .mc-icon-button {
        -webkit-font-smoothing: antialiased;

        &.mc-primary {
            border-color: map-get($primary, 560);
            background: mc-color($primary, 500);
            color: mc-contrast($primary, 500);

            .mc-icon {
                color: mc-contrast($primary, 500);
            }

            &:active,
            &.mc-active {
                border-color: darken(mc-color($primary, 560), 5);
                background: darken(mc-color($primary, 500), 5);
            }
        }

        &.mc-second {
            border-color: mc-color($foreground, border);
            background: map-get($background, background-disabled);
            color: map-get($foreground, text);

            .mc-icon {
                color: map-get($foreground, text);
            }

            &:active,
            &.mc-active {
                border-color: darken(mc-color($foreground, border), 5);
                background: darken(map-get($background, background-disabled), 5);
            }
        }

        &.mc-error {
            border-color: mc-color($foreground, border);
            background: map-get($background, background-disabled);
            color: mc-color($error);

            .mc-icon {
                color: mc-color($error, 400);
            }

            &:active,
            &.mc-active {
                border-color: darken(mc-color($foreground, border), 5);
                background: darken(map-get($background, background-disabled), 5);
            }
        }

        &:hover,
        &.mc-hover {
            & .mc-button-overlay {
                background: map-get($background, overlay-hovered);
            }
        }

        &:active,
        &.mc-active {
            box-shadow: $in-shadow;
        }

        &.mc-primary,
        &.mc-second,
        &.mc-error {
            &.cdk-keyboard-focused {
                $focused-color: map-get(map-get($theme, states), focused-color);

                border-color: $focused-color;
                box-shadow: 0 0 0 1px $focused-color;
            }
        }

        &.mc-button_transparent {
            border-color: transparent;
            background-color: transparent;

            &:active,
            &.mc-active {
                border-color: transparent;
                background-color: transparent;
                box-shadow: none;
            }

            &.mc-disabled,
            &[disabled] {
                border-color: transparent;
            }
        }

        &.mc-disabled,
        &[disabled] {
            opacity: 0.3;
        }
    }
}

@mixin mc-button-typography($config) {
    .mc-button,
    .mc-icon-button {
        @include mc-typography-level-to-styles($config, body);

        &.mc-primary {
            @include mc-typography-level-to-styles($config, body-strong);
        }
    }

    .mc-icon-button.mc-button-wrapper {
        .mc-icon {
            line-height: mc-line-height($config, body);
        }
    }
}

