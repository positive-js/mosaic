@import '../core/theming/theming';
@import '../core/styles/typography/typography-utils';


@mixin mc-icon-theme($theme) {
    $foreground: map-get($theme, foreground);

    $primary: map-get($theme, primary);
    $second: map-get($theme, second);
    $error: map-get($theme, error);

    $primary-color: mc-color($primary, 400);

    // Дефолтные серые иконки default-icon: лупа в поле, иконки дропдаунов v, все иконки вне полей.
    .mc-icon:not(.mc-icon_light) {
        color: mc-color($foreground, icon);

        &.mc-primary {
            // todo color: mix(mc-color($foreground, icon), $primary-color, 30%);
            color: mc-color($foreground, icon);

            &[disabled],
            &.mc-disabled {
                color: $primary-color;
            }
        }

        &.mc-second {
            color: map-get($foreground, text-less-contrast);

            &[disabled],
            &.mc-disabled {
                color: mc-color($second);
            }
        }

        &.mc-error {
            // todo color: mix(mc-color($foreground, icon), mc-color($error), 30%);
            color: mc-color($foreground, icon);

            &[disabled],
            &.mc-disabled {
                color: mc-color($error);
            }
        }

        &:not(.mc-primary):not(.mc-second):not(.mc-error) {
            &[disabled],
            &.mc-disabled {
                color: mc-color($second);

                cursor: default;
            }
        }
    }

    // Облегченные серые иконки less-contrast-icon нужны тогда, когда действие, которое они делают не дефолтное и
    // не самое важное. Не используются вне инпутов или селектов.
    .mc-icon.mc-icon_light {
        &.mc-primary {
            color: $primary-color;

            &:hover {
                // todo color: mix(map-get($foreground, text), $primary-color);
                color: map-get($foreground, text);
            }
        }

        &.mc-second {
            color: mc-color($second);

            &:hover {
                //todo color: mix(map-get($foreground, text), mc-color($second), 90%);
                color: map-get($foreground, text);
            }
        }

        &.mc-error {
            color: mc-color($error);

            &:hover {
                // todo color: mix(map-get($foreground, text), mc-color($error));
                color: map-get($foreground, text);
            }
        }
    }
}

@mixin mc-icon-typography($config) {
    .mc-icon {
        font: {
            size:   mc-font-size($config, button);
            family: mc-font-family($config, button);
            weight: mc-font-weight($config, button);
        }
    }
}

