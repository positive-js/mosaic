@import '../core/theming/theming';
@import '../core/styles/typography/typography-utils';
@import '../core/styles/variables';

@mixin mc-form-field-theme($theme) {
    $primary: map-get($theme, primary);
    $second: map-get($theme, second);
    $error: map-get($theme, error);

    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);

    $is-dark-theme: map-get($theme, is-dark);

    .mc-form-field {
        background: {
            color: map-get($background, background);
        }

        &:not(.mc-form-field_without-borders) {
            .mc-form-field__container {
                border: {
                    color: mc-color($second);
                }
            }

            &:hover .mc-form-field__container {
                border: {
                    color: mc-color($second, if($is-dark-theme, lighter, darker));
                }
            }

            &.mc-focused:not(.ng-invalid) .mc-form-field__container {
                border: {
                    color: mc-color($primary);
                }

                box-shadow: 0 0 0 1px mc-color($primary);
            }

            &.ng-invalid .mc-form-field__container {
                background: {
                    color: if($is-dark-theme, transparent, mc-color($error, lighter));
                }

                border: {
                    color: mc-color($error);
                }

                .mc-input,
                .mc-textarea {
                    color: mc-color($error);
                }
            }

            &.ng-invalid.mc-focused .mc-form-field__container {
                box-shadow: 0 0 0 1px mc-color($error);
            }

            &.mc-disabled .mc-form-field__container {
                border: {
                    color: mix(map-get($background, button-border), map-get($background, disabled-overlay));
                }

                background: {
                    color: mix(map-get($background, button-bg), map-get($background, disabled-overlay));
                }

                .mc-icon,
                .mc-input,
                .mc-textarea {
                    color: mc-color($foreground, disabled-text);
                }
            }
        }
    }

    .mc-form-field__hint {
        color: mc-color($second, 400);
    }
}

@mixin mc-form-field-typography($config) {
    .mc-form-field {
        @include mc-typography-level-to-styles($config, body);
    }

    .mc-form-field__hint {
        @include mc-typography-level-to-styles($config, caption);
    }
}
