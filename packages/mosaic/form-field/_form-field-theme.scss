@import '../core/theming/theming';
@import '../core/styles/typography/typography-utils';
@import '../core/styles/variables';


@mixin mc-form-field-theme($theme) {
    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);

    $second: map-get($theme, second);
    $error: map-get($theme, error);

    $form-field: map-get(map-get($theme, components), form-field);

    .mc-form-field {
        background-color: map-get($form-field, background);

        &:not(.mc-form-field_without-borders) {
            .mc-form-field__container {
                border-color: map-get($form-field, border);
            }

            &:hover .mc-form-field__container {
                border-color: map-get($form-field, state-hover-border);
            }

            &.ng-invalid {
                & .mc-form-field__container {
                border-color: map-get($form-field, state-invalid-border);
                    background-color: if($is-dark, transparent, mc-color($error, lighter));
                background-color: map-get($form-field, state-invalid-background);

                    border-color: mc-color($error);
                    .mc-input,
                    .mc-textarea {
                        color: mc-color($error);
                    }
                }

                & .mc-form-field__hint {
                    color: mc-color($error);
                }
            }

            &.mc-focused {
                &:not(.ng-invalid) .mc-form-field__container {
                    border-color: map-get(map-get($theme, states), focused-color);
                    box-shadow: 0 0 0 1px map-get(map-get($theme, states), focused-color);
                }

                &.ng-invalid .mc-form-field__container {
                    box-shadow: 0 0 0 1px mc-color($error);
                }
            }

            /* stylelint-disable no-descending-specificity */
            &.mc-disabled .mc-form-field__container {
                // todo border-color: mix(map-get($foreground, border), mc-color($background, overlay-disabled));
                border-color: map-get($foreground, text-disabled);

                // todo background-color: mix(
                //    map-get($background, background-disabled), mc-color($background, overlay-disabled)
                //);
                background-color: map-get($background, background-disabled);

                .mc-icon,
                .mc-input,
                .mc-textarea {
                    color: map-get($foreground, text-disabled);
                }
            }
            /* stylelint-enable no-descending-specificity */
        }
    }

    .mc-form-field__hint {
        color: map-get($foreground, text-less-contrast);
    }
}

@mixin mc-form-field-typography($config) {
    .mc-form-field {
        @include mc-typography-level-to-styles($config, $form-field-font-default);
    }

    .mc-form-field__hint {
        @include mc-typography-level-to-styles($config, $form-field-hint-font-default);
    }
}
