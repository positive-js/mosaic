@import '../core/theming/theming';
@import '../core/styles/typography/typography-utils';


@mixin mc-tag-color($params) {
    background: map-get($params, background);
    border-color: map-get($params, border);

    &.mc-active,
    &.mc-focused {
        border-color: map-get($params, focused);
        box-shadow: 0 0 0 1px map-get($params, focused);
    }

    & .mc-icon {
        color: map-get($params, icon);

        &:hover {
            cursor: pointer;
            color: map-get($params, icon_hovered);
        }
    }

    &.mc-disabled {
        border-color: map-get($params, background_disabled);
        background: map-get($params, background_disabled);

        color: map-get($params, disabled);

        & .mc-tag-overlay {
            background: transparent;
        }

        & .mc-icon {
            color: inherit;
        }
    }
}


@mixin mc-tag-theme($theme) {
    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);

    $primary: map-get($theme, primary);
    $second: map-get($theme, second);
    $error: map-get($theme, error);

    $tags: map-get(map-get($theme, components), tags);

    .mc-tag {
        color: map-get($foreground, text);

        &.mc-primary {
            @include mc-tag-color(map-get($tags, primary));
        }

        &.mc-second {
            @include mc-tag-color(map-get($tags, second));
        }

        &.mc-error {
            @include mc-tag-color(map-get($tags, error));
        }

        &:hover,
        &.mc-hovered {
            & .mc-tag-overlay {
                background: map-get($background, overlay-hover);
            }
        }

        .mc-icon {
            color: mc-color($foreground, icon);

            &:hover {
                cursor: pointer;
                color: inherit;
            }
        }

        &.mc-disabled {
            color: map-get($foreground, text-disabled);

            border-color: transparent;

            background-color: map-get($background, background-disabled);

            & .mc-tag-overlay {
                background: mc-color($background, overlay-disabled);
            }

            & .mc-icon {
                color: mc-color($foreground, icon);
                cursor: default;
            }
        }
    }

    .mc-tag-input {
        color: map-get($foreground, text);

        &::placeholder {
            color: map-get($foreground, text-disabled);
        }

        &::-ms-input-placeholder {
            color: map-get($foreground, text-disabled);
        }

        &::-webkit-input-placeholder {
            color: map-get($foreground, text-disabled);
        }
    }
}

@mixin mc-tag-typography($config) {
    .mc-tag:not(.mc-tag_mono):not(.mc-tag_caps) {
        @include mc-typography-level-to-styles($config, $tags-font-default);
    }

    .mc-tag_mono {
        @include mc-typography-level-to-styles($config, $tags-font-mono);
    }

    .mc-tag_caps {
        @include mc-typography-level-to-styles($config, $tags-font-caps);
    }

    .mc-tag-input {
        @include mc-typography-level-to-styles($config, $tag-input-font-default);
    }
}

