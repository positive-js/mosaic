@import '../core/theming/theming';
@import '../core/styles/typography/typography-utils';

@import '../core/theming/palette';


@mixin _mc-tag-color($color, $focused-color, $is-dark) {
    background: mc-color($color, if($is-dark, 700, 100));
    border-color: mc-color($color, if($is-dark, 700, 100));

    &.mc-active,
    &.mc-focused {
        border-color: $focused-color;
        box-shadow: 0 0 0 1px $focused-color;
    }
}

@mixin mc-tag-theme($theme) {
    $primary: map-get($theme, primary);
    $second: map-get($theme, second);
    $error: map-get($theme, error);

    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);

    $is-dark: map-get($theme, is-dark);

    $focused-color: map-get(map-get($theme, states), focused-color);

    .mc-tag {
        color: mc-color($foreground, text);

        &.mc-primary {
            @include _mc-tag-color($primary, $focused-color, $is-dark);
        }

        &.mc-second {
            @include _mc-tag-color($second, $focused-color, $is-dark);
        }

        &.mc-error {
            @include _mc-tag-color($error, mc-color($error), $is-dark);
        }

        &:hover:not(.mc-disabled),
        &.mc-hovered:not(.mc-disabled) {
            & .mc-tag-overlay {
                background: mc-color($background, overlay-hovered);
            }
        }

        .mc-icon {
            color: map-get($foreground, icon);

            &:hover {
                cursor: pointer;
                color: mix(map-get($foreground, text), mc-color($second), 90%);
            }
        }

        &.mc-disabled {
            color: mc-color($foreground, text-disabled);

            border-color: transparent;

            background-color: map-get($background, background-disabled);

            & .mc-tag-overlay {
                background: mc-color($background, overlay-disabled);
            }

            & .mc-icon {
                color: map-get($foreground, icon);
                cursor: default;
            }
        }
    }

    .mc-tag-input {
        color: map-get($foreground, text);;

        &::placeholder {
            color: map-get($foreground, text-disabled);;
        }

        &::-ms-input-placeholder {
            color: map-get($foreground, text-disabled);;
        }

        &::-webkit-input-placeholder {
            color: map-get($foreground, text-disabled);;
        }
    }
}

@mixin mc-tag-typography($config) {
    .mc-tag:not(.mc-tag_mono):not(.mc-tag_caps) {
        @include mc-typography-level-to-styles($config, caption);
    }

    .mc-tag_mono {
        @include mc-typography-level-to-styles($config, caption-mono);
    }

    .mc-tag_caps {
        @include mc-typography-level-to-styles($config, caption-caps);
    }

    .mc-tag-input {
        @include mc-typography-level-to-styles($config, body);
    }
}

