@import '../core/theming/theming';
@import '../core/styles/typography/typography-utils';


@mixin mc-tag-color($background, $border, $icon, $icon-hovered, $focused, $disabled, $disabled-background ) {
    background: $background;
    border-color: $border;

    &.mc-active,
    &.mc-focused {
        border-color: $focused;
        box-shadow: 0 0 0 1px $focused;
    }

    & .mc-icon {
        color: $icon;

        &:hover {
            cursor: pointer;
            color: $icon-hovered;
        }
    }

    &.mc-disabled {
        border-color: $disabled-background;
        background: $disabled-background;

        color: $disabled;

        & .mc-tag-overlay {
            background: transparent;
        }

        & .mc-icon {
            color: inherit;
        }
    }
}


@mixin mc-tag-theme($theme) {
    $tags: map-get(map-get($theme, components), tags);

    .mc-tag {
        color: $color-foreground-text;

        &.mc-primary {
            @include mc-tag-color(
                $tags-color-primary-background,
                $tags-color-primary-border,
                $tags-color-primary-icon,
                $tags-color-primary-icon-hovered,
                $tags-color-primary-state-focused,
                $tags-color-primary-state-disabled,
                $tags-color-primary-state-disabled-background
            );
        }

        &.mc-second {
            @include mc-tag-color(
                $tags-color-second-background,
                $tags-color-second-border,
                $tags-color-second-icon,
                $tags-color-second-icon-hovered,
                $tags-color-second-state-focused,
                $tags-color-second-state-disabled,
                $tags-color-second-state-disabled-background
            );
        }

        &.mc-error {
            @include mc-tag-color(
                $tags-color-error-background,
                $tags-color-error-border,
                $tags-color-error-icon,
                $tags-color-error-icon-hovered,
                $tags-color-error-state-focused,
                $tags-color-error-state-disabled,
                $tags-color-error-state-disabled-background
            );
        }

        &:hover,
        &.mc-hovered {
            & .mc-tag-overlay {
                background: $color-background-overlay-hovered;
            }
        }

        .mc-icon {
            color: $color-foreground-icon;

            &:hover {
                cursor: pointer;
                color: inherit;
            }
        }

        &.mc-disabled {
            color: $color-foreground-text-disabled;

            border-color: transparent;

            background-color: $color-background-background-disabled;

            & .mc-tag-overlay {
                background: $color-background-overlay-disabled;
            }

            & .mc-icon {
                color: $color-foreground-icon;
                cursor: default;
            }
        }
    }

    .mc-tag-input {
        color: $color-foreground-text;

        &::placeholder {
            color: $color-foreground-text-disabled;
        }

        &::-ms-input-placeholder {
            color: $color-foreground-text-disabled;
        }

        &::-webkit-input-placeholder {
            color: $color-foreground-text-disabled;
        }
    }
}

@mixin mc-tag-typography($config) {
    .mc-tag:not(.mc-tag_mono):not(.mc-tag_caps) {
        @include mc-typography-level-to-styles($config, caption);
    }

    .mc-tag_mono {
        @include mc-typography-level-to-styles($config, caption-mono);
    }

    .mc-tag_caps {
        @include mc-typography-level-to-styles($config, caption-caps);
    }

    .mc-tag-input {
        @include mc-typography-level-to-styles($config, body);
    }
}

