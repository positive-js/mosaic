@import '../core/theming/theming';
@import '../core/styles/typography/typography-utils';
@import '../core/styles/variables';

@mixin mc-checkbox-theme($theme) {
    $hover-lighten: 5%;
    // main
    $primary: map-get($theme, primary);
    $second: map-get($theme, second);
    $background: map-get($theme, background);
    $foreground: map-get($theme, foreground);

    // focus inset shadow color
    $focus-border-box-shadow: inset 0 0 0 1px map-get($background, background);

    // background
    $toggle-background-unchecked: $background;
    $toggle-background-checked: map-get($primary, 500);
    $toggle-background-checked-hover: lighten($toggle-background-checked, $hover-lighten);
    $toggle-background-disabled: map-get($second, 40);
    $toggle-background-hover: map-get($background, hover);

    // border
    $toggle-border-color-checked: map-get($primary, 600);
    $toggle-border-color-checked-hover: lighten($toggle-border-color-checked, $hover-lighten);
    $toggle-border-color-unchecked: map-get($second, 300);
    $toggle-border-color-focus: map-get($primary, 500);
    $toggle-border-color-disabled: map-get($second, 100);

    // icon
    $icon-color-checked: map-get($background, background);
    $icon-color-disabled: map-get($second, 200);

    // label
    $label-color-disabled: map-get($foreground, disabled-text);
    $label-color: map-get($foreground, text);

    .mc-checkbox-label {
        color: $label-color;
    }

    .mc-checkbox-frame {
        border-color: $toggle-border-color-unchecked;
    }

    .mc-checkbox-checkmark,
    .mc-checkbox-mixedmark {
        color: $icon-color-checked;
    }

    .mc-checkbox:not(.mc-checkbox-disabled) {
        .mc-checkbox-input {
            &:hover {
                + .mc-checkbox-frame {
                    background-color: $toggle-background-hover;
                }
            }

            &:focus {
                + .mc-checkbox-frame {
                    border-color: $toggle-border-color-focus;
                }
            }
        }

        &.mc-checkbox-checked,
        &.mc-checkbox-indeterminate {
            .mc-checkbox-input {
                &:focus {
                    + .mc-checkbox-frame {
                        border-color: $toggle-border-color-focus;
                        box-shadow: $focus-border-box-shadow;
                    }
                }
            }
        }
    }

    .mc-checkbox-checked:not(.mc-checkbox-disabled),
    .mc-checkbox-indeterminate:not(.mc-checkbox-disabled) {
        .mc-checkbox-frame {
            background: $toggle-background-checked;
            border-color: $toggle-border-color-checked;
        }
        .mc-checkbox-input {
            &:hover {
                + .mc-checkbox-frame {
                    background: $toggle-background-checked-hover;
                    border-color: $toggle-border-color-checked-hover;
                }
            }
            &:focus:hover {
                + .mc-checkbox-frame {
                    border-color: $toggle-border-color-focus;
                    box-shadow: $focus-border-box-shadow;
                }
            }
        }
    }

    .mc-checkbox-disabled {
        .mc-checkbox-frame {
            border-color: $toggle-border-color-disabled;
            background-color: $toggle-background-disabled;
        }

        .mc-checkbox-label {
            color: $label-color-disabled;
        }

        .mc-checkbox-checkmark,
        .mc-checkbox-mixedmark {
            color: $icon-color-disabled;
        }
    }
}

@mixin mc-checkbox-typography($config) {
    .mc-checkbox {
        font-family: mc-font-family($config);
        font-size: mc-font-size($config, body);
        line-height: mc-line-height($config, body);
    }

    .mc-checkbox-layout .mc-checkbox-label {
        line-height: mc-line-height($config, body);
        font-size: mc-font-size($config, body);
    }
}
