@mixin _mc-button-primary-color($palette) {
    $hover-lighten: 5%;

    color: mc-contrast($palette, 500);

    border-color: mc-color($palette, 600);
    background:
        mc-color($palette, 500)
        linear-gradient(to bottom, mc-color($palette, 500), mc-color($palette, 560));

    &:hover,
    &.mc-hover {
        background-image: linear-gradient(
            to bottom,
            lighten(mc-color($palette, 500), $hover-lighten),
            lighten(mc-color($palette, 560), $hover-lighten)
        );
    }

    &:active,
    &.mc-active {
        background-image: linear-gradient(to bottom, mc-color($palette, 600), mc-color($palette, 560));

        &:hover,
        &.mc-hover {
            background-image: linear-gradient(
                to bottom,
                lighten(mc-color($palette, 600), $hover-lighten),
                lighten(mc-color($palette, 560), $hover-lighten)
            );
        }
    }

    &.disabled,
    &[disabled] {
        color: mc-color($palette, 200);

        border-color: mc-color($palette, 400);
        background-image: linear-gradient(to bottom, mc-color($palette, 300), mc-color($palette, 400));
    }
}

@mixin _mc-button-second-color($palette) {
    $hover-darken: 5%;

    color: mc-contrast($palette, 500);

    border-color: mc-color($palette, 300);
    background-image: linear-gradient(to bottom, mc-color($palette, 40, 1), mc-color($palette, 100));

    &:hover,
    &.mc-hover {
        background-image: linear-gradient(
            to bottom, darken(mc-color($palette, 40), $hover-darken), darken(mc-color($palette, 100), $hover-darken)
        );
    }

    &:active,
    &.mc-active {
        background-image: linear-gradient(to bottom, mc-color($palette, 200), mc-color($palette, 100));

        &:hover,
        &.mc-hover {
            background-image: linear-gradient(
                to bottom,
                darken(mc-color($palette, 200), $hover-darken),
                darken(mc-color($palette, 100), $hover-darken)
            );
        }
    }

    &[disabled] {
        color: mc-color($palette, 200);

        border-color: mc-color($palette, 200);
        background-image: linear-gradient(to bottom, mc-color($palette, 40, 1), mc-color($palette, 60));
    }
}

@mixin _mc-button-error-color($secondPalette, $errorPalette) {
    $hover-darken: 5%;

    color: mc-color($errorPalette, 500);

    border-color: mc-color($secondPalette, 300);
    background-image: linear-gradient(to bottom, mc-color($secondPalette, 40, 1), mc-color($secondPalette, 100));

    &:hover,
    &.mc-hover {
        background-image: linear-gradient(
            to bottom,
            darken(mc-color($secondPalette, 40), $hover-darken),
            darken(mc-color($secondPalette, 100), $hover-darken)
        );
    }

    &:active,
    &.mc-active {
        background-image: linear-gradient(to bottom, mc-color($secondPalette, 200), mc-color($secondPalette, 100));

        &:hover,
        &.mc-hover {
            background-image: linear-gradient(
                to bottom,
                darken(mc-color($secondPalette, 200), $hover-darken),
                darken(mc-color($secondPalette, 100), $hover-darken)
            );
        }
    }

    &[disabled] {
        color: mc-color($secondPalette, 200);

        border-color: mc-color($secondPalette, 200);
        background-image: linear-gradient(to bottom, mc-color($secondPalette, 40, 1), mc-color($secondPalette, 60));
    }
}

@mixin _mc-button-theme-color($theme) {
    $primary: map-get($theme, primary);
    $second: map-get($theme, second);
    $error: map-get($theme, error);

    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);

    &.mc-primary {
        @include _mc-button-primary-color($primary);
    }

    &.mc-second {
        @include _mc-button-second-color($second);
    }

    &.mc-error {
        @include _mc-button-error-color($second, $error);
    }

    &.mc-primary,
    &.mc-second,
    &.mc-error {
        &.cdk-focused {
            border-color: mc-color($primary, 500);
            box-shadow: 0 0 0 1px mc-color($primary, 500);
        }
    }
}

@mixin mc-button-theme($theme) {
    .mc-button,
    .mc-xs-button,
    .mc-sm-button,
    .mc-lg-button,
    .mc-xl-button,
    .mc-icon-button {
        @include _mc-button-theme-color($theme);
    }
}

@mixin mc-button-typography($config) {
    .mc-button,
    .mc-xs-button,
    .mc-sm-button,
    .mc-lg-button,
    .mc-xl-button,
    .mc-icon-button {
        @include mc-typography-level-to-styles($config, body);

        &.mc-primary {
            @include mc-typography-level-to-styles($config, body-strong);
        }
    }

    .mc-icon-button.mc-button-wrapper {
        .mc-icon {
            line-height: mc-line-height($config, body);
        }
    }
}

