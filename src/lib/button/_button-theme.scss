@mixin _mc-button-primary-color($palette, $foreground, $background) {
    border-color: map-get($palette, 560);
    background: mc-color($palette, 500);
    color: mc-contrast($palette, 500);

    .mc-button-overlay {
        background: transparent;
    }

    .mc-icon {
        color: mc-contrast($palette, 500);
    }

    &:hover,
    &.mc-hover {
        & .mc-button-overlay {
            background: map-get($background, hover);
        }
    }

    &:active,
    &.mc-active {
        border-color: darken(mc-color($palette, 560), 5);
        background: darken(mc-color($palette, 500), 5);
        box-shadow: map-get($background, in-shadow);
    }

    &.mc-disabled,
    &[disabled] {
        border-color: map-get($palette, 500);
        color: transparentize(mc-contrast($palette, 500), 0.5);

        & .mc-button-overlay {
            background: mc-color($background, disabled-overlay);
        }

        .mc-icon {
            color: transparentize(mc-contrast($palette, 500), 0.5);
        }
    }
}

@mixin _mc-button-second-color($palette, $foreground, $background) {
    border-color: mc-color($background, button-border);
    background: map-get($background, button-bg);
    color: map-get($foreground, text);

    .mc-icon {
        color: map-get($foreground, text);
    }

    &:hover,
    &.mc-hover {
        & .mc-button-overlay {
            background: map-get($background, hover);
        }
    }

    &:active,
    &.mc-active {
        border-color: darken(mc-color($background, button-border), 5);
        background: darken(map-get($background, button-bg), 5);
        box-shadow: map-get($background, in-shadow);
    }

    &.mc-disabled,
    &[disabled] {
        border-color: mc-color($background, button-bg);
        color: map-get($foreground, disabled-text);

        & .mc-button-overlay {
            background: mc-color($background, disabled-overlay);
        }

        .mc-icon {
            color: map-get($foreground, disabled-text);
        }
    }
}

@mixin _mc-button-error-color($second, $error, $foreground, $background) {
    @include _mc-button-second-color($second, $foreground, $background);

    color: mc-color($error);

    .mc-icon {
        color: mc-color($error, 400);
    }

    &.mc-disabled,
    &[disabled] {
        border-color: mc-color($background, button-bg);
        color: map-get($foreground, disabled-text);

        & .mc-button-overlay {
            background: mc-color($background, disabled-overlay);
        }

        .mc-icon {
            color: map-get($foreground, disabled-text);
        }
    }
}

@mixin _mc-button-theme-color($theme) {
    $primary: map-get($theme, primary);
    $second: map-get($theme, second);
    $error: map-get($theme, error);
    $is-dark: map-get($theme, is-dark);

    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);

    &.mc-primary {
        @include _mc-button-primary-color($primary, $foreground, $background);
    }

    &.mc-second {
        @include _mc-button-second-color($second, $foreground, $background);
    }

    &.mc-error {
        @include _mc-button-error-color($second, $error, $foreground, $background);
    }

    &.mc-primary,
    &.mc-second,
    &.mc-error {
        -webkit-font-smoothing: antialiased;

        &.cdk-keyboard-focused {
            $focus-color: mc-color($primary);

            border-color: $focus-color;
            box-shadow: 0 0 0 1px $focus-color;
        }
    }
}

@mixin mc-button-theme($theme) {
    .mc-button,
    .mc-icon-button {
        @include _mc-button-theme-color($theme);
    }
}

@mixin mc-button-typography($config) {
    .mc-button,
    .mc-icon-button {
        @include mc-typography-level-to-styles($config, body);

        &.mc-primary {
            @include mc-typography-level-to-styles($config, body-strong);
        }
    }

    .mc-icon-button.mc-button-wrapper {
        .mc-icon {
            line-height: mc-line-height($config, body);
        }
    }
}

