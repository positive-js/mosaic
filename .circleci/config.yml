# To validate changes, use an online parser, eg.
# http://yaml-online-parser.appspot.com/

var_1: &default_docker_image circleci/node:10.12-browsers
var_2: &cache_key mosaic-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}-0.5.0

var_3: &job_defaults
    working_directory: ~/mosaic
    docker:
        - image: *default_docker_image

# Restores the cache that could be available for the current Yarn lock file.
var_5: &restore_cache
    restore_cache:
        key: *cache_key

# After checkout, rebase on top of master.
# Similar to travis behavior, but not quite the same.
# See https://discuss.circleci.com/t/1662
var_4: &checkout_code
    checkout:
        # After checkout, rebase on top of master. By default, PRs are not rebased on top of master,
        # which we want. See https://discuss.circleci.com/t/1662
        post: git pull --ff-only origin "refs/pull/${CI_PULL_REQUEST//*pull\//}/merge"

var_6: &save_cache
    save_cache:
        key: *cache_key
        paths:
            - "node_modules"

var_7: &yarn_install
    run: yarn install --frozen-lockfile --non-interactive

var_8: &attach_release_output
    attach_workspace:
        at: dist/

var_9: &release_path "releases/**/*"

attach_options: &attach_options
    at: .

version: 2
jobs:
    install:
        <<: *job_defaults
        steps:
            - *checkout_code
            - *restore_cache
            - *yarn_install
            - persist_to_workspace:
                  root: .
                  paths:
                      - ./*
            - *save_cache

    validate_licenses:
        <<: *job_defaults
        steps:
            - attach_workspace: *attach_options
            - run: yarn run valid:lic

    build_mosaic:
        <<: *job_defaults
        steps:
            - attach_workspace: *attach_options
            - run: yarn run build:mosaic
            - persist_to_workspace:
                  root: dist
                  paths:
                      - *release_path

    build_cdk:
        <<: *job_defaults
        steps:
            - attach_workspace: *attach_options
            - run: yarn run build:cdk
            - persist_to_workspace:
                  root: dist
                  paths:
                      - *release_path

    build_mosaic-moment-adapter:
        <<: *job_defaults
        steps:
            - attach_workspace: *attach_options
            - run: yarn run build:mosaic-moment-adapter
            - persist_to_workspace:
                  root: dist
                  paths:
                      - *release_path

    build_dev_app_aot:
        <<: *job_defaults
        steps:
            - *attach_release_output
            - attach_workspace: *attach_options
            - run: yarn run ci:aot

    test_unit:
        <<: *job_defaults
        steps:
            - attach_workspace: *attach_options
            - run:
                  command: yarn run test:unit
                  environment:
                      JUNIT_REPORT_PATH: ./junit/
                      JUNIT_REPORT_NAME: test-results.xml
                  when: always
            - store_test_results:
                  path: ./junit
            - store_artifacts:
                  path: ./junit

    snapshot_publish:
        <<: *job_defaults
        steps:
            - *checkout_code
            - *restore_cache
            - *attach_release_output
            - attach_workspace: *attach_options
            - add_ssh_keys:
                  fingerprints:
                      - "c3:de:eb:9c:82:70:a8:23:f3:4e:92:b8:07:d2:22:df"
            - run: ./scripts/deploy/publish-artifacts.sh

    docs_publish:
        <<: *job_defaults
        steps:
            - add_ssh_keys:
                  fingerprints:
                      - "c3:de:eb:9c:82:70:a8:23:f3:4e:92:b8:07:d2:22:df"
            - *checkout_code
            - *restore_cache
            - run: ./scripts/deploy/publish-docs.sh


workflows:
    version: 2
    default_workflow:
        jobs:
            # 1 Group
            - install
            # 2 Group
            - validate_licenses:
                  requires:
                      - install
            - build_cdk:
                  requires:
                      - install
            - build_mosaic-moment-adapter:
                  requires:
                      - install
            - build_mosaic:
                  requires:
                      - install
            # 3 Group
            - test_unit:
                  requires:
                      - build_cdk
                      - build_mosaic
                      - build_mosaic-moment-adapter
            - build_dev_app_aot:
                  requires:
                      - build_cdk
                      - build_mosaic
                      - build_mosaic-moment-adapter
            # 4 Group
            - snapshot_publish:
                  requires:
                      - test_unit
                      - build_cdk
                      - build_mosaic
                      - build_mosaic-moment-adapter
                  filters:
                      branches:
                          only:
                              - master
            - docs_publish:
                  requires:
                      - test_unit
                      - build_mosaic
                  filters:
                      branches:
                          only:
                              - master
