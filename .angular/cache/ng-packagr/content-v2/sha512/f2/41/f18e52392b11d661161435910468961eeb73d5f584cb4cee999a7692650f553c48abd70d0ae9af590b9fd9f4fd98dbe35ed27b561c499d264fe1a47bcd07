{"hash":"ae7f488e0101272c3619390127bd1c6efd4ff31a","fesm2020":{"code":"/* tslint:disable:no-magic-numbers no-bitwise */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some((modifier) => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\nfunction isControl(event) {\n    const keyCode = event.keyCode;\n    switch (keyCode) {\n        case SHIFT:\n        case CONTROL:\n        case ALT:\n            return true;\n        default:\n            return event.metaKey;\n    }\n}\nfunction isNumberKey({ keyCode }) {\n    return keyCode >= ZERO && keyCode <= NINE;\n}\nfunction isLetterKey({ keyCode }) {\n    return keyCode >= A && keyCode <= Z;\n}\nfunction isFunctionKey({ keyCode }) {\n    return keyCode >= F1 && keyCode <= F12;\n}\nfunction isVerticalMovement({ keyCode }) {\n    return [UP_ARROW, DOWN_ARROW, PAGE_DOWN, PAGE_UP, HOME, END].includes(keyCode);\n}\nfunction isHorizontalMovement({ keyCode }) {\n    return [LEFT_ARROW, RIGHT_ARROW, BACKSPACE, DELETE].includes(keyCode);\n}\nfunction isSelectAll(event) {\n    return event.ctrlKey && event.keyCode === A;\n}\nfunction isCopy(event) {\n    return (event.ctrlKey || event.metaKey) && event.keyCode === C;\n}\nfunction isInput(event) {\n    return event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA';\n}\nfunction isLeftBracket(event) {\n    return event.code === 'BracketLeft';\n}\nfunction isRightBracket(event) {\n    return event.code === 'BracketRight';\n}\nfunction isDigit({ keyCode }) {\n    return [ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE].includes(keyCode);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey, isControl, isCopy, isDigit, isFunctionKey, isHorizontalMovement, isInput, isLeftBracket, isLetterKey, isNumberKey, isRightBracket, isSelectAll, isVerticalMovement };\n//# sourceMappingURL=ptsecurity-cdk-keycodes.mjs.map\n","map":{"version":3,"file":"ptsecurity-cdk-keycodes.mjs","sources":["../../../packages/cdk/keycodes/keycodes.ts","../../../packages/cdk/keycodes/ptsecurity-cdk-keycodes.ts"],"sourcesContent":["/* tslint:disable:no-magic-numbers no-bitwise */\n\nexport const MAC_ENTER = 3;\nexport const BACKSPACE = 8;\nexport const TAB = 9;\nexport const NUM_CENTER = 12;\nexport const ENTER = 13;\nexport const SHIFT = 16;\nexport const CONTROL = 17;\nexport const ALT = 18;\nexport const PAUSE = 19;\nexport const CAPS_LOCK = 20;\nexport const ESCAPE = 27;\nexport const SPACE = 32;\nexport const PAGE_UP = 33;\nexport const PAGE_DOWN = 34;\nexport const END = 35;\nexport const HOME = 36;\nexport const LEFT_ARROW = 37;\nexport const UP_ARROW = 38;\nexport const RIGHT_ARROW = 39;\nexport const DOWN_ARROW = 40;\nexport const PLUS_SIGN = 43;\nexport const PRINT_SCREEN = 44;\nexport const INSERT = 45;\nexport const DELETE = 46;\nexport const ZERO = 48;\nexport const ONE = 49;\nexport const TWO = 50;\nexport const THREE = 51;\nexport const FOUR = 52;\nexport const FIVE = 53;\nexport const SIX = 54;\nexport const SEVEN = 55;\nexport const EIGHT = 56;\nexport const NINE = 57;\nexport const FF_SEMICOLON = 59;     // Firefox (Gecko) fires this for semicolon instead of 186\nexport const FF_EQUALS = 61;        // Firefox (Gecko) fires this for equals instead of 187\nexport const QUESTION_MARK = 63;\nexport const AT_SIGN = 64;\nexport const A = 65;\nexport const B = 66;\nexport const C = 67;\nexport const D = 68;\nexport const E = 69;\nexport const F = 70;\nexport const G = 71;\nexport const H = 72;\nexport const I = 73;\nexport const J = 74;\nexport const K = 75;\nexport const L = 76;\nexport const M = 77;\nexport const N = 78;\nexport const O = 79;\nexport const P = 80;\nexport const Q = 81;\nexport const R = 82;\nexport const S = 83;\nexport const T = 84;\nexport const U = 85;\nexport const V = 86;\nexport const W = 87;\nexport const X = 88;\nexport const Y = 89;\nexport const Z = 90;\nexport const META = 91;             // WIN_KEY_LEFT\nexport const MAC_WK_CMD_LEFT = 91;\nexport const MAC_WK_CMD_RIGHT = 93;\nexport const CONTEXT_MENU = 93;\nexport const NUMPAD_ZERO = 96;\nexport const NUMPAD_ONE = 97;\nexport const NUMPAD_TWO = 98;\nexport const NUMPAD_THREE = 99;\nexport const NUMPAD_FOUR = 100;\nexport const NUMPAD_FIVE = 101;\nexport const NUMPAD_SIX = 102;\nexport const NUMPAD_SEVEN = 103;\nexport const NUMPAD_EIGHT = 104;\nexport const NUMPAD_NINE = 105;\nexport const NUMPAD_MULTIPLY = 106;\nexport const NUMPAD_PLUS = 107;\nexport const NUMPAD_MINUS = 109;\nexport const NUMPAD_PERIOD = 110;\nexport const NUMPAD_DIVIDE = 111;\nexport const F1 = 112;\nexport const F2 = 113;\nexport const F3 = 114;\nexport const F4 = 115;\nexport const F5 = 116;\nexport const F6 = 117;\nexport const F7 = 118;\nexport const F8 = 119;\nexport const F9 = 120;\nexport const F10 = 121;\nexport const F11 = 122;\nexport const F12 = 123;\nexport const NUM_LOCK = 144;\nexport const SCROLL_LOCK = 145;\nexport const FIRST_MEDIA = 166;\nexport const FF_MINUS = 173;\nexport const MUTE = 173;            // Firefox (Gecko) fires 181 for MUTE\nexport const VOLUME_DOWN = 174;     // Firefox (Gecko) fires 182 for VOLUME_DOWN\nexport const VOLUME_UP = 175;       // Firefox (Gecko) fires 183 for VOLUME_UP\nexport const FF_MUTE = 181;\nexport const FF_VOLUME_DOWN = 182;\nexport const LAST_MEDIA = 183;\nexport const FF_VOLUME_UP = 183;\nexport const SEMICOLON = 186;       // Firefox (Gecko) fires 59 for SEMICOLON\nexport const EQUALS = 187;          // Firefox (Gecko) fires 61 for EQUALS\nexport const COMMA = 188;\nexport const DASH = 189;            // Firefox (Gecko) fires 173 for DASH/MINUS\nexport const PERIOD = 190;\nexport const SLASH = 191;\nexport const APOSTROPHE = 192;\nexport const TILDE = 192;\nexport const OPEN_SQUARE_BRACKET = 219;\nexport const BACKSLASH = 220;\nexport const CLOSE_SQUARE_BRACKET = 221;\nexport const SINGLE_QUOTE = 222;\nexport const MAC_META = 224;\n\ntype ModifierKey = 'altKey' | 'shiftKey' | 'ctrlKey' | 'metaKey';\n\nexport function hasModifierKey(event: KeyboardEvent | MouseEvent, ...modifiers: ModifierKey[]): boolean {\n    if (modifiers.length) {\n        return modifiers.some((modifier) => event[modifier]);\n    }\n\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\nexport function isControl(event: KeyboardEvent): boolean {\n    const keyCode = event.keyCode;\n\n    switch (keyCode) {\n        case SHIFT:\n        case CONTROL:\n        case ALT:\n            return true;\n        default:\n            return event.metaKey;\n    }\n}\n\nexport function isNumberKey({ keyCode }: KeyboardEvent): boolean {\n    return keyCode >= ZERO && keyCode <= NINE;\n}\n\nexport function isLetterKey({ keyCode }: KeyboardEvent): boolean {\n    return keyCode >= A && keyCode <= Z;\n}\n\nexport function isFunctionKey({ keyCode }: KeyboardEvent): boolean {\n    return keyCode >= F1 && keyCode <= F12;\n}\n\nexport function isVerticalMovement({ keyCode }: KeyboardEvent): boolean {\n    return [UP_ARROW, DOWN_ARROW, PAGE_DOWN, PAGE_UP, HOME, END].includes(keyCode);\n}\n\nexport function isHorizontalMovement({ keyCode }: KeyboardEvent): boolean {\n    return [LEFT_ARROW, RIGHT_ARROW, BACKSPACE, DELETE].includes(keyCode);\n}\n\nexport function isSelectAll(event: KeyboardEvent): boolean {\n    return event.ctrlKey && event.keyCode === A;\n}\n\nexport function isCopy(event: KeyboardEvent): boolean {\n    return (event.ctrlKey || event.metaKey) && event.keyCode === C;\n}\n\nexport function isInput(event): boolean {\n    return event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA';\n}\n\nexport function isLeftBracket(event: KeyboardEvent): boolean {\n    return event.code === 'BracketLeft';\n}\n\nexport function isRightBracket(event: KeyboardEvent): boolean {\n    return event.code === 'BracketRight';\n}\n\nexport function isDigit({ keyCode }: KeyboardEvent): boolean {\n    return [ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE].includes(keyCode);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"/* tslint:disable:no-magic-numbers no-bitwise */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some((modifier) => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\nfunction isControl(event) {\n    const keyCode = event.keyCode;\n    switch (keyCode) {\n        case SHIFT:\n        case CONTROL:\n        case ALT:\n            return true;\n        default:\n            return event.metaKey;\n    }\n}\nfunction isNumberKey({ keyCode }) {\n    return keyCode >= ZERO && keyCode <= NINE;\n}\nfunction isLetterKey({ keyCode }) {\n    return keyCode >= A && keyCode <= Z;\n}\nfunction isFunctionKey({ keyCode }) {\n    return keyCode >= F1 && keyCode <= F12;\n}\nfunction isVerticalMovement({ keyCode }) {\n    return [UP_ARROW, DOWN_ARROW, PAGE_DOWN, PAGE_UP, HOME, END].includes(keyCode);\n}\nfunction isHorizontalMovement({ keyCode }) {\n    return [LEFT_ARROW, RIGHT_ARROW, BACKSPACE, DELETE].includes(keyCode);\n}\nfunction isSelectAll(event) {\n    return event.ctrlKey && event.keyCode === A;\n}\nfunction isCopy(event) {\n    return (event.ctrlKey || event.metaKey) && event.keyCode === C;\n}\nfunction isInput(event) {\n    return event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA';\n}\nfunction isLeftBracket(event) {\n    return event.code === 'BracketLeft';\n}\nfunction isRightBracket(event) {\n    return event.code === 'BracketRight';\n}\nfunction isDigit({ keyCode }) {\n    return [ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE].includes(keyCode);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey, isControl, isCopy, isDigit, isFunctionKey, isHorizontalMovement, isInput, isLeftBracket, isLetterKey, isNumberKey, isRightBracket, isSelectAll, isVerticalMovement };\n//# sourceMappingURL=ptsecurity-cdk-keycodes.mjs.map\n","map":{"version":3,"file":"ptsecurity-cdk-keycodes.mjs","sources":["../../../packages/cdk/keycodes/keycodes.ts","../../../packages/cdk/keycodes/ptsecurity-cdk-keycodes.ts"],"sourcesContent":["/* tslint:disable:no-magic-numbers no-bitwise */\n\nexport const MAC_ENTER = 3;\nexport const BACKSPACE = 8;\nexport const TAB = 9;\nexport const NUM_CENTER = 12;\nexport const ENTER = 13;\nexport const SHIFT = 16;\nexport const CONTROL = 17;\nexport const ALT = 18;\nexport const PAUSE = 19;\nexport const CAPS_LOCK = 20;\nexport const ESCAPE = 27;\nexport const SPACE = 32;\nexport const PAGE_UP = 33;\nexport const PAGE_DOWN = 34;\nexport const END = 35;\nexport const HOME = 36;\nexport const LEFT_ARROW = 37;\nexport const UP_ARROW = 38;\nexport const RIGHT_ARROW = 39;\nexport const DOWN_ARROW = 40;\nexport const PLUS_SIGN = 43;\nexport const PRINT_SCREEN = 44;\nexport const INSERT = 45;\nexport const DELETE = 46;\nexport const ZERO = 48;\nexport const ONE = 49;\nexport const TWO = 50;\nexport const THREE = 51;\nexport const FOUR = 52;\nexport const FIVE = 53;\nexport const SIX = 54;\nexport const SEVEN = 55;\nexport const EIGHT = 56;\nexport const NINE = 57;\nexport const FF_SEMICOLON = 59;     // Firefox (Gecko) fires this for semicolon instead of 186\nexport const FF_EQUALS = 61;        // Firefox (Gecko) fires this for equals instead of 187\nexport const QUESTION_MARK = 63;\nexport const AT_SIGN = 64;\nexport const A = 65;\nexport const B = 66;\nexport const C = 67;\nexport const D = 68;\nexport const E = 69;\nexport const F = 70;\nexport const G = 71;\nexport const H = 72;\nexport const I = 73;\nexport const J = 74;\nexport const K = 75;\nexport const L = 76;\nexport const M = 77;\nexport const N = 78;\nexport const O = 79;\nexport const P = 80;\nexport const Q = 81;\nexport const R = 82;\nexport const S = 83;\nexport const T = 84;\nexport const U = 85;\nexport const V = 86;\nexport const W = 87;\nexport const X = 88;\nexport const Y = 89;\nexport const Z = 90;\nexport const META = 91;             // WIN_KEY_LEFT\nexport const MAC_WK_CMD_LEFT = 91;\nexport const MAC_WK_CMD_RIGHT = 93;\nexport const CONTEXT_MENU = 93;\nexport const NUMPAD_ZERO = 96;\nexport const NUMPAD_ONE = 97;\nexport const NUMPAD_TWO = 98;\nexport const NUMPAD_THREE = 99;\nexport const NUMPAD_FOUR = 100;\nexport const NUMPAD_FIVE = 101;\nexport const NUMPAD_SIX = 102;\nexport const NUMPAD_SEVEN = 103;\nexport const NUMPAD_EIGHT = 104;\nexport const NUMPAD_NINE = 105;\nexport const NUMPAD_MULTIPLY = 106;\nexport const NUMPAD_PLUS = 107;\nexport const NUMPAD_MINUS = 109;\nexport const NUMPAD_PERIOD = 110;\nexport const NUMPAD_DIVIDE = 111;\nexport const F1 = 112;\nexport const F2 = 113;\nexport const F3 = 114;\nexport const F4 = 115;\nexport const F5 = 116;\nexport const F6 = 117;\nexport const F7 = 118;\nexport const F8 = 119;\nexport const F9 = 120;\nexport const F10 = 121;\nexport const F11 = 122;\nexport const F12 = 123;\nexport const NUM_LOCK = 144;\nexport const SCROLL_LOCK = 145;\nexport const FIRST_MEDIA = 166;\nexport const FF_MINUS = 173;\nexport const MUTE = 173;            // Firefox (Gecko) fires 181 for MUTE\nexport const VOLUME_DOWN = 174;     // Firefox (Gecko) fires 182 for VOLUME_DOWN\nexport const VOLUME_UP = 175;       // Firefox (Gecko) fires 183 for VOLUME_UP\nexport const FF_MUTE = 181;\nexport const FF_VOLUME_DOWN = 182;\nexport const LAST_MEDIA = 183;\nexport const FF_VOLUME_UP = 183;\nexport const SEMICOLON = 186;       // Firefox (Gecko) fires 59 for SEMICOLON\nexport const EQUALS = 187;          // Firefox (Gecko) fires 61 for EQUALS\nexport const COMMA = 188;\nexport const DASH = 189;            // Firefox (Gecko) fires 173 for DASH/MINUS\nexport const PERIOD = 190;\nexport const SLASH = 191;\nexport const APOSTROPHE = 192;\nexport const TILDE = 192;\nexport const OPEN_SQUARE_BRACKET = 219;\nexport const BACKSLASH = 220;\nexport const CLOSE_SQUARE_BRACKET = 221;\nexport const SINGLE_QUOTE = 222;\nexport const MAC_META = 224;\n\ntype ModifierKey = 'altKey' | 'shiftKey' | 'ctrlKey' | 'metaKey';\n\nexport function hasModifierKey(event: KeyboardEvent | MouseEvent, ...modifiers: ModifierKey[]): boolean {\n    if (modifiers.length) {\n        return modifiers.some((modifier) => event[modifier]);\n    }\n\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\nexport function isControl(event: KeyboardEvent): boolean {\n    const keyCode = event.keyCode;\n\n    switch (keyCode) {\n        case SHIFT:\n        case CONTROL:\n        case ALT:\n            return true;\n        default:\n            return event.metaKey;\n    }\n}\n\nexport function isNumberKey({ keyCode }: KeyboardEvent): boolean {\n    return keyCode >= ZERO && keyCode <= NINE;\n}\n\nexport function isLetterKey({ keyCode }: KeyboardEvent): boolean {\n    return keyCode >= A && keyCode <= Z;\n}\n\nexport function isFunctionKey({ keyCode }: KeyboardEvent): boolean {\n    return keyCode >= F1 && keyCode <= F12;\n}\n\nexport function isVerticalMovement({ keyCode }: KeyboardEvent): boolean {\n    return [UP_ARROW, DOWN_ARROW, PAGE_DOWN, PAGE_UP, HOME, END].includes(keyCode);\n}\n\nexport function isHorizontalMovement({ keyCode }: KeyboardEvent): boolean {\n    return [LEFT_ARROW, RIGHT_ARROW, BACKSPACE, DELETE].includes(keyCode);\n}\n\nexport function isSelectAll(event: KeyboardEvent): boolean {\n    return event.ctrlKey && event.keyCode === A;\n}\n\nexport function isCopy(event: KeyboardEvent): boolean {\n    return (event.ctrlKey || event.metaKey) && event.keyCode === C;\n}\n\nexport function isInput(event): boolean {\n    return event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA';\n}\n\nexport function isLeftBracket(event: KeyboardEvent): boolean {\n    return event.code === 'BracketLeft';\n}\n\nexport function isRightBracket(event: KeyboardEvent): boolean {\n    return event.code === 'BracketRight';\n}\n\nexport function isDigit({ keyCode }: KeyboardEvent): boolean {\n    return [ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE].includes(keyCode);\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}}}