{"modules":[{"ast":{"type":"Program","start":0,"end":46302,"body":[{"type":"ImportDeclaration","start":0,"end":42,"specifiers":[{"type":"ImportSpecifier","start":9,"end":18,"imported":{"type":"Identifier","start":9,"end":18,"name":"QueryList"},"local":{"type":"Identifier","start":9,"end":18,"name":"QueryList"}}],"source":{"type":"Literal","start":26,"end":41,"value":"@angular/core","raw":"'@angular/core'"}},{"type":"ImportDeclaration","start":43,"end":166,"specifiers":[{"type":"ImportSpecifier","start":52,"end":60,"imported":{"type":"Identifier","start":52,"end":60,"name":"UP_ARROW"},"local":{"type":"Identifier","start":52,"end":60,"name":"UP_ARROW"}},{"type":"ImportSpecifier","start":62,"end":72,"imported":{"type":"Identifier","start":62,"end":72,"name":"DOWN_ARROW"},"local":{"type":"Identifier","start":62,"end":72,"name":"DOWN_ARROW"}},{"type":"ImportSpecifier","start":74,"end":84,"imported":{"type":"Identifier","start":74,"end":84,"name":"LEFT_ARROW"},"local":{"type":"Identifier","start":74,"end":84,"name":"LEFT_ARROW"}},{"type":"ImportSpecifier","start":86,"end":97,"imported":{"type":"Identifier","start":86,"end":97,"name":"RIGHT_ARROW"},"local":{"type":"Identifier","start":86,"end":97,"name":"RIGHT_ARROW"}},{"type":"ImportSpecifier","start":99,"end":102,"imported":{"type":"Identifier","start":99,"end":102,"name":"TAB"},"local":{"type":"Identifier","start":99,"end":102,"name":"TAB"}},{"type":"ImportSpecifier","start":104,"end":105,"imported":{"type":"Identifier","start":104,"end":105,"name":"A"},"local":{"type":"Identifier","start":104,"end":105,"name":"A"}},{"type":"ImportSpecifier","start":107,"end":108,"imported":{"type":"Identifier","start":107,"end":108,"name":"Z"},"local":{"type":"Identifier","start":107,"end":108,"name":"Z"}},{"type":"ImportSpecifier","start":110,"end":114,"imported":{"type":"Identifier","start":110,"end":114,"name":"ZERO"},"local":{"type":"Identifier","start":110,"end":114,"name":"ZERO"}},{"type":"ImportSpecifier","start":116,"end":120,"imported":{"type":"Identifier","start":116,"end":120,"name":"NINE"},"local":{"type":"Identifier","start":116,"end":120,"name":"NINE"}},{"type":"ImportSpecifier","start":122,"end":126,"imported":{"type":"Identifier","start":122,"end":126,"name":"HOME"},"local":{"type":"Identifier","start":122,"end":126,"name":"HOME"}},{"type":"ImportSpecifier","start":128,"end":131,"imported":{"type":"Identifier","start":128,"end":131,"name":"END"},"local":{"type":"Identifier","start":128,"end":131,"name":"END"}}],"source":{"type":"Literal","start":139,"end":165,"value":"@ptsecurity/cdk/keycodes","raw":"'@ptsecurity/cdk/keycodes'"}},{"type":"ImportDeclaration","start":167,"end":212,"specifiers":[{"type":"ImportSpecifier","start":176,"end":183,"imported":{"type":"Identifier","start":176,"end":183,"name":"Subject"},"local":{"type":"Identifier","start":176,"end":183,"name":"Subject"}},{"type":"ImportSpecifier","start":185,"end":197,"imported":{"type":"Identifier","start":185,"end":197,"name":"Subscription"},"local":{"type":"Identifier","start":185,"end":197,"name":"Subscription"}}],"source":{"type":"Literal","start":205,"end":211,"value":"rxjs","raw":"'rxjs'"}},{"type":"ImportDeclaration","start":213,"end":277,"specifiers":[{"type":"ImportSpecifier","start":222,"end":234,"imported":{"type":"Identifier","start":222,"end":234,"name":"debounceTime"},"local":{"type":"Identifier","start":222,"end":234,"name":"debounceTime"}},{"type":"ImportSpecifier","start":236,"end":242,"imported":{"type":"Identifier","start":236,"end":242,"name":"filter"},"local":{"type":"Identifier","start":236,"end":242,"name":"filter"}},{"type":"ImportSpecifier","start":244,"end":247,"imported":{"type":"Identifier","start":244,"end":247,"name":"map"},"local":{"type":"Identifier","start":244,"end":247,"name":"map"}},{"type":"ImportSpecifier","start":249,"end":252,"imported":{"type":"Identifier","start":249,"end":252,"name":"tap"},"local":{"type":"Identifier","start":249,"end":252,"name":"tap"}}],"source":{"type":"Literal","start":260,"end":276,"value":"rxjs/operators","raw":"'rxjs/operators'"}},{"type":"ExportNamedDeclaration","start":487,"end":13695,"declaration":{"type":"ClassDeclaration","start":494,"end":13695,"id":{"type":"Identifier","start":500,"end":514,"name":"ListKeyManager"},"superClass":null,"body":{"type":"ClassBody","start":515,"end":13695,"body":[{"type":"MethodDefinition","start":521,"end":2085,"static":false,"computed":false,"key":{"type":"Identifier","start":521,"end":532,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":532,"end":2085,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":533,"end":539,"name":"_items"}],"body":{"type":"BlockStatement","start":541,"end":2085,"body":[{"type":"ExpressionStatement","start":551,"end":572,"expression":{"type":"AssignmentExpression","start":551,"end":571,"operator":"=","left":{"type":"MemberExpression","start":551,"end":562,"object":{"type":"ThisExpression","start":551,"end":555},"property":{"type":"Identifier","start":556,"end":562,"name":"_items"},"computed":false,"optional":false},"right":{"type":"Identifier","start":565,"end":571,"name":"_items"}}},{"type":"ExpressionStatement","start":741,"end":769,"expression":{"type":"AssignmentExpression","start":741,"end":768,"operator":"=","left":{"type":"MemberExpression","start":741,"end":752,"object":{"type":"ThisExpression","start":741,"end":745},"property":{"type":"Identifier","start":746,"end":752,"name":"tabOut"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":755,"end":768,"callee":{"type":"Identifier","start":759,"end":766,"name":"Subject"},"arguments":[]}}},{"type":"ExpressionStatement","start":865,"end":893,"expression":{"type":"AssignmentExpression","start":865,"end":892,"operator":"=","left":{"type":"MemberExpression","start":865,"end":876,"object":{"type":"ThisExpression","start":865,"end":869},"property":{"type":"Identifier","start":870,"end":876,"name":"change"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":879,"end":892,"callee":{"type":"Identifier","start":883,"end":890,"name":"Subject"},"arguments":[]}}},{"type":"ExpressionStatement","start":902,"end":936,"expression":{"type":"AssignmentExpression","start":902,"end":935,"operator":"=","left":{"type":"MemberExpression","start":902,"end":930,"object":{"type":"ThisExpression","start":902,"end":906},"property":{"type":"Identifier","start":907,"end":930,"name":"previousActiveItemIndex"},"computed":false,"optional":false},"right":{"type":"UnaryExpression","start":933,"end":935,"operator":"-","prefix":true,"argument":{"type":"Literal","start":934,"end":935,"value":1,"raw":"1"}}}},{"type":"ExpressionStatement","start":945,"end":972,"expression":{"type":"AssignmentExpression","start":945,"end":971,"operator":"=","left":{"type":"MemberExpression","start":945,"end":966,"object":{"type":"ThisExpression","start":945,"end":949},"property":{"type":"Identifier","start":950,"end":966,"name":"_activeItemIndex"},"computed":false,"optional":false},"right":{"type":"UnaryExpression","start":969,"end":971,"operator":"-","prefix":true,"argument":{"type":"Literal","start":970,"end":971,"value":1,"raw":"1"}}}},{"type":"ExpressionStatement","start":981,"end":999,"expression":{"type":"AssignmentExpression","start":981,"end":998,"operator":"=","left":{"type":"MemberExpression","start":981,"end":990,"object":{"type":"ThisExpression","start":981,"end":985},"property":{"type":"Identifier","start":986,"end":990,"name":"wrap"},"computed":false,"optional":false},"right":{"type":"Literal","start":993,"end":998,"value":false,"raw":"false"}}},{"type":"ExpressionStatement","start":1008,"end":1045,"expression":{"type":"AssignmentExpression","start":1008,"end":1044,"operator":"=","left":{"type":"MemberExpression","start":1008,"end":1028,"object":{"type":"ThisExpression","start":1008,"end":1012},"property":{"type":"Identifier","start":1013,"end":1028,"name":"letterKeyStream"},"computed":false,"optional":false},"right":{"type":"NewExpression","start":1031,"end":1044,"callee":{"type":"Identifier","start":1035,"end":1042,"name":"Subject"},"arguments":[]}}},{"type":"ExpressionStatement","start":1054,"end":1102,"expression":{"type":"AssignmentExpression","start":1054,"end":1101,"operator":"=","left":{"type":"MemberExpression","start":1054,"end":1080,"object":{"type":"ThisExpression","start":1054,"end":1058},"property":{"type":"Identifier","start":1059,"end":1080,"name":"typeaheadSubscription"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":1083,"end":1101,"object":{"type":"Identifier","start":1083,"end":1095,"name":"Subscription"},"property":{"type":"Identifier","start":1096,"end":1101,"name":"EMPTY"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":1111,"end":1132,"expression":{"type":"AssignmentExpression","start":1111,"end":1131,"operator":"=","left":{"type":"MemberExpression","start":1111,"end":1124,"object":{"type":"ThisExpression","start":1111,"end":1115},"property":{"type":"Identifier","start":1116,"end":1124,"name":"vertical"},"computed":false,"optional":false},"right":{"type":"Literal","start":1127,"end":1131,"value":true,"raw":"true"}}},{"type":"ExpressionStatement","start":1141,"end":1161,"expression":{"type":"AssignmentExpression","start":1141,"end":1160,"operator":"=","left":{"type":"MemberExpression","start":1141,"end":1156,"object":{"type":"ThisExpression","start":1141,"end":1145},"property":{"type":"Identifier","start":1146,"end":1156,"name":"scrollSize"},"computed":false,"optional":false},"right":{"type":"Literal","start":1159,"end":1160,"value":0,"raw":"0"}}},{"type":"ExpressionStatement","start":1270,"end":1295,"expression":{"type":"AssignmentExpression","start":1270,"end":1294,"operator":"=","left":{"type":"MemberExpression","start":1270,"end":1289,"object":{"type":"ThisExpression","start":1270,"end":1274},"property":{"type":"Identifier","start":1275,"end":1289,"name":"pressedLetters"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":1292,"end":1294,"elements":[]}}},{"type":"ExpressionStatement","start":1304,"end":1328,"expression":{"type":"AssignmentExpression","start":1304,"end":1327,"operator":"=","left":{"type":"MemberExpression","start":1304,"end":1319,"object":{"type":"ThisExpression","start":1304,"end":1308},"property":{"type":"Identifier","start":1309,"end":1319,"name":"homeAndEnd"},"computed":false,"optional":false},"right":{"type":"Literal","start":1322,"end":1327,"value":false,"raw":"false"}}},{"type":"ExpressionStatement","start":1337,"end":1367,"expression":{"type":"AssignmentExpression","start":1337,"end":1366,"operator":"=","left":{"type":"MemberExpression","start":1337,"end":1361,"object":{"type":"ThisExpression","start":1337,"end":1341},"property":{"type":"Identifier","start":1342,"end":1361,"name":"allowedModifierKeys"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":1364,"end":1366,"elements":[]}}},{"type":"ExpressionStatement","start":1561,"end":1608,"expression":{"type":"AssignmentExpression","start":1561,"end":1607,"operator":"=","left":{"type":"MemberExpression","start":1561,"end":1581,"object":{"type":"ThisExpression","start":1561,"end":1565},"property":{"type":"Identifier","start":1566,"end":1581,"name":"skipPredicateFn"},"computed":false,"optional":false},"right":{"type":"ArrowFunctionExpression","start":1584,"end":1607,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":1585,"end":1589,"name":"item"}],"body":{"type":"MemberExpression","start":1594,"end":1607,"object":{"type":"Identifier","start":1594,"end":1598,"name":"item"},"property":{"type":"Identifier","start":1599,"end":1607,"name":"disabled"},"computed":false,"optional":false}}}},{"type":"IfStatement","start":1617,"end":2079,"test":{"type":"BinaryExpression","start":1621,"end":1648,"left":{"type":"Identifier","start":1621,"end":1627,"name":"_items"},"operator":"instanceof","right":{"type":"Identifier","start":1639,"end":1648,"name":"QueryList"}},"consequent":{"type":"BlockStatement","start":1650,"end":2079,"body":[{"type":"ExpressionStatement","start":1664,"end":2069,"expression":{"type":"CallExpression","start":1664,"end":2068,"callee":{"type":"MemberExpression","start":1664,"end":1688,"object":{"type":"MemberExpression","start":1664,"end":1678,"object":{"type":"Identifier","start":1664,"end":1670,"name":"_items"},"property":{"type":"Identifier","start":1671,"end":1678,"name":"changes"},"computed":false,"optional":false},"property":{"type":"Identifier","start":1679,"end":1688,"name":"subscribe"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":1689,"end":2067,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":1690,"end":1698,"name":"newItems"}],"body":{"type":"BlockStatement","start":1703,"end":2067,"body":[{"type":"IfStatement","start":1721,"end":2053,"test":{"type":"MemberExpression","start":1725,"end":1741,"object":{"type":"ThisExpression","start":1725,"end":1729},"property":{"type":"Identifier","start":1730,"end":1741,"name":"_activeItem"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":1743,"end":2053,"body":[{"type":"VariableDeclaration","start":1765,"end":1802,"declarations":[{"type":"VariableDeclarator","start":1771,"end":1801,"id":{"type":"Identifier","start":1771,"end":1780,"name":"itemArray"},"init":{"type":"CallExpression","start":1783,"end":1801,"callee":{"type":"MemberExpression","start":1783,"end":1799,"object":{"type":"Identifier","start":1783,"end":1791,"name":"newItems"},"property":{"type":"Identifier","start":1792,"end":1799,"name":"toArray"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":1823,"end":1876,"declarations":[{"type":"VariableDeclarator","start":1829,"end":1875,"id":{"type":"Identifier","start":1829,"end":1837,"name":"newIndex"},"init":{"type":"CallExpression","start":1840,"end":1875,"callee":{"type":"MemberExpression","start":1840,"end":1857,"object":{"type":"Identifier","start":1840,"end":1849,"name":"itemArray"},"property":{"type":"Identifier","start":1850,"end":1857,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":1858,"end":1874,"object":{"type":"ThisExpression","start":1858,"end":1862},"property":{"type":"Identifier","start":1863,"end":1874,"name":"_activeItem"},"computed":false,"optional":false}],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":1897,"end":2035,"test":{"type":"LogicalExpression","start":1901,"end":1952,"left":{"type":"BinaryExpression","start":1901,"end":1914,"left":{"type":"Identifier","start":1901,"end":1909,"name":"newIndex"},"operator":">","right":{"type":"UnaryExpression","start":1912,"end":1914,"operator":"-","prefix":true,"argument":{"type":"Literal","start":1913,"end":1914,"value":1,"raw":"1"}}},"operator":"&&","right":{"type":"BinaryExpression","start":1918,"end":1952,"left":{"type":"Identifier","start":1918,"end":1926,"name":"newIndex"},"operator":"!==","right":{"type":"MemberExpression","start":1931,"end":1952,"object":{"type":"ThisExpression","start":1931,"end":1935},"property":{"type":"Identifier","start":1936,"end":1952,"name":"_activeItemIndex"},"computed":false,"optional":false}}},"consequent":{"type":"BlockStatement","start":1954,"end":2035,"body":[{"type":"ExpressionStatement","start":1980,"end":2013,"expression":{"type":"AssignmentExpression","start":1980,"end":2012,"operator":"=","left":{"type":"MemberExpression","start":1980,"end":2001,"object":{"type":"ThisExpression","start":1980,"end":1984},"property":{"type":"Identifier","start":1985,"end":2001,"name":"_activeItemIndex"},"computed":false,"optional":false},"right":{"type":"Identifier","start":2004,"end":2012,"name":"newIndex"}}}]},"alternate":null}]},"alternate":null}]}}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":2133,"end":2200,"static":false,"computed":false,"key":{"type":"Identifier","start":2137,"end":2152,"name":"activeItemIndex"},"kind":"get","value":{"type":"FunctionExpression","start":2152,"end":2200,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2155,"end":2200,"body":[{"type":"ReturnStatement","start":2165,"end":2194,"argument":{"type":"MemberExpression","start":2172,"end":2193,"object":{"type":"ThisExpression","start":2172,"end":2176},"property":{"type":"Identifier","start":2177,"end":2193,"name":"_activeItemIndex"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":2229,"end":2286,"static":false,"computed":false,"key":{"type":"Identifier","start":2233,"end":2243,"name":"activeItem"},"kind":"get","value":{"type":"FunctionExpression","start":2243,"end":2286,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2246,"end":2286,"body":[{"type":"ReturnStatement","start":2256,"end":2280,"argument":{"type":"MemberExpression","start":2263,"end":2279,"object":{"type":"ThisExpression","start":2263,"end":2267},"property":{"type":"Identifier","start":2268,"end":2279,"name":"_activeItem"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":2390,"end":2455,"static":false,"computed":false,"key":{"type":"Identifier","start":2390,"end":2398,"name":"isTyping"},"kind":"method","value":{"type":"FunctionExpression","start":2398,"end":2455,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":2401,"end":2455,"body":[{"type":"ReturnStatement","start":2411,"end":2449,"argument":{"type":"BinaryExpression","start":2418,"end":2448,"left":{"type":"MemberExpression","start":2418,"end":2444,"object":{"type":"MemberExpression","start":2418,"end":2437,"object":{"type":"ThisExpression","start":2418,"end":2422},"property":{"type":"Identifier","start":2423,"end":2437,"name":"pressedLetters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":2438,"end":2444,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":2447,"end":2448,"value":0,"raw":"0"}}}]}}},{"type":"MethodDefinition","start":2460,"end":2553,"static":false,"computed":false,"key":{"type":"Identifier","start":2460,"end":2474,"name":"withScrollSize"},"kind":"method","value":{"type":"FunctionExpression","start":2474,"end":2553,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2475,"end":2485,"name":"scrollSize"}],"body":{"type":"BlockStatement","start":2487,"end":2553,"body":[{"type":"ExpressionStatement","start":2497,"end":2526,"expression":{"type":"AssignmentExpression","start":2497,"end":2525,"operator":"=","left":{"type":"MemberExpression","start":2497,"end":2512,"object":{"type":"ThisExpression","start":2497,"end":2501},"property":{"type":"Identifier","start":2502,"end":2512,"name":"scrollSize"},"computed":false,"optional":false},"right":{"type":"Identifier","start":2515,"end":2525,"name":"scrollSize"}}},{"type":"ReturnStatement","start":2535,"end":2547,"argument":{"type":"ThisExpression","start":2542,"end":2546}}]}}},{"type":"MethodDefinition","start":2764,"end":2863,"static":false,"computed":false,"key":{"type":"Identifier","start":2764,"end":2787,"name":"withAllowedModifierKeys"},"kind":"method","value":{"type":"FunctionExpression","start":2787,"end":2863,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":2788,"end":2792,"name":"keys"}],"body":{"type":"BlockStatement","start":2794,"end":2863,"body":[{"type":"ExpressionStatement","start":2804,"end":2836,"expression":{"type":"AssignmentExpression","start":2804,"end":2835,"operator":"=","left":{"type":"MemberExpression","start":2804,"end":2828,"object":{"type":"ThisExpression","start":2804,"end":2808},"property":{"type":"Identifier","start":2809,"end":2828,"name":"allowedModifierKeys"},"computed":false,"optional":false},"right":{"type":"Identifier","start":2831,"end":2835,"name":"keys"}}},{"type":"ReturnStatement","start":2845,"end":2857,"argument":{"type":"ThisExpression","start":2852,"end":2856}}]}}},{"type":"MethodDefinition","start":3045,"end":3133,"static":false,"computed":false,"key":{"type":"Identifier","start":3045,"end":3053,"name":"withWrap"},"kind":"method","value":{"type":"FunctionExpression","start":3053,"end":3133,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"AssignmentPattern","start":3054,"end":3071,"left":{"type":"Identifier","start":3054,"end":3064,"name":"shouldWrap"},"right":{"type":"Literal","start":3067,"end":3071,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":3073,"end":3133,"body":[{"type":"ExpressionStatement","start":3083,"end":3106,"expression":{"type":"AssignmentExpression","start":3083,"end":3105,"operator":"=","left":{"type":"MemberExpression","start":3083,"end":3092,"object":{"type":"ThisExpression","start":3083,"end":3087},"property":{"type":"Identifier","start":3088,"end":3092,"name":"wrap"},"computed":false,"optional":false},"right":{"type":"Identifier","start":3095,"end":3105,"name":"shouldWrap"}}},{"type":"ReturnStatement","start":3115,"end":3127,"argument":{"type":"ThisExpression","start":3122,"end":3126}}]}}},{"type":"MethodDefinition","start":3358,"end":3453,"static":false,"computed":false,"key":{"type":"Identifier","start":3358,"end":3371,"name":"skipPredicate"},"kind":"method","value":{"type":"FunctionExpression","start":3371,"end":3453,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3372,"end":3381,"name":"predicate"}],"body":{"type":"BlockStatement","start":3383,"end":3453,"body":[{"type":"ExpressionStatement","start":3393,"end":3426,"expression":{"type":"AssignmentExpression","start":3393,"end":3425,"operator":"=","left":{"type":"MemberExpression","start":3393,"end":3413,"object":{"type":"ThisExpression","start":3393,"end":3397},"property":{"type":"Identifier","start":3398,"end":3413,"name":"skipPredicateFn"},"computed":false,"optional":false},"right":{"type":"Identifier","start":3416,"end":3425,"name":"predicate"}}},{"type":"ReturnStatement","start":3435,"end":3447,"argument":{"type":"ThisExpression","start":3442,"end":3446}}]}}},{"type":"MethodDefinition","start":3633,"end":3734,"static":false,"computed":false,"key":{"type":"Identifier","start":3633,"end":3656,"name":"withVerticalOrientation"},"kind":"method","value":{"type":"FunctionExpression","start":3656,"end":3734,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"AssignmentPattern","start":3657,"end":3671,"left":{"type":"Identifier","start":3657,"end":3664,"name":"enabled"},"right":{"type":"Literal","start":3667,"end":3671,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":3673,"end":3734,"body":[{"type":"ExpressionStatement","start":3683,"end":3707,"expression":{"type":"AssignmentExpression","start":3683,"end":3706,"operator":"=","left":{"type":"MemberExpression","start":3683,"end":3696,"object":{"type":"ThisExpression","start":3683,"end":3687},"property":{"type":"Identifier","start":3688,"end":3696,"name":"vertical"},"computed":false,"optional":false},"right":{"type":"Identifier","start":3699,"end":3706,"name":"enabled"}}},{"type":"ReturnStatement","start":3716,"end":3728,"argument":{"type":"ThisExpression","start":3723,"end":3727}}]}}},{"type":"MethodDefinition","start":3955,"end":4057,"static":false,"computed":false,"key":{"type":"Identifier","start":3955,"end":3980,"name":"withHorizontalOrientation"},"kind":"method","value":{"type":"FunctionExpression","start":3980,"end":4057,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":3981,"end":3990,"name":"direction"}],"body":{"type":"BlockStatement","start":3992,"end":4057,"body":[{"type":"ExpressionStatement","start":4002,"end":4030,"expression":{"type":"AssignmentExpression","start":4002,"end":4029,"operator":"=","left":{"type":"MemberExpression","start":4002,"end":4017,"object":{"type":"ThisExpression","start":4002,"end":4006},"property":{"type":"Identifier","start":4007,"end":4017,"name":"horizontal"},"computed":false,"optional":false},"right":{"type":"Identifier","start":4020,"end":4029,"name":"direction"}}},{"type":"ReturnStatement","start":4039,"end":4051,"argument":{"type":"ThisExpression","start":4046,"end":4050}}]}}},{"type":"MethodDefinition","start":4360,"end":5992,"static":false,"computed":false,"key":{"type":"Identifier","start":4360,"end":4373,"name":"withTypeAhead"},"kind":"method","value":{"type":"FunctionExpression","start":4373,"end":5992,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"AssignmentPattern","start":4374,"end":4396,"left":{"type":"Identifier","start":4374,"end":4390,"name":"debounceInterval"},"right":{"type":"Literal","start":4393,"end":4396,"value":200,"raw":"200"}},{"type":"AssignmentPattern","start":4398,"end":4419,"left":{"type":"Identifier","start":4398,"end":4415,"name":"searchLetterIndex"},"right":{"type":"Literal","start":4418,"end":4419,"value":0,"raw":"0"}}],"body":{"type":"BlockStatement","start":4421,"end":5992,"body":[{"type":"IfStatement","start":4431,"end":4638,"test":{"type":"LogicalExpression","start":4435,"end":4520,"left":{"type":"MemberExpression","start":4435,"end":4453,"object":{"type":"MemberExpression","start":4435,"end":4446,"object":{"type":"ThisExpression","start":4435,"end":4439},"property":{"type":"Identifier","start":4440,"end":4446,"name":"_items"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4447,"end":4453,"name":"length"},"computed":false,"optional":false},"operator":"&&","right":{"type":"CallExpression","start":4457,"end":4520,"callee":{"type":"MemberExpression","start":4457,"end":4473,"object":{"type":"MemberExpression","start":4457,"end":4468,"object":{"type":"ThisExpression","start":4457,"end":4461},"property":{"type":"Identifier","start":4462,"end":4468,"name":"_items"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4469,"end":4473,"name":"some"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":4474,"end":4519,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":4475,"end":4479,"name":"item"}],"body":{"type":"BinaryExpression","start":4484,"end":4519,"left":{"type":"UnaryExpression","start":4484,"end":4504,"operator":"typeof","prefix":true,"argument":{"type":"MemberExpression","start":4491,"end":4504,"object":{"type":"Identifier","start":4491,"end":4495,"name":"item"},"property":{"type":"Identifier","start":4496,"end":4504,"name":"getLabel"},"computed":false,"optional":false}},"operator":"!==","right":{"type":"Literal","start":4509,"end":4519,"value":"function","raw":"'function'"}}}],"optional":false}},"consequent":{"type":"BlockStatement","start":4522,"end":4638,"body":[{"type":"ThrowStatement","start":4536,"end":4628,"argument":{"type":"CallExpression","start":4542,"end":4627,"callee":{"type":"Identifier","start":4542,"end":4547,"name":"Error"},"arguments":[{"type":"Literal","start":4548,"end":4626,"value":"ListKeyManager items in typeahead mode must implement the `getLabel` method.","raw":"'ListKeyManager items in typeahead mode must implement the `getLabel` method.'"}],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":4647,"end":4688,"expression":{"type":"CallExpression","start":4647,"end":4687,"callee":{"type":"MemberExpression","start":4647,"end":4685,"object":{"type":"MemberExpression","start":4647,"end":4673,"object":{"type":"ThisExpression","start":4647,"end":4651},"property":{"type":"Identifier","start":4652,"end":4673,"name":"typeaheadSubscription"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4674,"end":4685,"name":"unsubscribe"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ExpressionStatement","start":4931,"end":5965,"expression":{"type":"AssignmentExpression","start":4931,"end":5964,"operator":"=","left":{"type":"MemberExpression","start":4931,"end":4957,"object":{"type":"ThisExpression","start":4931,"end":4935},"property":{"type":"Identifier","start":4936,"end":4957,"name":"typeaheadSubscription"},"computed":false,"optional":false},"right":{"type":"CallExpression","start":4960,"end":5964,"callee":{"type":"MemberExpression","start":4960,"end":5167,"object":{"type":"CallExpression","start":4960,"end":5157,"callee":{"type":"MemberExpression","start":4960,"end":4985,"object":{"type":"MemberExpression","start":4960,"end":4980,"object":{"type":"ThisExpression","start":4960,"end":4964},"property":{"type":"Identifier","start":4965,"end":4980,"name":"letterKeyStream"},"computed":false,"optional":false},"property":{"type":"Identifier","start":4981,"end":4985,"name":"pipe"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":4986,"end":5037,"callee":{"type":"Identifier","start":4986,"end":4989,"name":"tap"},"arguments":[{"type":"ArrowFunctionExpression","start":4990,"end":5036,"id":null,"expression":true,"generator":false,"async":false,"params":[{"type":"Identifier","start":4991,"end":4998,"name":"keyCode"}],"body":{"type":"CallExpression","start":5003,"end":5036,"callee":{"type":"MemberExpression","start":5003,"end":5027,"object":{"type":"MemberExpression","start":5003,"end":5022,"object":{"type":"ThisExpression","start":5003,"end":5007},"property":{"type":"Identifier","start":5008,"end":5022,"name":"pressedLetters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5023,"end":5027,"name":"push"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5028,"end":5035,"name":"keyCode"}],"optional":false}}],"optional":false},{"type":"CallExpression","start":5039,"end":5069,"callee":{"type":"Identifier","start":5039,"end":5051,"name":"debounceTime"},"arguments":[{"type":"Identifier","start":5052,"end":5068,"name":"debounceInterval"}],"optional":false},{"type":"CallExpression","start":5071,"end":5115,"callee":{"type":"Identifier","start":5071,"end":5077,"name":"filter"},"arguments":[{"type":"ArrowFunctionExpression","start":5078,"end":5114,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"BinaryExpression","start":5084,"end":5114,"left":{"type":"MemberExpression","start":5084,"end":5110,"object":{"type":"MemberExpression","start":5084,"end":5103,"object":{"type":"ThisExpression","start":5084,"end":5088},"property":{"type":"Identifier","start":5089,"end":5103,"name":"pressedLetters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5104,"end":5110,"name":"length"},"computed":false,"optional":false},"operator":">","right":{"type":"Literal","start":5113,"end":5114,"value":0,"raw":"0"}}}],"optional":false},{"type":"CallExpression","start":5117,"end":5156,"callee":{"type":"Identifier","start":5117,"end":5120,"name":"map"},"arguments":[{"type":"ArrowFunctionExpression","start":5121,"end":5155,"id":null,"expression":true,"generator":false,"async":false,"params":[],"body":{"type":"CallExpression","start":5127,"end":5155,"callee":{"type":"MemberExpression","start":5127,"end":5151,"object":{"type":"MemberExpression","start":5127,"end":5146,"object":{"type":"ThisExpression","start":5127,"end":5131},"property":{"type":"Identifier","start":5132,"end":5146,"name":"pressedLetters"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5147,"end":5151,"name":"join"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":5152,"end":5154,"value":"","raw":"''"}],"optional":false}}],"optional":false}],"optional":false},"property":{"type":"Identifier","start":5158,"end":5167,"name":"subscribe"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":5168,"end":5963,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":5169,"end":5180,"name":"inputString"}],"body":{"type":"BlockStatement","start":5185,"end":5963,"body":[{"type":"IfStatement","start":5199,"end":5310,"test":{"type":"BinaryExpression","start":5203,"end":5227,"left":{"type":"Identifier","start":5203,"end":5220,"name":"searchLetterIndex"},"operator":"===","right":{"type":"UnaryExpression","start":5225,"end":5227,"operator":"-","prefix":true,"argument":{"type":"Literal","start":5226,"end":5227,"value":1,"raw":"1"}}},"consequent":{"type":"BlockStatement","start":5229,"end":5310,"body":[{"type":"ExpressionStatement","start":5247,"end":5272,"expression":{"type":"AssignmentExpression","start":5247,"end":5271,"operator":"=","left":{"type":"MemberExpression","start":5247,"end":5266,"object":{"type":"ThisExpression","start":5247,"end":5251},"property":{"type":"Identifier","start":5252,"end":5266,"name":"pressedLetters"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":5269,"end":5271,"elements":[]}}},{"type":"ReturnStatement","start":5289,"end":5296,"argument":null}]},"alternate":null},{"type":"VariableDeclaration","start":5323,"end":5359,"declarations":[{"type":"VariableDeclarator","start":5329,"end":5358,"id":{"type":"Identifier","start":5329,"end":5334,"name":"items"},"init":{"type":"CallExpression","start":5337,"end":5358,"callee":{"type":"MemberExpression","start":5337,"end":5356,"object":{"type":"MemberExpression","start":5337,"end":5348,"object":{"type":"ThisExpression","start":5337,"end":5341},"property":{"type":"Identifier","start":5342,"end":5348,"name":"_items"},"computed":false,"optional":false},"property":{"type":"Identifier","start":5349,"end":5356,"name":"toArray"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ForStatement","start":5507,"end":5915,"init":{"type":"VariableDeclaration","start":5512,"end":5521,"declarations":[{"type":"VariableDeclarator","start":5516,"end":5521,"id":{"type":"Identifier","start":5516,"end":5517,"name":"i"},"init":{"type":"Literal","start":5520,"end":5521,"value":1,"raw":"1"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":5523,"end":5543,"left":{"type":"Identifier","start":5523,"end":5524,"name":"i"},"operator":"<","right":{"type":"BinaryExpression","start":5527,"end":5543,"left":{"type":"MemberExpression","start":5527,"end":5539,"object":{"type":"Identifier","start":5527,"end":5532,"name":"items"},"property":{"type":"Identifier","start":5533,"end":5539,"name":"length"},"computed":false,"optional":false},"operator":"+","right":{"type":"Literal","start":5542,"end":5543,"value":1,"raw":"1"}}},"update":{"type":"UpdateExpression","start":5545,"end":5548,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":5545,"end":5546,"name":"i"}},"body":{"type":"BlockStatement","start":5550,"end":5915,"body":[{"type":"VariableDeclaration","start":5568,"end":5625,"declarations":[{"type":"VariableDeclarator","start":5574,"end":5624,"id":{"type":"Identifier","start":5574,"end":5579,"name":"index"},"init":{"type":"BinaryExpression","start":5582,"end":5624,"left":{"type":"BinaryExpression","start":5583,"end":5608,"left":{"type":"MemberExpression","start":5583,"end":5604,"object":{"type":"ThisExpression","start":5583,"end":5587},"property":{"type":"Identifier","start":5588,"end":5604,"name":"_activeItemIndex"},"computed":false,"optional":false},"operator":"+","right":{"type":"Identifier","start":5607,"end":5608,"name":"i"}},"operator":"%","right":{"type":"MemberExpression","start":5612,"end":5624,"object":{"type":"Identifier","start":5612,"end":5617,"name":"items"},"property":{"type":"Identifier","start":5618,"end":5624,"name":"length"},"computed":false,"optional":false}}}],"kind":"const"},{"type":"VariableDeclaration","start":5642,"end":5668,"declarations":[{"type":"VariableDeclarator","start":5648,"end":5667,"id":{"type":"Identifier","start":5648,"end":5652,"name":"item"},"init":{"type":"MemberExpression","start":5655,"end":5667,"object":{"type":"Identifier","start":5655,"end":5660,"name":"items"},"property":{"type":"Identifier","start":5661,"end":5666,"name":"index"},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":5685,"end":5901,"test":{"type":"LogicalExpression","start":5689,"end":5806,"left":{"type":"UnaryExpression","start":5689,"end":5703,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":5690,"end":5703,"object":{"type":"Identifier","start":5690,"end":5694,"name":"item"},"property":{"type":"Identifier","start":5695,"end":5703,"name":"disabled"},"computed":false,"optional":false}},"operator":"&&","right":{"type":"BinaryExpression","start":5727,"end":5806,"left":{"type":"CallExpression","start":5727,"end":5784,"callee":{"type":"MemberExpression","start":5727,"end":5771,"object":{"type":"CallExpression","start":5727,"end":5763,"callee":{"type":"MemberExpression","start":5727,"end":5761,"object":{"type":"CallExpression","start":5727,"end":5756,"callee":{"type":"MemberExpression","start":5727,"end":5754,"object":{"type":"CallExpression","start":5727,"end":5742,"callee":{"type":"MemberExpression","start":5727,"end":5740,"object":{"type":"Identifier","start":5727,"end":5731,"name":"item"},"property":{"type":"Identifier","start":5732,"end":5740,"name":"getLabel"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":5743,"end":5754,"name":"toUpperCase"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":5757,"end":5761,"name":"trim"},"computed":false,"optional":false},"arguments":[],"optional":false},"property":{"type":"Identifier","start":5764,"end":5771,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5772,"end":5783,"name":"inputString"}],"optional":false},"operator":"===","right":{"type":"Identifier","start":5789,"end":5806,"name":"searchLetterIndex"}}},"consequent":{"type":"BlockStatement","start":5808,"end":5901,"body":[{"type":"ExpressionStatement","start":5830,"end":5856,"expression":{"type":"CallExpression","start":5830,"end":5855,"callee":{"type":"MemberExpression","start":5830,"end":5848,"object":{"type":"ThisExpression","start":5830,"end":5834},"property":{"type":"Identifier","start":5835,"end":5848,"name":"setActiveItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":5849,"end":5854,"name":"index"}],"optional":false}},{"type":"BreakStatement","start":5877,"end":5883,"label":null}]},"alternate":null}]}},{"type":"ExpressionStatement","start":5928,"end":5953,"expression":{"type":"AssignmentExpression","start":5928,"end":5952,"operator":"=","left":{"type":"MemberExpression","start":5928,"end":5947,"object":{"type":"ThisExpression","start":5928,"end":5932},"property":{"type":"Identifier","start":5933,"end":5947,"name":"pressedLetters"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":5950,"end":5952,"elements":[]}}}]}}],"optional":false}}},{"type":"ReturnStatement","start":5974,"end":5986,"argument":{"type":"ThisExpression","start":5981,"end":5985}}]}}},{"type":"MethodDefinition","start":6231,"end":6325,"static":false,"computed":false,"key":{"type":"Identifier","start":6231,"end":6245,"name":"withHomeAndEnd"},"kind":"method","value":{"type":"FunctionExpression","start":6245,"end":6325,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"AssignmentPattern","start":6246,"end":6260,"left":{"type":"Identifier","start":6246,"end":6253,"name":"enabled"},"right":{"type":"Literal","start":6256,"end":6260,"value":true,"raw":"true"}}],"body":{"type":"BlockStatement","start":6262,"end":6325,"body":[{"type":"ExpressionStatement","start":6272,"end":6298,"expression":{"type":"AssignmentExpression","start":6272,"end":6297,"operator":"=","left":{"type":"MemberExpression","start":6272,"end":6287,"object":{"type":"ThisExpression","start":6272,"end":6276},"property":{"type":"Identifier","start":6277,"end":6287,"name":"homeAndEnd"},"computed":false,"optional":false},"right":{"type":"Identifier","start":6290,"end":6297,"name":"enabled"}}},{"type":"ReturnStatement","start":6307,"end":6319,"argument":{"type":"ThisExpression","start":6314,"end":6318}}]}}},{"type":"MethodDefinition","start":6472,"end":6731,"static":false,"computed":false,"key":{"type":"Identifier","start":6472,"end":6485,"name":"setActiveItem"},"kind":"method","value":{"type":"FunctionExpression","start":6485,"end":6731,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6486,"end":6490,"name":"item"}],"body":{"type":"BlockStatement","start":6492,"end":6731,"body":[{"type":"ExpressionStatement","start":6502,"end":6555,"expression":{"type":"AssignmentExpression","start":6502,"end":6554,"operator":"=","left":{"type":"MemberExpression","start":6502,"end":6530,"object":{"type":"ThisExpression","start":6502,"end":6506},"property":{"type":"Identifier","start":6507,"end":6530,"name":"previousActiveItemIndex"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":6533,"end":6554,"object":{"type":"ThisExpression","start":6533,"end":6537},"property":{"type":"Identifier","start":6538,"end":6554,"name":"_activeItemIndex"},"computed":false,"optional":false}}},{"type":"ExpressionStatement","start":6564,"end":6592,"expression":{"type":"CallExpression","start":6564,"end":6591,"callee":{"type":"MemberExpression","start":6564,"end":6585,"object":{"type":"ThisExpression","start":6564,"end":6568},"property":{"type":"Identifier","start":6569,"end":6585,"name":"updateActiveItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":6586,"end":6590,"name":"item"}],"optional":false}},{"type":"IfStatement","start":6601,"end":6725,"test":{"type":"BinaryExpression","start":6605,"end":6659,"left":{"type":"MemberExpression","start":6605,"end":6626,"object":{"type":"ThisExpression","start":6605,"end":6609},"property":{"type":"Identifier","start":6610,"end":6626,"name":"_activeItemIndex"},"computed":false,"optional":false},"operator":"!==","right":{"type":"MemberExpression","start":6631,"end":6659,"object":{"type":"ThisExpression","start":6631,"end":6635},"property":{"type":"Identifier","start":6636,"end":6659,"name":"previousActiveItemIndex"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":6661,"end":6725,"body":[{"type":"ExpressionStatement","start":6675,"end":6715,"expression":{"type":"CallExpression","start":6675,"end":6714,"callee":{"type":"MemberExpression","start":6675,"end":6691,"object":{"type":"MemberExpression","start":6675,"end":6686,"object":{"type":"ThisExpression","start":6675,"end":6679},"property":{"type":"Identifier","start":6680,"end":6686,"name":"change"},"computed":false,"optional":false},"property":{"type":"Identifier","start":6687,"end":6691,"name":"next"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":6692,"end":6713,"object":{"type":"ThisExpression","start":6692,"end":6696},"property":{"type":"Identifier","start":6697,"end":6713,"name":"_activeItemIndex"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}},{"type":"MethodDefinition","start":6966,"end":9943,"static":false,"computed":false,"key":{"type":"Identifier","start":6966,"end":6975,"name":"onKeydown"},"kind":"method","value":{"type":"FunctionExpression","start":6975,"end":9943,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":6976,"end":6981,"name":"event"}],"body":{"type":"BlockStatement","start":6983,"end":9943,"body":[{"type":"VariableDeclaration","start":7042,"end":7072,"declarations":[{"type":"VariableDeclarator","start":7048,"end":7071,"id":{"type":"Identifier","start":7048,"end":7055,"name":"keyCode"},"init":{"type":"MemberExpression","start":7058,"end":7071,"object":{"type":"Identifier","start":7058,"end":7063,"name":"event"},"property":{"type":"Identifier","start":7064,"end":7071,"name":"keyCode"},"computed":false,"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":7081,"end":7144,"declarations":[{"type":"VariableDeclarator","start":7087,"end":7143,"id":{"type":"Identifier","start":7087,"end":7096,"name":"modifiers"},"init":{"type":"ArrayExpression","start":7099,"end":7143,"elements":[{"type":"Literal","start":7100,"end":7108,"value":"altKey","raw":"'altKey'"},{"type":"Literal","start":7110,"end":7119,"value":"ctrlKey","raw":"'ctrlKey'"},{"type":"Literal","start":7121,"end":7130,"value":"metaKey","raw":"'metaKey'"},{"type":"Literal","start":7132,"end":7142,"value":"shiftKey","raw":"'shiftKey'"}]}}],"kind":"const"},{"type":"VariableDeclaration","start":7153,"end":7310,"declarations":[{"type":"VariableDeclarator","start":7159,"end":7309,"id":{"type":"Identifier","start":7159,"end":7176,"name":"isModifierAllowed"},"init":{"type":"CallExpression","start":7179,"end":7309,"callee":{"type":"MemberExpression","start":7179,"end":7194,"object":{"type":"Identifier","start":7179,"end":7188,"name":"modifiers"},"property":{"type":"Identifier","start":7189,"end":7194,"name":"every"},"computed":false,"optional":false},"arguments":[{"type":"ArrowFunctionExpression","start":7195,"end":7308,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":7196,"end":7204,"name":"modifier"}],"body":{"type":"BlockStatement","start":7209,"end":7308,"body":[{"type":"ReturnStatement","start":7223,"end":7298,"argument":{"type":"LogicalExpression","start":7230,"end":7297,"left":{"type":"UnaryExpression","start":7230,"end":7246,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":7231,"end":7246,"object":{"type":"Identifier","start":7231,"end":7236,"name":"event"},"property":{"type":"Identifier","start":7237,"end":7245,"name":"modifier"},"computed":true,"optional":false}},"operator":"||","right":{"type":"BinaryExpression","start":7250,"end":7297,"left":{"type":"CallExpression","start":7250,"end":7292,"callee":{"type":"MemberExpression","start":7250,"end":7282,"object":{"type":"MemberExpression","start":7250,"end":7274,"object":{"type":"ThisExpression","start":7250,"end":7254},"property":{"type":"Identifier","start":7255,"end":7274,"name":"allowedModifierKeys"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7275,"end":7282,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":7283,"end":7291,"name":"modifier"}],"optional":false},"operator":">","right":{"type":"UnaryExpression","start":7295,"end":7297,"operator":"-","prefix":true,"argument":{"type":"Literal","start":7296,"end":7297,"value":1,"raw":"1"}}}}}]}}],"optional":false}}],"kind":"const"},{"type":"SwitchStatement","start":7319,"end":9871,"discriminant":{"type":"Identifier","start":7327,"end":7334,"name":"keyCode"},"cases":[{"type":"SwitchCase","start":7350,"end":7419,"consequent":[{"type":"ExpressionStatement","start":7376,"end":7395,"expression":{"type":"CallExpression","start":7376,"end":7394,"callee":{"type":"MemberExpression","start":7376,"end":7392,"object":{"type":"MemberExpression","start":7376,"end":7387,"object":{"type":"ThisExpression","start":7376,"end":7380},"property":{"type":"Identifier","start":7381,"end":7387,"name":"tabOut"},"computed":false,"optional":false},"property":{"type":"Identifier","start":7388,"end":7392,"name":"next"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"ReturnStatement","start":7412,"end":7419,"argument":null}],"test":{"type":"Identifier","start":7355,"end":7358,"name":"TAB"}},{"type":"SwitchCase","start":7432,"end":7645,"consequent":[{"type":"IfStatement","start":7465,"end":7645,"test":{"type":"MemberExpression","start":7469,"end":7482,"object":{"type":"ThisExpression","start":7469,"end":7473},"property":{"type":"Identifier","start":7474,"end":7482,"name":"vertical"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":7484,"end":7576,"body":[{"type":"ExpressionStatement","start":7506,"end":7531,"expression":{"type":"CallExpression","start":7506,"end":7530,"callee":{"type":"MemberExpression","start":7506,"end":7528,"object":{"type":"ThisExpression","start":7506,"end":7510},"property":{"type":"Identifier","start":7511,"end":7528,"name":"setNextItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"BreakStatement","start":7552,"end":7558,"label":null}]},"alternate":{"type":"BlockStatement","start":7598,"end":7645,"body":[{"type":"ReturnStatement","start":7620,"end":7627,"argument":null}]}}],"test":{"type":"Identifier","start":7437,"end":7447,"name":"DOWN_ARROW"}},{"type":"SwitchCase","start":7658,"end":7873,"consequent":[{"type":"IfStatement","start":7689,"end":7873,"test":{"type":"MemberExpression","start":7693,"end":7706,"object":{"type":"ThisExpression","start":7693,"end":7697},"property":{"type":"Identifier","start":7698,"end":7706,"name":"vertical"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":7708,"end":7804,"body":[{"type":"ExpressionStatement","start":7730,"end":7759,"expression":{"type":"CallExpression","start":7730,"end":7758,"callee":{"type":"MemberExpression","start":7730,"end":7756,"object":{"type":"ThisExpression","start":7730,"end":7734},"property":{"type":"Identifier","start":7735,"end":7756,"name":"setPreviousItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"BreakStatement","start":7780,"end":7786,"label":null}]},"alternate":{"type":"BlockStatement","start":7826,"end":7873,"body":[{"type":"ReturnStatement","start":7848,"end":7855,"argument":null}]}}],"test":{"type":"Identifier","start":7663,"end":7671,"name":"UP_ARROW"}},{"type":"SwitchCase","start":7886,"end":8261,"consequent":[{"type":"IfStatement","start":7920,"end":8261,"test":{"type":"BinaryExpression","start":7924,"end":7949,"left":{"type":"MemberExpression","start":7924,"end":7939,"object":{"type":"ThisExpression","start":7924,"end":7928},"property":{"type":"Identifier","start":7929,"end":7939,"name":"horizontal"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":7944,"end":7949,"value":"ltr","raw":"'ltr'"}},"consequent":{"type":"BlockStatement","start":7951,"end":8043,"body":[{"type":"ExpressionStatement","start":7973,"end":7998,"expression":{"type":"CallExpression","start":7973,"end":7997,"callee":{"type":"MemberExpression","start":7973,"end":7995,"object":{"type":"ThisExpression","start":7973,"end":7977},"property":{"type":"Identifier","start":7978,"end":7995,"name":"setNextItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"BreakStatement","start":8019,"end":8025,"label":null}]},"alternate":{"type":"IfStatement","start":8065,"end":8261,"test":{"type":"BinaryExpression","start":8069,"end":8094,"left":{"type":"MemberExpression","start":8069,"end":8084,"object":{"type":"ThisExpression","start":8069,"end":8073},"property":{"type":"Identifier","start":8074,"end":8084,"name":"horizontal"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":8089,"end":8094,"value":"rtl","raw":"'rtl'"}},"consequent":{"type":"BlockStatement","start":8096,"end":8192,"body":[{"type":"ExpressionStatement","start":8118,"end":8147,"expression":{"type":"CallExpression","start":8118,"end":8146,"callee":{"type":"MemberExpression","start":8118,"end":8144,"object":{"type":"ThisExpression","start":8118,"end":8122},"property":{"type":"Identifier","start":8123,"end":8144,"name":"setPreviousItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"BreakStatement","start":8168,"end":8174,"label":null}]},"alternate":{"type":"BlockStatement","start":8214,"end":8261,"body":[{"type":"ReturnStatement","start":8236,"end":8243,"argument":null}]}}}],"test":{"type":"Identifier","start":7891,"end":7902,"name":"RIGHT_ARROW"}},{"type":"SwitchCase","start":8274,"end":8648,"consequent":[{"type":"IfStatement","start":8307,"end":8648,"test":{"type":"BinaryExpression","start":8311,"end":8336,"left":{"type":"MemberExpression","start":8311,"end":8326,"object":{"type":"ThisExpression","start":8311,"end":8315},"property":{"type":"Identifier","start":8316,"end":8326,"name":"horizontal"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":8331,"end":8336,"value":"ltr","raw":"'ltr'"}},"consequent":{"type":"BlockStatement","start":8338,"end":8434,"body":[{"type":"ExpressionStatement","start":8360,"end":8389,"expression":{"type":"CallExpression","start":8360,"end":8388,"callee":{"type":"MemberExpression","start":8360,"end":8386,"object":{"type":"ThisExpression","start":8360,"end":8364},"property":{"type":"Identifier","start":8365,"end":8386,"name":"setPreviousItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"BreakStatement","start":8410,"end":8416,"label":null}]},"alternate":{"type":"IfStatement","start":8456,"end":8648,"test":{"type":"BinaryExpression","start":8460,"end":8485,"left":{"type":"MemberExpression","start":8460,"end":8475,"object":{"type":"ThisExpression","start":8460,"end":8464},"property":{"type":"Identifier","start":8465,"end":8475,"name":"horizontal"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":8480,"end":8485,"value":"rtl","raw":"'rtl'"}},"consequent":{"type":"BlockStatement","start":8487,"end":8579,"body":[{"type":"ExpressionStatement","start":8509,"end":8534,"expression":{"type":"CallExpression","start":8509,"end":8533,"callee":{"type":"MemberExpression","start":8509,"end":8531,"object":{"type":"ThisExpression","start":8509,"end":8513},"property":{"type":"Identifier","start":8514,"end":8531,"name":"setNextItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"BreakStatement","start":8555,"end":8561,"label":null}]},"alternate":{"type":"BlockStatement","start":8601,"end":8648,"body":[{"type":"ReturnStatement","start":8623,"end":8630,"argument":null}]}}}],"test":{"type":"Identifier","start":8279,"end":8289,"name":"LEFT_ARROW"}},{"type":"SwitchCase","start":8661,"end":8892,"consequent":[{"type":"IfStatement","start":8688,"end":8892,"test":{"type":"LogicalExpression","start":8692,"end":8728,"left":{"type":"MemberExpression","start":8692,"end":8707,"object":{"type":"ThisExpression","start":8692,"end":8696},"property":{"type":"Identifier","start":8697,"end":8707,"name":"homeAndEnd"},"computed":false,"optional":false},"operator":"&&","right":{"type":"Identifier","start":8711,"end":8728,"name":"isModifierAllowed"}},"consequent":{"type":"BlockStatement","start":8730,"end":8823,"body":[{"type":"ExpressionStatement","start":8752,"end":8778,"expression":{"type":"CallExpression","start":8752,"end":8777,"callee":{"type":"MemberExpression","start":8752,"end":8775,"object":{"type":"ThisExpression","start":8752,"end":8756},"property":{"type":"Identifier","start":8757,"end":8775,"name":"setFirstItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"BreakStatement","start":8799,"end":8805,"label":null}]},"alternate":{"type":"BlockStatement","start":8845,"end":8892,"body":[{"type":"ReturnStatement","start":8867,"end":8874,"argument":null}]}}],"test":{"type":"Identifier","start":8666,"end":8670,"name":"HOME"}},{"type":"SwitchCase","start":8905,"end":9134,"consequent":[{"type":"IfStatement","start":8931,"end":9134,"test":{"type":"LogicalExpression","start":8935,"end":8971,"left":{"type":"MemberExpression","start":8935,"end":8950,"object":{"type":"ThisExpression","start":8935,"end":8939},"property":{"type":"Identifier","start":8940,"end":8950,"name":"homeAndEnd"},"computed":false,"optional":false},"operator":"&&","right":{"type":"Identifier","start":8954,"end":8971,"name":"isModifierAllowed"}},"consequent":{"type":"BlockStatement","start":8973,"end":9065,"body":[{"type":"ExpressionStatement","start":8995,"end":9020,"expression":{"type":"CallExpression","start":8995,"end":9019,"callee":{"type":"MemberExpression","start":8995,"end":9017,"object":{"type":"ThisExpression","start":8995,"end":8999},"property":{"type":"Identifier","start":9000,"end":9017,"name":"setLastItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false}},{"type":"BreakStatement","start":9041,"end":9047,"label":null}]},"alternate":{"type":"BlockStatement","start":9087,"end":9134,"body":[{"type":"ReturnStatement","start":9109,"end":9116,"argument":null}]}}],"test":{"type":"Identifier","start":8910,"end":8913,"name":"END"}},{"type":"SwitchCase","start":9147,"end":9861,"consequent":[{"type":"IfStatement","start":9367,"end":9699,"test":{"type":"LogicalExpression","start":9371,"end":9406,"left":{"type":"MemberExpression","start":9371,"end":9380,"object":{"type":"Identifier","start":9371,"end":9376,"name":"event"},"property":{"type":"Identifier","start":9377,"end":9380,"name":"key"},"computed":false,"optional":false},"operator":"&&","right":{"type":"BinaryExpression","start":9384,"end":9406,"left":{"type":"MemberExpression","start":9384,"end":9400,"object":{"type":"MemberExpression","start":9384,"end":9393,"object":{"type":"Identifier","start":9384,"end":9389,"name":"event"},"property":{"type":"Identifier","start":9390,"end":9393,"name":"key"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9394,"end":9400,"name":"length"},"computed":false,"optional":false},"operator":"===","right":{"type":"Literal","start":9405,"end":9406,"value":1,"raw":"1"}}},"consequent":{"type":"BlockStatement","start":9408,"end":9505,"body":[{"type":"ExpressionStatement","start":9430,"end":9487,"expression":{"type":"CallExpression","start":9430,"end":9486,"callee":{"type":"MemberExpression","start":9430,"end":9455,"object":{"type":"MemberExpression","start":9430,"end":9450,"object":{"type":"ThisExpression","start":9430,"end":9434},"property":{"type":"Identifier","start":9435,"end":9450,"name":"letterKeyStream"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9451,"end":9455,"name":"next"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9456,"end":9485,"callee":{"type":"MemberExpression","start":9456,"end":9483,"object":{"type":"MemberExpression","start":9456,"end":9465,"object":{"type":"Identifier","start":9456,"end":9461,"name":"event"},"property":{"type":"Identifier","start":9462,"end":9465,"name":"key"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9466,"end":9483,"name":"toLocaleUpperCase"},"computed":false,"optional":false},"arguments":[],"optional":false}],"optional":false}}]},"alternate":{"type":"IfStatement","start":9527,"end":9699,"test":{"type":"LogicalExpression","start":9531,"end":9601,"left":{"type":"LogicalExpression","start":9532,"end":9560,"left":{"type":"BinaryExpression","start":9532,"end":9544,"left":{"type":"Identifier","start":9532,"end":9539,"name":"keyCode"},"operator":">=","right":{"type":"Identifier","start":9543,"end":9544,"name":"A"}},"operator":"&&","right":{"type":"BinaryExpression","start":9548,"end":9560,"left":{"type":"Identifier","start":9548,"end":9555,"name":"keyCode"},"operator":"<=","right":{"type":"Identifier","start":9559,"end":9560,"name":"Z"}}},"operator":"||","right":{"type":"LogicalExpression","start":9566,"end":9600,"left":{"type":"BinaryExpression","start":9566,"end":9581,"left":{"type":"Identifier","start":9566,"end":9573,"name":"keyCode"},"operator":">=","right":{"type":"Identifier","start":9577,"end":9581,"name":"ZERO"}},"operator":"&&","right":{"type":"BinaryExpression","start":9585,"end":9600,"left":{"type":"Identifier","start":9585,"end":9592,"name":"keyCode"},"operator":"<=","right":{"type":"Identifier","start":9596,"end":9600,"name":"NINE"}}}},"consequent":{"type":"BlockStatement","start":9603,"end":9699,"body":[{"type":"ExpressionStatement","start":9625,"end":9681,"expression":{"type":"CallExpression","start":9625,"end":9680,"callee":{"type":"MemberExpression","start":9625,"end":9650,"object":{"type":"MemberExpression","start":9625,"end":9645,"object":{"type":"ThisExpression","start":9625,"end":9629},"property":{"type":"Identifier","start":9630,"end":9645,"name":"letterKeyStream"},"computed":false,"optional":false},"property":{"type":"Identifier","start":9646,"end":9650,"name":"next"},"computed":false,"optional":false},"arguments":[{"type":"CallExpression","start":9651,"end":9679,"callee":{"type":"MemberExpression","start":9651,"end":9670,"object":{"type":"Identifier","start":9651,"end":9657,"name":"String"},"property":{"type":"Identifier","start":9658,"end":9670,"name":"fromCharCode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":9671,"end":9678,"name":"keyCode"}],"optional":false}],"optional":false}}]},"alternate":null}},{"type":"ReturnStatement","start":9854,"end":9861,"argument":null}],"test":null}]},{"type":"ExpressionStatement","start":9880,"end":9905,"expression":{"type":"AssignmentExpression","start":9880,"end":9904,"operator":"=","left":{"type":"MemberExpression","start":9880,"end":9899,"object":{"type":"ThisExpression","start":9880,"end":9884},"property":{"type":"Identifier","start":9885,"end":9899,"name":"pressedLetters"},"computed":false,"optional":false},"right":{"type":"ArrayExpression","start":9902,"end":9904,"elements":[]}}},{"type":"ExpressionStatement","start":9914,"end":9937,"expression":{"type":"CallExpression","start":9914,"end":9936,"callee":{"type":"MemberExpression","start":9914,"end":9934,"object":{"type":"Identifier","start":9914,"end":9919,"name":"event"},"property":{"type":"Identifier","start":9920,"end":9934,"name":"preventDefault"},"computed":false,"optional":false},"arguments":[],"optional":false}}]}}},{"type":"MethodDefinition","start":10015,"end":10084,"static":false,"computed":false,"key":{"type":"Identifier","start":10015,"end":10033,"name":"setFirstItemActive"},"kind":"method","value":{"type":"FunctionExpression","start":10033,"end":10084,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":10036,"end":10084,"body":[{"type":"ExpressionStatement","start":10046,"end":10078,"expression":{"type":"CallExpression","start":10046,"end":10077,"callee":{"type":"MemberExpression","start":10046,"end":10071,"object":{"type":"ThisExpression","start":10046,"end":10050},"property":{"type":"Identifier","start":10051,"end":10071,"name":"setActiveItemByIndex"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10072,"end":10073,"value":0,"raw":"0"},{"type":"Literal","start":10075,"end":10076,"value":1,"raw":"1"}],"optional":false}}]}}},{"type":"MethodDefinition","start":10155,"end":10245,"static":false,"computed":false,"key":{"type":"Identifier","start":10155,"end":10172,"name":"setLastItemActive"},"kind":"method","value":{"type":"FunctionExpression","start":10172,"end":10245,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":10175,"end":10245,"body":[{"type":"ExpressionStatement","start":10185,"end":10239,"expression":{"type":"CallExpression","start":10185,"end":10238,"callee":{"type":"MemberExpression","start":10185,"end":10210,"object":{"type":"ThisExpression","start":10185,"end":10189},"property":{"type":"Identifier","start":10190,"end":10210,"name":"setActiveItemByIndex"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":10211,"end":10233,"left":{"type":"MemberExpression","start":10211,"end":10229,"object":{"type":"MemberExpression","start":10211,"end":10222,"object":{"type":"ThisExpression","start":10211,"end":10215},"property":{"type":"Identifier","start":10216,"end":10222,"name":"_items"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10223,"end":10229,"name":"length"},"computed":false,"optional":false},"operator":"-","right":{"type":"Literal","start":10232,"end":10233,"value":1,"raw":"1"}},{"type":"UnaryExpression","start":10235,"end":10237,"operator":"-","prefix":true,"argument":{"type":"Literal","start":10236,"end":10237,"value":1,"raw":"1"}}],"optional":false}}]}}},{"type":"MethodDefinition","start":10316,"end":10437,"static":false,"computed":false,"key":{"type":"Identifier","start":10316,"end":10333,"name":"setNextItemActive"},"kind":"method","value":{"type":"FunctionExpression","start":10333,"end":10437,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":10336,"end":10437,"body":[{"type":"ExpressionStatement","start":10346,"end":10431,"expression":{"type":"ConditionalExpression","start":10346,"end":10430,"test":{"type":"BinaryExpression","start":10346,"end":10371,"left":{"type":"MemberExpression","start":10346,"end":10367,"object":{"type":"ThisExpression","start":10346,"end":10350},"property":{"type":"Identifier","start":10351,"end":10367,"name":"_activeItemIndex"},"computed":false,"optional":false},"operator":"<","right":{"type":"Literal","start":10370,"end":10371,"value":0,"raw":"0"}},"consequent":{"type":"CallExpression","start":10374,"end":10399,"callee":{"type":"MemberExpression","start":10374,"end":10397,"object":{"type":"ThisExpression","start":10374,"end":10378},"property":{"type":"Identifier","start":10379,"end":10397,"name":"setFirstItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false},"alternate":{"type":"CallExpression","start":10402,"end":10430,"callee":{"type":"MemberExpression","start":10402,"end":10427,"object":{"type":"ThisExpression","start":10402,"end":10406},"property":{"type":"Identifier","start":10407,"end":10427,"name":"setActiveItemByDelta"},"computed":false,"optional":false},"arguments":[{"type":"Literal","start":10428,"end":10429,"value":1,"raw":"1"}],"optional":false}}}]}}},{"type":"MethodDefinition","start":10510,"end":10660,"static":false,"computed":false,"key":{"type":"Identifier","start":10510,"end":10531,"name":"setPreviousItemActive"},"kind":"method","value":{"type":"FunctionExpression","start":10531,"end":10660,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":10534,"end":10660,"body":[{"type":"ExpressionStatement","start":10544,"end":10654,"expression":{"type":"ConditionalExpression","start":10544,"end":10653,"test":{"type":"LogicalExpression","start":10544,"end":10582,"left":{"type":"BinaryExpression","start":10544,"end":10569,"left":{"type":"MemberExpression","start":10544,"end":10565,"object":{"type":"ThisExpression","start":10544,"end":10548},"property":{"type":"Identifier","start":10549,"end":10565,"name":"_activeItemIndex"},"computed":false,"optional":false},"operator":"<","right":{"type":"Literal","start":10568,"end":10569,"value":0,"raw":"0"}},"operator":"&&","right":{"type":"MemberExpression","start":10573,"end":10582,"object":{"type":"ThisExpression","start":10573,"end":10577},"property":{"type":"Identifier","start":10578,"end":10582,"name":"wrap"},"computed":false,"optional":false}},"consequent":{"type":"CallExpression","start":10585,"end":10609,"callee":{"type":"MemberExpression","start":10585,"end":10607,"object":{"type":"ThisExpression","start":10585,"end":10589},"property":{"type":"Identifier","start":10590,"end":10607,"name":"setLastItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false},"alternate":{"type":"CallExpression","start":10624,"end":10653,"callee":{"type":"MemberExpression","start":10624,"end":10649,"object":{"type":"ThisExpression","start":10624,"end":10628},"property":{"type":"Identifier","start":10629,"end":10649,"name":"setActiveItemByDelta"},"computed":false,"optional":false},"arguments":[{"type":"UnaryExpression","start":10650,"end":10652,"operator":"-","prefix":true,"argument":{"type":"Literal","start":10651,"end":10652,"value":1,"raw":"1"}}],"optional":false}}}]}}},{"type":"MethodDefinition","start":10665,"end":10950,"static":false,"computed":false,"key":{"type":"Identifier","start":10665,"end":10686,"name":"setNextPageItemActive"},"kind":"method","value":{"type":"FunctionExpression","start":10686,"end":10950,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"AssignmentPattern","start":10687,"end":10710,"left":{"type":"Identifier","start":10687,"end":10692,"name":"delta"},"right":{"type":"MemberExpression","start":10695,"end":10710,"object":{"type":"ThisExpression","start":10695,"end":10699},"property":{"type":"Identifier","start":10700,"end":10710,"name":"scrollSize"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":10712,"end":10950,"body":[{"type":"VariableDeclaration","start":10722,"end":10774,"declarations":[{"type":"VariableDeclarator","start":10728,"end":10773,"id":{"type":"Identifier","start":10728,"end":10741,"name":"nextItemIndex"},"init":{"type":"BinaryExpression","start":10744,"end":10773,"left":{"type":"MemberExpression","start":10744,"end":10765,"object":{"type":"ThisExpression","start":10744,"end":10748},"property":{"type":"Identifier","start":10749,"end":10765,"name":"_activeItemIndex"},"computed":false,"optional":false},"operator":"+","right":{"type":"Identifier","start":10768,"end":10773,"name":"delta"}}}],"kind":"const"},{"type":"IfStatement","start":10783,"end":10944,"test":{"type":"BinaryExpression","start":10787,"end":10822,"left":{"type":"Identifier","start":10787,"end":10800,"name":"nextItemIndex"},"operator":">=","right":{"type":"MemberExpression","start":10804,"end":10822,"object":{"type":"MemberExpression","start":10804,"end":10815,"object":{"type":"ThisExpression","start":10804,"end":10808},"property":{"type":"Identifier","start":10809,"end":10815,"name":"_items"},"computed":false,"optional":false},"property":{"type":"Identifier","start":10816,"end":10822,"name":"length"},"computed":false,"optional":false}},"consequent":{"type":"BlockStatement","start":10824,"end":10873,"body":[{"type":"ExpressionStatement","start":10838,"end":10863,"expression":{"type":"CallExpression","start":10838,"end":10862,"callee":{"type":"MemberExpression","start":10838,"end":10860,"object":{"type":"ThisExpression","start":10838,"end":10842},"property":{"type":"Identifier","start":10843,"end":10860,"name":"setLastItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":10887,"end":10944,"body":[{"type":"ExpressionStatement","start":10901,"end":10934,"expression":{"type":"CallExpression","start":10901,"end":10933,"callee":{"type":"MemberExpression","start":10901,"end":10926,"object":{"type":"ThisExpression","start":10901,"end":10905},"property":{"type":"Identifier","start":10906,"end":10926,"name":"setActiveItemByDelta"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":10927,"end":10932,"name":"delta"}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":10955,"end":11229,"static":false,"computed":false,"key":{"type":"Identifier","start":10955,"end":10980,"name":"setPreviousPageItemActive"},"kind":"method","value":{"type":"FunctionExpression","start":10980,"end":11229,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"AssignmentPattern","start":10981,"end":11004,"left":{"type":"Identifier","start":10981,"end":10986,"name":"delta"},"right":{"type":"MemberExpression","start":10989,"end":11004,"object":{"type":"ThisExpression","start":10989,"end":10993},"property":{"type":"Identifier","start":10994,"end":11004,"name":"scrollSize"},"computed":false,"optional":false}}],"body":{"type":"BlockStatement","start":11006,"end":11229,"body":[{"type":"VariableDeclaration","start":11016,"end":11068,"declarations":[{"type":"VariableDeclarator","start":11022,"end":11067,"id":{"type":"Identifier","start":11022,"end":11035,"name":"nextItemIndex"},"init":{"type":"BinaryExpression","start":11038,"end":11067,"left":{"type":"MemberExpression","start":11038,"end":11059,"object":{"type":"ThisExpression","start":11038,"end":11042},"property":{"type":"Identifier","start":11043,"end":11059,"name":"_activeItemIndex"},"computed":false,"optional":false},"operator":"-","right":{"type":"Identifier","start":11062,"end":11067,"name":"delta"}}}],"kind":"const"},{"type":"IfStatement","start":11077,"end":11223,"test":{"type":"BinaryExpression","start":11081,"end":11099,"left":{"type":"Identifier","start":11081,"end":11094,"name":"nextItemIndex"},"operator":"<=","right":{"type":"Literal","start":11098,"end":11099,"value":0,"raw":"0"}},"consequent":{"type":"BlockStatement","start":11101,"end":11151,"body":[{"type":"ExpressionStatement","start":11115,"end":11141,"expression":{"type":"CallExpression","start":11115,"end":11140,"callee":{"type":"MemberExpression","start":11115,"end":11138,"object":{"type":"ThisExpression","start":11115,"end":11119},"property":{"type":"Identifier","start":11120,"end":11138,"name":"setFirstItemActive"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":{"type":"BlockStatement","start":11165,"end":11223,"body":[{"type":"ExpressionStatement","start":11179,"end":11213,"expression":{"type":"CallExpression","start":11179,"end":11212,"callee":{"type":"MemberExpression","start":11179,"end":11204,"object":{"type":"ThisExpression","start":11179,"end":11183},"property":{"type":"Identifier","start":11184,"end":11204,"name":"setActiveItemByDelta"},"computed":false,"optional":false},"arguments":[{"type":"UnaryExpression","start":11205,"end":11211,"operator":"-","prefix":true,"argument":{"type":"Identifier","start":11206,"end":11211,"name":"delta"}}],"optional":false}}]}}]}}},{"type":"MethodDefinition","start":11234,"end":11478,"static":false,"computed":false,"key":{"type":"Identifier","start":11234,"end":11250,"name":"updateActiveItem"},"kind":"method","value":{"type":"FunctionExpression","start":11250,"end":11478,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11251,"end":11255,"name":"item"}],"body":{"type":"BlockStatement","start":11257,"end":11478,"body":[{"type":"VariableDeclaration","start":11267,"end":11307,"declarations":[{"type":"VariableDeclarator","start":11273,"end":11306,"id":{"type":"Identifier","start":11273,"end":11282,"name":"itemArray"},"init":{"type":"CallExpression","start":11285,"end":11306,"callee":{"type":"MemberExpression","start":11285,"end":11304,"object":{"type":"MemberExpression","start":11285,"end":11296,"object":{"type":"ThisExpression","start":11285,"end":11289},"property":{"type":"Identifier","start":11290,"end":11296,"name":"_items"},"computed":false,"optional":false},"property":{"type":"Identifier","start":11297,"end":11304,"name":"toArray"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"VariableDeclaration","start":11316,"end":11388,"declarations":[{"type":"VariableDeclarator","start":11322,"end":11387,"id":{"type":"Identifier","start":11322,"end":11327,"name":"index"},"init":{"type":"ConditionalExpression","start":11330,"end":11387,"test":{"type":"BinaryExpression","start":11330,"end":11354,"left":{"type":"UnaryExpression","start":11330,"end":11341,"operator":"typeof","prefix":true,"argument":{"type":"Identifier","start":11337,"end":11341,"name":"item"}},"operator":"===","right":{"type":"Literal","start":11346,"end":11354,"value":"number","raw":"'number'"}},"consequent":{"type":"Identifier","start":11357,"end":11361,"name":"item"},"alternate":{"type":"CallExpression","start":11364,"end":11387,"callee":{"type":"MemberExpression","start":11364,"end":11381,"object":{"type":"Identifier","start":11364,"end":11373,"name":"itemArray"},"property":{"type":"Identifier","start":11374,"end":11381,"name":"indexOf"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11382,"end":11386,"name":"item"}],"optional":false}}}],"kind":"const"},{"type":"ExpressionStatement","start":11397,"end":11427,"expression":{"type":"AssignmentExpression","start":11397,"end":11426,"operator":"=","left":{"type":"MemberExpression","start":11397,"end":11418,"object":{"type":"ThisExpression","start":11397,"end":11401},"property":{"type":"Identifier","start":11402,"end":11418,"name":"_activeItemIndex"},"computed":false,"optional":false},"right":{"type":"Identifier","start":11421,"end":11426,"name":"index"}}},{"type":"ExpressionStatement","start":11436,"end":11472,"expression":{"type":"AssignmentExpression","start":11436,"end":11471,"operator":"=","left":{"type":"MemberExpression","start":11436,"end":11452,"object":{"type":"ThisExpression","start":11436,"end":11440},"property":{"type":"Identifier","start":11441,"end":11452,"name":"_activeItem"},"computed":false,"optional":false},"right":{"type":"MemberExpression","start":11455,"end":11471,"object":{"type":"Identifier","start":11455,"end":11464,"name":"itemArray"},"property":{"type":"Identifier","start":11465,"end":11470,"name":"index"},"computed":true,"optional":false}}}]}}},{"type":"MethodDefinition","start":11724,"end":11849,"static":false,"computed":false,"key":{"type":"Identifier","start":11724,"end":11744,"name":"setActiveItemByDelta"},"kind":"method","value":{"type":"FunctionExpression","start":11744,"end":11849,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11745,"end":11750,"name":"delta"}],"body":{"type":"BlockStatement","start":11752,"end":11849,"body":[{"type":"ExpressionStatement","start":11762,"end":11843,"expression":{"type":"ConditionalExpression","start":11762,"end":11842,"test":{"type":"MemberExpression","start":11762,"end":11771,"object":{"type":"ThisExpression","start":11762,"end":11766},"property":{"type":"Identifier","start":11767,"end":11771,"name":"wrap"},"computed":false,"optional":false},"consequent":{"type":"CallExpression","start":11774,"end":11805,"callee":{"type":"MemberExpression","start":11774,"end":11798,"object":{"type":"ThisExpression","start":11774,"end":11778},"property":{"type":"Identifier","start":11779,"end":11798,"name":"setActiveInWrapMode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11799,"end":11804,"name":"delta"}],"optional":false},"alternate":{"type":"CallExpression","start":11808,"end":11842,"callee":{"type":"MemberExpression","start":11808,"end":11835,"object":{"type":"ThisExpression","start":11808,"end":11812},"property":{"type":"Identifier","start":11813,"end":11835,"name":"setActiveInDefaultMode"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":11836,"end":11841,"name":"delta"}],"optional":false}}}]}}},{"type":"MethodDefinition","start":12098,"end":12498,"static":false,"computed":false,"key":{"type":"Identifier","start":12098,"end":12117,"name":"setActiveInWrapMode"},"kind":"method","value":{"type":"FunctionExpression","start":12117,"end":12498,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12118,"end":12123,"name":"delta"}],"body":{"type":"BlockStatement","start":12125,"end":12498,"body":[{"type":"VariableDeclaration","start":12135,"end":12170,"declarations":[{"type":"VariableDeclarator","start":12141,"end":12169,"id":{"type":"Identifier","start":12141,"end":12146,"name":"items"},"init":{"type":"CallExpression","start":12149,"end":12169,"callee":{"type":"MemberExpression","start":12149,"end":12167,"object":{"type":"ThisExpression","start":12149,"end":12153},"property":{"type":"Identifier","start":12154,"end":12167,"name":"getItemsArray"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"ForStatement","start":12179,"end":12492,"init":{"type":"VariableDeclaration","start":12184,"end":12193,"declarations":[{"type":"VariableDeclarator","start":12188,"end":12193,"id":{"type":"Identifier","start":12188,"end":12189,"name":"i"},"init":{"type":"Literal","start":12192,"end":12193,"value":1,"raw":"1"}}],"kind":"let"},"test":{"type":"BinaryExpression","start":12195,"end":12212,"left":{"type":"Identifier","start":12195,"end":12196,"name":"i"},"operator":"<=","right":{"type":"MemberExpression","start":12200,"end":12212,"object":{"type":"Identifier","start":12200,"end":12205,"name":"items"},"property":{"type":"Identifier","start":12206,"end":12212,"name":"length"},"computed":false,"optional":false}},"update":{"type":"UpdateExpression","start":12214,"end":12217,"operator":"++","prefix":false,"argument":{"type":"Identifier","start":12214,"end":12215,"name":"i"}},"body":{"type":"BlockStatement","start":12219,"end":12492,"body":[{"type":"VariableDeclaration","start":12233,"end":12315,"declarations":[{"type":"VariableDeclarator","start":12239,"end":12314,"id":{"type":"Identifier","start":12239,"end":12244,"name":"index"},"init":{"type":"BinaryExpression","start":12247,"end":12314,"left":{"type":"BinaryExpression","start":12248,"end":12298,"left":{"type":"BinaryExpression","start":12248,"end":12283,"left":{"type":"MemberExpression","start":12248,"end":12269,"object":{"type":"ThisExpression","start":12248,"end":12252},"property":{"type":"Identifier","start":12253,"end":12269,"name":"_activeItemIndex"},"computed":false,"optional":false},"operator":"+","right":{"type":"BinaryExpression","start":12273,"end":12282,"left":{"type":"Identifier","start":12273,"end":12278,"name":"delta"},"operator":"*","right":{"type":"Identifier","start":12281,"end":12282,"name":"i"}}},"operator":"+","right":{"type":"MemberExpression","start":12286,"end":12298,"object":{"type":"Identifier","start":12286,"end":12291,"name":"items"},"property":{"type":"Identifier","start":12292,"end":12298,"name":"length"},"computed":false,"optional":false}},"operator":"%","right":{"type":"MemberExpression","start":12302,"end":12314,"object":{"type":"Identifier","start":12302,"end":12307,"name":"items"},"property":{"type":"Identifier","start":12308,"end":12314,"name":"length"},"computed":false,"optional":false}}}],"kind":"const"},{"type":"VariableDeclaration","start":12328,"end":12354,"declarations":[{"type":"VariableDeclarator","start":12334,"end":12353,"id":{"type":"Identifier","start":12334,"end":12338,"name":"item"},"init":{"type":"MemberExpression","start":12341,"end":12353,"object":{"type":"Identifier","start":12341,"end":12346,"name":"items"},"property":{"type":"Identifier","start":12347,"end":12352,"name":"index"},"computed":true,"optional":false}}],"kind":"const"},{"type":"IfStatement","start":12367,"end":12482,"test":{"type":"UnaryExpression","start":12371,"end":12398,"operator":"!","prefix":true,"argument":{"type":"CallExpression","start":12372,"end":12398,"callee":{"type":"MemberExpression","start":12372,"end":12392,"object":{"type":"ThisExpression","start":12372,"end":12376},"property":{"type":"Identifier","start":12377,"end":12392,"name":"skipPredicateFn"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12393,"end":12397,"name":"item"}],"optional":false}},"consequent":{"type":"BlockStatement","start":12400,"end":12482,"body":[{"type":"ExpressionStatement","start":12418,"end":12444,"expression":{"type":"CallExpression","start":12418,"end":12443,"callee":{"type":"MemberExpression","start":12418,"end":12436,"object":{"type":"ThisExpression","start":12418,"end":12422},"property":{"type":"Identifier","start":12423,"end":12436,"name":"setActiveItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":12437,"end":12442,"name":"index"}],"optional":false}},{"type":"ReturnStatement","start":12461,"end":12468,"argument":null}]},"alternate":null}]}}]}}},{"type":"MethodDefinition","start":12762,"end":12872,"static":false,"computed":false,"key":{"type":"Identifier","start":12762,"end":12784,"name":"setActiveInDefaultMode"},"kind":"method","value":{"type":"FunctionExpression","start":12784,"end":12872,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":12785,"end":12790,"name":"delta"}],"body":{"type":"BlockStatement","start":12792,"end":12872,"body":[{"type":"ExpressionStatement","start":12802,"end":12866,"expression":{"type":"CallExpression","start":12802,"end":12865,"callee":{"type":"MemberExpression","start":12802,"end":12827,"object":{"type":"ThisExpression","start":12802,"end":12806},"property":{"type":"Identifier","start":12807,"end":12827,"name":"setActiveItemByIndex"},"computed":false,"optional":false},"arguments":[{"type":"BinaryExpression","start":12828,"end":12857,"left":{"type":"MemberExpression","start":12828,"end":12849,"object":{"type":"ThisExpression","start":12828,"end":12832},"property":{"type":"Identifier","start":12833,"end":12849,"name":"_activeItemIndex"},"computed":false,"optional":false},"operator":"+","right":{"type":"Identifier","start":12852,"end":12857,"name":"delta"}},{"type":"Identifier","start":12859,"end":12864,"name":"delta"}],"optional":false}}]}}},{"type":"MethodDefinition","start":13136,"end":13536,"static":false,"computed":false,"key":{"type":"Identifier","start":13136,"end":13156,"name":"setActiveItemByIndex"},"kind":"method","value":{"type":"FunctionExpression","start":13156,"end":13536,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":13157,"end":13162,"name":"index"},{"type":"Identifier","start":13164,"end":13177,"name":"fallbackDelta"}],"body":{"type":"BlockStatement","start":13179,"end":13536,"body":[{"type":"VariableDeclaration","start":13189,"end":13224,"declarations":[{"type":"VariableDeclarator","start":13195,"end":13223,"id":{"type":"Identifier","start":13195,"end":13200,"name":"items"},"init":{"type":"CallExpression","start":13203,"end":13223,"callee":{"type":"MemberExpression","start":13203,"end":13221,"object":{"type":"ThisExpression","start":13203,"end":13207},"property":{"type":"Identifier","start":13208,"end":13221,"name":"getItemsArray"},"computed":false,"optional":false},"arguments":[],"optional":false}}],"kind":"const"},{"type":"IfStatement","start":13233,"end":13283,"test":{"type":"UnaryExpression","start":13237,"end":13250,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":13238,"end":13250,"object":{"type":"Identifier","start":13238,"end":13243,"name":"items"},"property":{"type":"Identifier","start":13244,"end":13249,"name":"index"},"computed":true,"optional":false}},"consequent":{"type":"BlockStatement","start":13252,"end":13283,"body":[{"type":"ReturnStatement","start":13266,"end":13273,"argument":null}]},"alternate":null},{"type":"VariableDeclaration","start":13292,"end":13313,"declarations":[{"type":"VariableDeclarator","start":13296,"end":13312,"id":{"type":"Identifier","start":13296,"end":13304,"name":"curIndex"},"init":{"type":"Identifier","start":13307,"end":13312,"name":"index"}}],"kind":"let"},{"type":"WhileStatement","start":13322,"end":13492,"test":{"type":"CallExpression","start":13329,"end":13366,"callee":{"type":"MemberExpression","start":13329,"end":13349,"object":{"type":"ThisExpression","start":13329,"end":13333},"property":{"type":"Identifier","start":13334,"end":13349,"name":"skipPredicateFn"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":13350,"end":13365,"object":{"type":"Identifier","start":13350,"end":13355,"name":"items"},"property":{"type":"Identifier","start":13356,"end":13364,"name":"curIndex"},"computed":true,"optional":false}],"optional":false},"body":{"type":"BlockStatement","start":13368,"end":13492,"body":[{"type":"ExpressionStatement","start":13382,"end":13408,"expression":{"type":"AssignmentExpression","start":13382,"end":13407,"operator":"+=","left":{"type":"Identifier","start":13382,"end":13390,"name":"curIndex"},"right":{"type":"Identifier","start":13394,"end":13407,"name":"fallbackDelta"}}},{"type":"IfStatement","start":13421,"end":13482,"test":{"type":"UnaryExpression","start":13425,"end":13441,"operator":"!","prefix":true,"argument":{"type":"MemberExpression","start":13426,"end":13441,"object":{"type":"Identifier","start":13426,"end":13431,"name":"items"},"property":{"type":"Identifier","start":13432,"end":13440,"name":"curIndex"},"computed":true,"optional":false}},"consequent":{"type":"BlockStatement","start":13443,"end":13482,"body":[{"type":"ReturnStatement","start":13461,"end":13468,"argument":null}]},"alternate":null}]}},{"type":"ExpressionStatement","start":13501,"end":13530,"expression":{"type":"CallExpression","start":13501,"end":13529,"callee":{"type":"MemberExpression","start":13501,"end":13519,"object":{"type":"ThisExpression","start":13501,"end":13505},"property":{"type":"Identifier","start":13506,"end":13519,"name":"setActiveItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":13520,"end":13528,"name":"curIndex"}],"optional":false}}]}}},{"type":"MethodDefinition","start":13583,"end":13693,"static":false,"computed":false,"key":{"type":"Identifier","start":13583,"end":13596,"name":"getItemsArray"},"kind":"method","value":{"type":"FunctionExpression","start":13596,"end":13693,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":13599,"end":13693,"body":[{"type":"ReturnStatement","start":13609,"end":13687,"argument":{"type":"ConditionalExpression","start":13616,"end":13686,"test":{"type":"BinaryExpression","start":13616,"end":13648,"left":{"type":"MemberExpression","start":13616,"end":13627,"object":{"type":"ThisExpression","start":13616,"end":13620},"property":{"type":"Identifier","start":13621,"end":13627,"name":"_items"},"computed":false,"optional":false},"operator":"instanceof","right":{"type":"Identifier","start":13639,"end":13648,"name":"QueryList"}},"consequent":{"type":"CallExpression","start":13651,"end":13672,"callee":{"type":"MemberExpression","start":13651,"end":13670,"object":{"type":"MemberExpression","start":13651,"end":13662,"object":{"type":"ThisExpression","start":13651,"end":13655},"property":{"type":"Identifier","start":13656,"end":13662,"name":"_items"},"computed":false,"optional":false},"property":{"type":"Identifier","start":13663,"end":13670,"name":"toArray"},"computed":false,"optional":false},"arguments":[],"optional":false},"alternate":{"type":"MemberExpression","start":13675,"end":13686,"object":{"type":"ThisExpression","start":13675,"end":13679},"property":{"type":"Identifier","start":13680,"end":13686,"name":"_items"},"computed":false,"optional":false}}}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,","start":13732,"end":46302}]},"code":"import { QueryList } from '@angular/core';\nimport { UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, TAB, A, Z, ZERO, NINE, HOME, END } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, filter, map, tap } from 'rxjs/operators';\n/* tslint:disable:member-ordering */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        this.previousActiveItemIndex = -1;\n        this._activeItemIndex = -1;\n        this.wrap = false;\n        this.letterKeyStream = new Subject();\n        this.typeaheadSubscription = Subscription.EMPTY;\n        this.vertical = true;\n        this.scrollSize = 0;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this.pressedLetters = [];\n        this.homeAndEnd = false;\n        this.allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this.skipPredicateFn = (item) => item.disabled;\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    // Index of the currently active item.\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    // The active item.\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this.pressedLetters.length > 0;\n    }\n    withScrollSize(scrollSize) {\n        this.scrollSize = scrollSize;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this.allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on wrapping mode, which ensures that the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     */\n    withWrap(shouldWrap = true) {\n        this.wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this.skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this.vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this.horizontal = direction;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param searchLetterIndex letter index for incremental search, if is -1 search is disabled\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200, searchLetterIndex = 0) {\n        if (this._items.length && this._items.some((item) => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this.typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters and convert those\n        // letters back into a string. Afterwards find the first item that starts with that string and select it.\n        this.typeaheadSubscription = this.letterKeyStream.pipe(tap((keyCode) => this.pressedLetters.push(keyCode)), debounceTime(debounceInterval), filter(() => this.pressedLetters.length > 0), map(() => this.pressedLetters.join(''))).subscribe((inputString) => {\n            if (searchLetterIndex === -1) {\n                this.pressedLetters = [];\n                return;\n            }\n            const items = this._items.toArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!item.disabled &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === searchLetterIndex) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this.pressedLetters = [];\n        });\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this.homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Sets the active item to the item at the index specified.\n     * @param item The index of the item to be set as active.\n     */\n    setActiveItem(item) {\n        this.previousActiveItemIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== this.previousActiveItemIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    // tslint:disable-next-line:cyclomatic-complexity\n    onKeydown(event) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every((modifier) => {\n            return !event[modifier] || this.allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this.vertical) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this.vertical) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this.horizontal === 'ltr') {\n                    this.setNextItemActive();\n                    break;\n                }\n                else if (this.horizontal === 'rtl') {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this.horizontal === 'ltr') {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else if (this.horizontal === 'rtl') {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this.homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this.homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                if (event.key && event.key.length === 1) {\n                    this.letterKeyStream.next(event.key.toLocaleUpperCase());\n                }\n                else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                    this.letterKeyStream.next(String.fromCharCode(keyCode));\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this.pressedLetters = [];\n        event.preventDefault();\n    }\n    // Sets the active item to the first enabled item in the list.\n    setFirstItemActive() {\n        this.setActiveItemByIndex(0, 1);\n    }\n    // Sets the active item to the last enabled item in the list.\n    setLastItemActive() {\n        this.setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    // Sets the active item to the next enabled item in the list.\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this.setActiveItemByDelta(1);\n    }\n    // Sets the active item to a previous enabled item in the list.\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this.wrap ? this.setLastItemActive()\n            : this.setActiveItemByDelta(-1);\n    }\n    setNextPageItemActive(delta = this.scrollSize) {\n        const nextItemIndex = this._activeItemIndex + delta;\n        if (nextItemIndex >= this._items.length) {\n            this.setLastItemActive();\n        }\n        else {\n            this.setActiveItemByDelta(delta);\n        }\n    }\n    setPreviousPageItemActive(delta = this.scrollSize) {\n        const nextItemIndex = this._activeItemIndex - delta;\n        if (nextItemIndex <= 0) {\n            this.setFirstItemActive();\n        }\n        else {\n            this.setActiveItemByDelta(-delta);\n        }\n    }\n    updateActiveItem(item) {\n        const itemArray = this._items.toArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        this._activeItemIndex = index;\n        this._activeItem = itemArray[index];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    setActiveItemByDelta(delta) {\n        this.wrap ? this.setActiveInWrapMode(delta) : this.setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    setActiveInWrapMode(delta) {\n        const items = this.getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            const item = items[index];\n            if (!this.skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    setActiveInDefaultMode(delta) {\n        this.setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    setActiveItemByIndex(index, fallbackDelta) {\n        const items = this.getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        let curIndex = index;\n        while (this.skipPredicateFn(items[curIndex])) {\n            curIndex += fallbackDelta;\n            if (!items[curIndex]) {\n                return;\n            }\n        }\n        this.setActiveItem(curIndex);\n    }\n    /** Returns the items as an array. */\n    getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n/* tslint:enable:member-ordering */\n//# sourceMappingURL=data:application/json;base64,","customTransformCache":false,"dependencies":["@angular/core","@ptsecurity/cdk/keycodes","rxjs","rxjs/operators"],"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/list-key-manager.mjs","meta":{},"moduleSideEffects":false,"originalCode":"import { QueryList } from '@angular/core';\nimport { UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, TAB, A, Z, ZERO, NINE, HOME, END } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, filter, map, tap } from 'rxjs/operators';\n/* tslint:disable:member-ordering */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        this.previousActiveItemIndex = -1;\n        this._activeItemIndex = -1;\n        this.wrap = false;\n        this.letterKeyStream = new Subject();\n        this.typeaheadSubscription = Subscription.EMPTY;\n        this.vertical = true;\n        this.scrollSize = 0;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this.pressedLetters = [];\n        this.homeAndEnd = false;\n        this.allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this.skipPredicateFn = (item) => item.disabled;\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    // Index of the currently active item.\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    // The active item.\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this.pressedLetters.length > 0;\n    }\n    withScrollSize(scrollSize) {\n        this.scrollSize = scrollSize;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this.allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on wrapping mode, which ensures that the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     */\n    withWrap(shouldWrap = true) {\n        this.wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this.skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this.vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this.horizontal = direction;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param searchLetterIndex letter index for incremental search, if is -1 search is disabled\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200, searchLetterIndex = 0) {\n        if (this._items.length && this._items.some((item) => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this.typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters and convert those\n        // letters back into a string. Afterwards find the first item that starts with that string and select it.\n        this.typeaheadSubscription = this.letterKeyStream.pipe(tap((keyCode) => this.pressedLetters.push(keyCode)), debounceTime(debounceInterval), filter(() => this.pressedLetters.length > 0), map(() => this.pressedLetters.join(''))).subscribe((inputString) => {\n            if (searchLetterIndex === -1) {\n                this.pressedLetters = [];\n                return;\n            }\n            const items = this._items.toArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!item.disabled &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === searchLetterIndex) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this.pressedLetters = [];\n        });\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this.homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Sets the active item to the item at the index specified.\n     * @param item The index of the item to be set as active.\n     */\n    setActiveItem(item) {\n        this.previousActiveItemIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== this.previousActiveItemIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    // tslint:disable-next-line:cyclomatic-complexity\n    onKeydown(event) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every((modifier) => {\n            return !event[modifier] || this.allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this.vertical) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this.vertical) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this.horizontal === 'ltr') {\n                    this.setNextItemActive();\n                    break;\n                }\n                else if (this.horizontal === 'rtl') {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this.horizontal === 'ltr') {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else if (this.horizontal === 'rtl') {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this.homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this.homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                if (event.key && event.key.length === 1) {\n                    this.letterKeyStream.next(event.key.toLocaleUpperCase());\n                }\n                else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                    this.letterKeyStream.next(String.fromCharCode(keyCode));\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this.pressedLetters = [];\n        event.preventDefault();\n    }\n    // Sets the active item to the first enabled item in the list.\n    setFirstItemActive() {\n        this.setActiveItemByIndex(0, 1);\n    }\n    // Sets the active item to the last enabled item in the list.\n    setLastItemActive() {\n        this.setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    // Sets the active item to the next enabled item in the list.\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this.setActiveItemByDelta(1);\n    }\n    // Sets the active item to a previous enabled item in the list.\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this.wrap ? this.setLastItemActive()\n            : this.setActiveItemByDelta(-1);\n    }\n    setNextPageItemActive(delta = this.scrollSize) {\n        const nextItemIndex = this._activeItemIndex + delta;\n        if (nextItemIndex >= this._items.length) {\n            this.setLastItemActive();\n        }\n        else {\n            this.setActiveItemByDelta(delta);\n        }\n    }\n    setPreviousPageItemActive(delta = this.scrollSize) {\n        const nextItemIndex = this._activeItemIndex - delta;\n        if (nextItemIndex <= 0) {\n            this.setFirstItemActive();\n        }\n        else {\n            this.setActiveItemByDelta(-delta);\n        }\n    }\n    updateActiveItem(item) {\n        const itemArray = this._items.toArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        this._activeItemIndex = index;\n        this._activeItem = itemArray[index];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    setActiveItemByDelta(delta) {\n        this.wrap ? this.setActiveInWrapMode(delta) : this.setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    setActiveInWrapMode(delta) {\n        const items = this.getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            const item = items[index];\n            if (!this.skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    setActiveInDefaultMode(delta) {\n        this.setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    setActiveItemByIndex(index, fallbackDelta) {\n        const items = this.getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        let curIndex = index;\n        while (this.skipPredicateFn(items[curIndex])) {\n            curIndex += fallbackDelta;\n            if (!items[curIndex]) {\n                return;\n            }\n        }\n        this.setActiveItem(curIndex);\n    }\n    /** Returns the items as an array. */\n    getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n/* tslint:enable:member-ordering */\n//# sourceMappingURL=data:application/json;base64,","originalSourcemap":{"version":3,"file":"list-key-manager.js","sourceRoot":"","sources":["../../../../../packages/cdk/a11y/key-manager/list-key-manager.ts"],"names":[],"mappings":[[[0,0,0,0],[7,0,0,7],[9,0,0,9],[18,0,0,18],[20,0,0,20],[26,0,0,26],[41,0,0,41],[42,0,0,42]],[[0,0,1,0],[7,0,1,7],[9,0,2,4],[17,0,2,12],[19,0,3,4],[29,0,3,14],[31,0,4,4],[41,0,4,14],[43,0,5,4],[54,0,5,15],[56,0,6,4],[59,0,6,7],[61,0,7,4],[62,0,7,5],[64,0,8,4],[65,0,8,5],[67,0,9,4],[71,0,9,8],[73,0,10,4],[77,0,10,8],[79,0,11,4],[83,0,11,8],[85,0,12,4],[88,0,12,7],[90,0,13,1],[96,0,13,7],[122,0,13,33],[123,0,13,34]],[[0,0,14,0],[7,0,14,7],[9,0,14,9],[16,0,14,16],[18,0,14,18],[30,0,14,30],[32,0,14,32],[38,0,14,38],[44,0,14,44],[45,0,14,45]],[[0,0,15,0],[7,0,15,7],[9,0,15,9],[21,0,15,21],[23,0,15,23],[29,0,15,29],[31,0,15,31],[34,0,15,34],[36,0,15,36],[39,0,15,39],[41,0,15,41],[47,0,15,47],[63,0,15,63],[64,0,15,64]],[[0,0,31,0],[36,0,31,36]],[[0,0,32,0]],[],[],[[3,0,35,3]],[[0,0,36,0],[6,0,36,6],[13,0,36,13],[27,0,36,27]],[[4,0,77,4],[16,0,77,24],[22,0,77,44]],[[8,0,77,24],[19,0,77,30],[22,0,77,24],[28,0,77,30],[29,0,77,44]],[[8,0,37,4]],[],[],[[11,0,40,7]],[[8,0,41,4],[19,0,41,10],[22,0,41,28],[26,0,41,32],[33,0,41,39],[35,0,41,47],[36,0,41,48]],[[8,0,43,4],[86,0,43,82]],[[8,0,44,4],[19,0,44,10],[22,0,44,13],[26,0,44,17],[33,0,44,24],[35,0,44,34],[36,0,44,35]],[[8,0,46,4],[36,0,46,27],[39,0,46,30],[40,0,46,31],[41,0,46,32],[42,0,46,33]],[[8,0,53,12],[29,0,53,28],[32,0,53,31],[33,0,53,32],[34,0,53,33],[35,0,53,34]],[[8,0,62,12],[17,0,62,16],[20,0,62,28],[25,0,62,33],[26,0,62,34]],[[8,0,63,12],[28,0,63,27],[31,0,63,30],[35,0,63,34],[42,0,63,41],[44,0,63,51],[45,0,63,52]],[[8,0,64,12],[34,0,64,33],[37,0,64,36],[49,0,64,48],[50,0,64,49],[55,0,64,54],[56,0,64,55]],[[8,0,65,12],[21,0,65,20],[24,0,65,23],[28,0,65,27],[29,0,65,28]],[[8,0,68,12],[23,0,68,22],[26,0,68,33],[27,0,68,34],[28,0,68,35]],[[8,0,70,4],[99,0,70,95]],[[8,0,71,12],[27,0,71,26],[30,0,71,39],[32,0,71,41],[33,0,71,42]],[[8,0,73,12],[23,0,73,22],[26,0,73,25],[31,0,73,30],[32,0,73,31]],[[8,0,75,12],[32,0,75,31],[35,0,75,63],[37,0,75,65],[38,0,75,66]],[[8,0,392,4]],[],[],[[11,0,395,7]],[[8,0,396,12],[28,0,396,27],[31,0,396,30],[32,0,396,31],[36,0,396,38],[38,0,396,40],[40,0,396,42],[41,0,396,43],[45,0,396,47],[46,0,396,48],[54,0,396,56],[55,0,396,57]],[[8,0,78,8],[12,0,78,12],[18,0,78,18],[30,0,78,30],[39,0,78,39],[41,0,78,41]],[[12,0,80,12],[18,0,80,18],[19,0,80,19],[26,0,80,26],[27,0,80,27],[36,0,80,36],[37,0,80,37],[38,0,80,38],[46,0,80,60],[48,0,80,62],[50,0,80,64]],[[16,0,82,16],[20,0,82,20],[24,0,82,24],[25,0,82,25],[36,0,82,36],[38,0,82,38]],[[20,0,83,20],[26,0,83,26],[35,0,83,35],[38,0,83,38],[46,0,83,46],[47,0,83,47],[54,0,83,54],[56,0,83,56],[57,0,83,57]],[[20,0,84,20],[26,0,84,26],[34,0,84,34],[37,0,84,37],[46,0,84,46],[47,0,84,47],[54,0,84,54],[55,0,84,55],[59,0,84,59],[60,0,84,60],[71,0,84,71],[72,0,84,72],[73,0,84,73]],[[20,0,86,20],[24,0,86,24],[32,0,86,32],[35,0,86,35],[36,0,86,36],[37,0,86,37],[41,0,86,41],[49,0,86,49],[54,0,86,54],[58,0,86,58],[59,0,86,59],[75,0,86,75],[77,0,86,77]],[[24,0,87,24],[28,0,87,28],[29,0,87,29],[45,0,87,45],[48,0,87,48],[56,0,87,56],[57,0,87,57]],[[21,0,88,21]],[[17,0,89,17]],[[12,0,90,12],[13,0,90,13],[14,0,90,14],[15,0,90,15]],[[9,0,91,9]],[[4,0,92,4],[5,0,92,5]],[[4,0,48,4],[42,0,48,42]],[[4,0,49,4],[8,0,49,8],[23,0,49,23]],[[8,0,50,8],[15,0,50,15],[19,0,50,19],[20,0,50,20],[36,0,50,36],[37,0,50,37]],[[4,0,51,4],[5,0,51,5]],[[4,0,55,4],[23,0,55,23]],[[4,0,56,4],[8,0,56,8],[18,0,56,18]],[[8,0,57,8],[15,0,57,15],[19,0,57,19],[20,0,57,20],[31,0,57,31],[32,0,57,32]],[[4,0,58,4],[5,0,58,5]],[[4,0,94,4],[98,0,94,98]],[[4,0,95,4],[12,0,95,12]],[[8,0,96,8],[15,0,96,15],[19,0,96,19],[20,0,96,20],[34,0,96,34],[35,0,96,35],[41,0,96,41],[44,0,96,44],[45,0,96,45],[46,0,96,46]],[[4,0,97,4],[5,0,97,5]],[[4,0,99,4],[18,0,99,18],[19,0,99,19],[29,0,99,37]],[[8,0,100,8],[12,0,100,12],[13,0,100,13],[23,0,100,23],[26,0,100,26],[36,0,100,36],[37,0,100,37]],[[8,0,102,8],[15,0,102,15],[19,0,102,19],[20,0,102,20]],[[4,0,103,4],[5,0,103,5]],[[4,0,105,4]],[],[],[[7,0,108,7]],[[4,0,109,4],[27,0,109,27],[28,0,109,28],[32,0,109,61]],[[8,0,110,8],[12,0,110,12],[13,0,110,13],[32,0,110,32],[35,0,110,35],[39,0,110,39],[40,0,110,40]],[[8,0,112,8],[15,0,112,15],[19,0,112,19],[20,0,112,20]],[[4,0,113,4],[5,0,113,5]],[[4,0,115,4]],[],[],[[7,0,118,7]],[[4,0,120,4],[12,0,120,12],[13,0,120,13],[23,0,120,23],[26,0,120,26],[30,0,120,30]],[[8,0,121,8],[12,0,121,12],[13,0,121,13],[17,0,121,17],[20,0,121,20],[30,0,121,30],[31,0,121,31]],[[8,0,123,8],[15,0,123,15],[19,0,123,19],[20,0,123,20]],[[4,0,124,4],[5,0,124,5]],[[4,0,126,4]],[],[],[],[[7,0,130,7]],[[4,0,131,4],[17,0,131,17],[18,0,131,18],[27,0,131,49]],[[8,0,132,8],[12,0,132,12],[13,0,132,13],[28,0,132,28],[31,0,132,31],[40,0,132,40],[41,0,132,41]],[[8,0,134,8],[15,0,134,15],[19,0,134,19],[20,0,134,20]],[[4,0,135,4],[5,0,135,5]],[[4,0,137,4]],[],[],[[7,0,140,7]],[[4,0,141,4],[27,0,141,27],[28,0,141,28],[38,0,141,47],[42,0,141,51]],[[8,0,142,8],[12,0,142,12],[13,0,142,13],[21,0,142,21],[24,0,142,24],[31,0,142,31],[32,0,142,32]],[[8,0,144,8],[15,0,144,15],[19,0,144,19],[20,0,144,20]],[[4,0,145,4],[5,0,145,5]],[[4,0,147,4]],[],[],[],[[7,0,151,7]],[[4,0,152,4],[29,0,152,29],[30,0,152,30],[39,0,152,61]],[[8,0,153,8],[12,0,153,12],[13,0,153,13],[23,0,153,23],[26,0,153,26],[35,0,153,35],[36,0,153,36]],[[8,0,155,8],[15,0,155,15],[19,0,155,19],[20,0,155,20]],[[4,0,156,4],[5,0,156,5]],[[4,0,158,4]],[],[],[],[[7,0,162,7]],[[4,0,163,4],[17,0,163,17],[18,0,163,18],[37,0,163,45],[40,0,163,48],[42,0,163,50],[62,0,163,78],[63,0,163,79]],[[8,0,164,8],[12,0,164,12],[16,0,164,16],[17,0,164,17],[23,0,164,23],[24,0,164,24],[30,0,164,30],[34,0,164,34],[38,0,164,38],[39,0,164,39],[45,0,164,45],[46,0,164,46],[50,0,164,50],[51,0,164,51],[52,0,164,52],[56,0,164,56],[58,0,164,58],[60,0,164,60],[61,0,164,61],[68,0,164,68],[72,0,164,72],[73,0,164,73],[81,0,164,81],[86,0,164,86],[96,0,164,96],[97,0,164,97],[99,0,164,99]],[[12,0,165,12],[18,0,165,18],[23,0,165,23],[24,0,165,24],[102,0,165,102],[103,0,165,103],[104,0,165,104]],[[9,0,166,9]],[[8,0,168,8],[12,0,168,12],[13,0,168,13],[34,0,168,34],[35,0,168,35],[46,0,168,46],[48,0,168,48],[49,0,168,49]],[[8,0,170,8],[119,0,170,119]],[[8,0,171,8],[113,0,171,113]],[[8,0,172,8],[12,0,172,12],[13,0,172,13],[34,0,172,34],[37,0,172,37],[41,0,172,41],[42,0,172,42],[57,0,172,57],[58,0,172,58],[62,0,172,62],[63,0,173,12],[66,0,173,15],[67,0,173,16],[68,0,173,17],[75,0,173,24],[77,0,173,26],[79,0,173,28],[80,0,173,29],[84,0,173,33],[85,0,173,34],[99,0,173,48],[100,0,173,49],[104,0,173,53],[105,0,173,54],[112,0,173,61],[113,0,173,62],[114,0,173,63],[116,0,174,12],[128,0,174,24],[129,0,174,25],[145,0,174,41],[146,0,174,42],[148,0,175,12],[154,0,175,18],[155,0,175,19],[158,0,175,22],[160,0,175,24],[161,0,175,25],[165,0,175,29],[166,0,175,30],[180,0,175,44],[181,0,175,45],[187,0,175,51],[190,0,175,54],[191,0,175,55],[192,0,175,56],[194,0,176,12],[197,0,176,15],[198,0,176,16],[201,0,176,19],[203,0,176,21],[204,0,176,22],[208,0,176,26],[209,0,176,27],[223,0,176,41],[224,0,176,42],[228,0,176,46],[229,0,176,47],[231,0,176,49],[232,0,176,50],[233,0,176,51],[234,0,177,9],[235,0,177,10],[244,0,177,19],[245,0,177,20],[246,0,177,21],[257,0,177,32],[259,0,177,34],[261,0,177,36]],[[12,0,178,12],[16,0,178,16],[33,0,178,33],[38,0,178,38],[39,0,178,39],[40,0,178,40],[42,0,178,42]],[[16,0,179,16],[20,0,179,20],[21,0,179,21],[35,0,179,35],[38,0,179,38],[40,0,179,40],[41,0,179,41]],[[16,0,181,16],[23,0,181,23]],[[13,0,182,13]],[[12,0,184,12],[18,0,184,18],[23,0,184,23],[26,0,184,26],[30,0,184,30],[31,0,184,31],[37,0,184,37],[38,0,184,38],[45,0,184,45],[47,0,184,47],[48,0,184,48]],[[12,0,186,12],[84,0,186,84]],[[12,0,187,12],[49,0,187,49]],[[12,0,188,12],[17,0,188,17],[21,0,188,21],[22,0,188,22],[25,0,188,25],[26,0,188,26],[28,0,188,28],[29,0,188,29],[32,0,188,32],[37,0,188,37],[38,0,188,38],[44,0,188,44],[47,0,188,47],[48,0,188,48],[50,0,188,50],[51,0,188,51],[53,0,188,53],[55,0,188,55]],[[16,0,189,16],[22,0,189,22],[27,0,189,27],[30,0,189,30],[31,0,189,31],[35,0,189,35],[36,0,189,36],[52,0,189,52],[55,0,189,55],[56,0,189,56],[57,0,189,57],[60,0,189,60],[65,0,189,65],[66,0,189,66],[72,0,189,72],[73,0,189,73]],[[16,0,190,16],[22,0,190,22],[26,0,190,26],[29,0,190,29],[34,0,190,34],[35,0,190,35],[40,0,190,40],[41,0,190,41],[42,0,190,42]],[[16,0,192,16],[20,0,193,20],[21,0,193,21],[25,0,193,25],[26,0,193,26],[34,0,193,34]],[[20,0,194,20],[24,0,194,24],[25,0,194,25],[33,0,194,34],[35,0,194,36],[36,0,194,37],[47,0,194,48],[49,0,194,50],[50,0,194,51],[54,0,194,55],[56,0,194,57],[57,0,194,58],[64,0,194,65],[65,0,194,66],[76,0,194,77],[77,0,194,78],[82,0,194,83],[99,0,194,100],[101,0,195,18]],[[20,0,196,20],[24,0,196,24],[25,0,196,25],[38,0,196,38],[39,0,196,39],[44,0,196,44],[45,0,196,45],[46,0,196,46]],[[20,0,197,20],[26,0,197,26]],[[17,0,198,17]],[[13,0,199,13]],[[12,0,201,12],[16,0,201,16],[17,0,201,17],[31,0,201,31],[34,0,201,34],[36,0,201,36],[37,0,201,37]],[[8,0,202,8],[9,0,202,9],[10,0,202,10],[11,0,202,11]],[[8,0,204,8],[15,0,204,15],[19,0,204,19],[20,0,204,20]],[[4,0,205,4],[5,0,205,5]],[[4,0,207,4]],[],[],[],[[7,0,211,7]],[[4,0,212,4],[18,0,212,18],[19,0,212,19],[29,0,212,38],[33,0,212,42]],[[8,0,213,8],[12,0,213,12],[13,0,213,13],[23,0,213,23],[26,0,213,26],[33,0,213,33],[34,0,213,34]],[[8,0,215,8],[15,0,215,15],[19,0,215,19],[20,0,215,20]],[[4,0,216,4],[5,0,216,5]],[[4,0,224,4]],[],[],[[7,0,227,7]],[[4,0,228,4],[17,0,228,17],[18,0,228,18],[22,0,228,27]],[[8,0,229,8],[12,0,229,12],[13,0,229,13],[36,0,229,36],[39,0,229,39],[43,0,229,43],[44,0,229,44],[60,0,229,60],[61,0,229,61]],[[8,0,231,8],[12,0,231,12],[13,0,231,13],[29,0,231,29],[30,0,231,30],[34,0,231,34],[35,0,231,35],[36,0,231,36]],[[8,0,233,8],[12,0,233,12],[16,0,233,16],[17,0,233,17],[33,0,233,33],[38,0,233,38],[42,0,233,42],[43,0,233,43],[66,0,233,66],[68,0,233,68]],[[12,0,234,12],[16,0,234,16],[17,0,234,17],[23,0,234,23],[24,0,234,24],[28,0,234,28],[29,0,234,29],[33,0,234,33],[34,0,234,34],[50,0,234,50],[51,0,234,51],[52,0,234,52]],[[9,0,235,9]],[[4,0,236,4],[5,0,236,5]],[[4,0,238,4]],[],[],[[7,0,241,7]],[[4,0,242,4],[53,0,242,53]],[[4,0,243,4],[13,0,243,13],[14,0,243,14],[19,0,243,34]],[[8,0,244,8],[48,0,244,48]],[[8,0,245,8],[14,0,245,14],[21,0,245,21],[24,0,245,24],[29,0,245,29],[30,0,245,30],[37,0,245,37],[38,0,245,38]],[[8,0,247,8],[14,0,247,14],[23,0,247,23],[26,0,247,55],[27,0,247,56],[35,0,247,64],[37,0,247,66],[46,0,247,75],[48,0,247,77],[57,0,247,86],[59,0,247,88],[69,0,247,98],[70,0,247,99],[71,0,247,100]],[[8,0,248,8],[14,0,248,14],[31,0,248,31],[34,0,248,34],[43,0,248,43],[44,0,248,44],[49,0,248,49],[50,0,248,50],[51,0,248,51],[59,0,248,59],[61,0,248,61],[63,0,248,63]],[[12,0,249,12],[19,0,249,19],[20,0,249,20],[25,0,249,25],[26,0,249,26],[34,0,249,34],[35,0,249,35],[39,0,249,39],[43,0,249,43],[44,0,249,44],[63,0,249,63],[64,0,249,64],[71,0,249,71],[72,0,249,72],[80,0,249,80],[81,0,249,81],[84,0,249,84],[85,0,249,85],[86,0,249,86],[87,0,249,87]],[[8,0,250,8],[9,0,250,9],[10,0,250,10],[11,0,250,11]],[[8,0,252,8],[16,0,252,16],[23,0,252,23],[25,0,252,25]],[[12,0,253,12],[17,0,253,17],[20,0,253,20]],[[16,0,254,16],[20,0,254,20],[21,0,254,21],[27,0,254,27],[28,0,254,28],[32,0,254,32],[34,0,254,34],[35,0,254,35]],[[16,0,256,16],[23,0,256,23]],[[12,0,258,12],[17,0,258,17],[27,0,258,27]],[[16,0,259,16],[20,0,259,20],[24,0,259,24],[25,0,259,25],[33,0,259,33],[35,0,259,35]],[[20,0,260,20],[24,0,260,24],[25,0,260,25],[42,0,260,42],[44,0,260,44],[45,0,260,45]],[[20,0,261,20],[26,0,261,26]],[[17,0,262,17]],[[21,0,262,23]],[[20,0,263,20],[27,0,263,27]],[[17,0,264,17]],[[12,0,266,12],[17,0,266,17],[25,0,266,25]],[[16,0,267,16],[20,0,267,20],[24,0,267,24],[25,0,267,25],[33,0,267,33],[35,0,267,35]],[[20,0,268,20],[24,0,268,24],[25,0,268,25],[46,0,268,46],[48,0,268,48],[49,0,268,49]],[[20,0,269,20],[26,0,269,26]],[[17,0,270,17]],[[21,0,270,23]],[[20,0,271,20],[27,0,271,27]],[[17,0,272,17]],[[12,0,274,12],[17,0,274,17],[28,0,274,28]],[[16,0,275,16],[20,0,275,20],[24,0,275,24],[25,0,275,25],[35,0,275,35],[40,0,275,40],[45,0,275,45],[47,0,275,47]],[[20,0,276,20],[24,0,276,24],[25,0,276,25],[42,0,276,42],[44,0,276,44],[45,0,276,45]],[[20,0,277,20],[26,0,277,26]],[[17,0,278,17]],[[21,0,278,23],[25,0,278,27],[29,0,278,31],[30,0,278,32],[40,0,278,42],[45,0,278,47],[50,0,278,52],[52,0,278,54]],[[20,0,279,20],[24,0,279,24],[25,0,279,25],[46,0,279,46],[48,0,279,48],[49,0,279,49]],[[20,0,280,20],[26,0,280,26]],[[17,0,281,17]],[[21,0,281,23]],[[20,0,282,20],[27,0,282,27]],[[17,0,283,17]],[[12,0,285,12],[17,0,285,17],[27,0,285,27]],[[16,0,286,16],[20,0,286,20],[24,0,286,24],[25,0,286,25],[35,0,286,35],[40,0,286,40],[45,0,286,45],[47,0,286,47]],[[20,0,287,20],[24,0,287,24],[25,0,287,25],[46,0,287,46],[48,0,287,48],[49,0,287,49]],[[20,0,288,20],[26,0,288,26]],[[17,0,289,17]],[[21,0,289,23],[25,0,289,27],[29,0,289,31],[30,0,289,32],[40,0,289,42],[45,0,289,47],[50,0,289,52],[52,0,289,54]],[[20,0,290,20],[24,0,290,24],[25,0,290,25],[42,0,290,42],[44,0,290,44],[45,0,290,45]],[[20,0,291,20],[26,0,291,26]],[[17,0,292,17]],[[21,0,292,23]],[[20,0,293,20],[27,0,293,27]],[[17,0,294,17]],[[12,0,296,12],[17,0,296,17],[21,0,296,21]],[[16,0,297,16],[20,0,297,20],[24,0,297,24],[25,0,297,25],[35,0,297,35],[39,0,297,39],[56,0,297,56],[58,0,297,58]],[[20,0,298,20],[24,0,298,24],[25,0,298,25],[43,0,298,43],[45,0,298,45],[46,0,298,46]],[[20,0,299,20],[26,0,299,26]],[[17,0,300,17]],[[21,0,300,23]],[[20,0,301,20],[27,0,301,27]],[[17,0,302,17]],[[12,0,304,12],[17,0,304,17],[20,0,304,20]],[[16,0,305,16],[20,0,305,20],[24,0,305,24],[25,0,305,25],[35,0,305,35],[39,0,305,39],[56,0,305,56],[58,0,305,58]],[[20,0,306,20],[24,0,306,24],[25,0,306,25],[42,0,306,42],[44,0,306,44],[45,0,306,45]],[[20,0,307,20],[26,0,307,26]],[[17,0,308,17]],[[21,0,308,23]],[[20,0,309,20],[27,0,309,27]],[[17,0,310,17]],[[12,0,312,12]],[[16,0,313,16],[101,0,313,101]],[[16,0,314,16],[92,0,314,92]],[[16,0,315,16],[20,0,315,20],[25,0,315,25],[26,0,315,26],[29,0,315,29],[33,0,315,33],[38,0,315,38],[39,0,315,39],[42,0,315,42],[43,0,315,43],[49,0,315,49],[54,0,315,54],[55,0,315,55],[57,0,315,57]],[[20,0,316,20],[24,0,316,24],[25,0,316,25],[40,0,316,40],[41,0,316,41],[45,0,316,45],[46,0,316,46],[51,0,316,51],[52,0,316,52],[55,0,316,55],[56,0,316,56],[73,0,316,73],[75,0,316,75],[76,0,316,76],[77,0,316,77]],[[17,0,317,17]],[[21,0,317,23],[25,0,317,27],[26,0,317,28],[33,0,317,35],[37,0,317,39],[38,0,317,40],[42,0,317,44],[49,0,317,51],[53,0,317,55],[54,0,317,56],[55,0,317,57],[59,0,317,61],[60,0,317,62],[67,0,317,69],[71,0,317,73],[75,0,317,77],[79,0,317,81],[86,0,317,88],[90,0,317,92],[94,0,317,96],[95,0,317,97],[97,0,317,99]],[[20,0,318,20],[24,0,318,24],[25,0,318,25],[40,0,318,40],[41,0,318,41],[45,0,318,45],[46,0,318,46],[52,0,318,52],[53,0,318,53],[65,0,318,65],[66,0,318,66],[73,0,318,73],[74,0,318,74],[75,0,318,75],[76,0,318,76]],[[17,0,319,17]],[[16,0,321,16],[73,0,321,73]],[[16,0,322,16],[63,0,322,63]],[[16,0,323,16],[23,0,323,23]],[[9,0,324,9]],[[8,0,326,8],[12,0,326,12],[13,0,326,13],[27,0,326,27],[30,0,326,30],[32,0,326,32],[33,0,326,33]],[[8,0,327,8],[13,0,327,13],[14,0,327,14],[28,0,327,28],[30,0,327,30],[31,0,327,31]],[[4,0,328,4],[5,0,328,5]],[[4,0,330,4],[66,0,330,66]],[[4,0,331,4],[22,0,331,22]],[[8,0,332,8],[12,0,332,12],[13,0,332,13],[33,0,332,33],[34,0,332,34],[35,0,332,35],[37,0,332,37],[38,0,332,38],[39,0,332,39],[40,0,332,40]],[[4,0,333,4],[5,0,333,5]],[[4,0,335,4],[65,0,335,65]],[[4,0,336,4],[21,0,336,21]],[[8,0,337,8],[12,0,337,12],[13,0,337,13],[33,0,337,33],[34,0,337,34],[38,0,337,38],[39,0,337,39],[45,0,337,45],[46,0,337,46],[52,0,337,52],[55,0,337,55],[56,0,337,56],[58,0,337,58],[59,0,337,59],[60,0,337,60],[61,0,337,61],[62,0,337,62]],[[4,0,338,4],[5,0,338,5]],[[4,0,340,4],[65,0,340,65]],[[4,0,341,4],[21,0,341,21]],[[8,0,342,8],[12,0,342,12],[13,0,342,13],[29,0,342,29],[32,0,342,32],[33,0,342,33],[34,0,342,34],[35,0,342,35],[36,0,342,36],[40,0,342,40],[41,0,342,41],[59,0,342,59],[61,0,342,61],[62,0,342,62],[63,0,342,63],[64,0,342,64],[68,0,342,68],[69,0,342,69],[89,0,342,89],[90,0,342,90],[91,0,342,91],[92,0,342,92],[93,0,342,93]],[[4,0,343,4],[5,0,343,5]],[[4,0,345,4],[67,0,345,67]],[[4,0,346,4],[25,0,346,25]],[[8,0,347,8],[12,0,347,12],[13,0,347,13],[29,0,347,29],[32,0,347,32],[33,0,347,33],[37,0,347,37],[41,0,347,41],[42,0,347,42],[46,0,347,46],[47,0,347,47],[48,0,347,48],[49,0,347,49],[53,0,347,53],[54,0,347,54],[71,0,347,71],[73,0,347,73]],[[12,0,348,12],[13,0,348,13],[14,0,348,14],[18,0,348,18],[19,0,348,19],[39,0,348,39],[40,0,348,40],[41,0,348,41],[42,0,348,42],[43,0,348,43],[44,0,348,44]],[[4,0,349,4],[5,0,349,5]],[[4,0,351,4],[25,0,351,25],[26,0,351,26],[34,0,351,42],[38,0,351,46],[39,0,351,47],[49,0,351,57]],[[8,0,352,8],[14,0,352,14],[27,0,352,27],[30,0,352,30],[34,0,352,34],[35,0,352,35],[51,0,352,51],[54,0,352,54],[59,0,352,59],[60,0,352,60]],[[8,0,354,8],[12,0,354,12],[25,0,354,25],[29,0,354,29],[33,0,354,33],[34,0,354,34],[40,0,354,40],[41,0,354,41],[47,0,354,47],[49,0,354,49]],[[12,0,355,12],[16,0,355,16],[17,0,355,17],[34,0,355,34],[36,0,355,36],[37,0,355,37]],[[9,0,356,9]],[[13,0,356,15]],[[12,0,357,12],[16,0,357,16],[17,0,357,17],[37,0,357,37],[38,0,357,38],[43,0,357,43],[44,0,357,44],[45,0,357,45]],[[9,0,358,9]],[[4,0,359,4],[5,0,359,5]],[[4,0,361,4],[29,0,361,29],[30,0,361,30],[38,0,361,46],[42,0,361,50],[43,0,361,51],[53,0,361,61]],[[8,0,362,8],[14,0,362,14],[27,0,362,27],[30,0,362,30],[34,0,362,34],[35,0,362,35],[51,0,362,51],[54,0,362,54],[59,0,362,59],[60,0,362,60]],[[8,0,364,8],[12,0,364,12],[25,0,364,25],[29,0,364,29],[30,0,364,30],[32,0,364,32]],[[12,0,365,12],[16,0,365,16],[17,0,365,17],[35,0,365,35],[37,0,365,37],[38,0,365,38]],[[9,0,366,9]],[[13,0,366,15]],[[12,0,367,12],[16,0,367,16],[17,0,367,17],[37,0,367,37],[38,0,367,38],[39,0,367,39],[44,0,367,44],[45,0,367,45],[46,0,367,46]],[[9,0,368,9]],[[4,0,369,4],[5,0,369,5]],[[4,0,384,4],[20,0,384,20],[21,0,384,21],[25,0,384,30]],[[8,0,385,8],[14,0,385,14],[23,0,385,23],[26,0,385,26],[30,0,385,30],[31,0,385,31],[37,0,385,37],[38,0,385,38],[45,0,385,45],[47,0,385,47],[48,0,385,48]],[[8,0,386,8],[14,0,386,14],[19,0,386,19],[22,0,386,22],[29,0,386,29],[33,0,386,33],[38,0,386,38],[46,0,386,46],[47,0,386,47],[48,0,386,48],[49,0,386,49],[53,0,386,53],[54,0,386,54],[55,0,386,55],[56,0,386,56],[65,0,386,65],[66,0,386,66],[73,0,386,73],[74,0,386,74],[78,0,386,78],[79,0,386,79],[80,0,386,80]],[[8,0,388,8],[12,0,388,12],[13,0,388,13],[29,0,388,29],[32,0,388,32],[37,0,388,37],[38,0,388,38]],[[8,0,389,8],[12,0,389,12],[13,0,389,13],[24,0,389,24],[27,0,389,27],[36,0,389,36],[37,0,389,37],[42,0,389,42],[43,0,389,43],[44,0,389,44]],[[4,0,390,4],[5,0,390,5]],[[4,0,398,4]],[],[],[],[[7,0,402,7]],[[4,0,403,12],[24,0,403,32],[25,0,403,33],[30,0,403,46]],[[8,0,404,8],[12,0,404,12],[13,0,404,13],[17,0,404,17],[18,0,404,18],[19,0,404,19],[20,0,404,20],[24,0,404,24],[25,0,404,25],[44,0,404,44],[45,0,404,45],[50,0,404,50],[51,0,404,51],[52,0,404,52],[53,0,404,53],[54,0,404,54],[58,0,404,58],[59,0,404,59],[81,0,404,81],[82,0,404,82],[87,0,404,87],[88,0,404,88],[89,0,404,89]],[[4,0,405,4],[5,0,405,5]],[[4,0,407,4]],[],[],[],[[7,0,411,7]],[[4,0,412,12],[23,0,412,31],[24,0,412,32],[29,0,412,45]],[[8,0,413,8],[14,0,413,14],[19,0,413,19],[22,0,413,22],[26,0,413,26],[27,0,413,27],[40,0,413,40],[42,0,413,42],[43,0,413,43]],[[8,0,415,8],[13,0,415,13],[17,0,415,17],[18,0,415,18],[21,0,415,21],[22,0,415,22],[24,0,415,24],[25,0,415,25],[29,0,415,29],[34,0,415,34],[35,0,415,35],[41,0,415,41],[43,0,415,43],[44,0,415,44],[46,0,415,46],[48,0,415,48]],[[12,0,416,12],[18,0,416,18],[23,0,416,23],[26,0,416,26],[27,0,416,27],[31,0,416,31],[32,0,416,32],[48,0,416,48],[51,0,416,51],[52,0,416,52],[57,0,416,57],[60,0,416,60],[61,0,416,61],[62,0,416,62],[65,0,416,65],[70,0,416,70],[71,0,416,71],[77,0,416,77],[78,0,416,78],[81,0,416,81],[86,0,416,86],[87,0,416,87],[93,0,416,93],[94,0,416,94]],[[12,0,417,12],[18,0,417,18],[22,0,417,22],[25,0,417,25],[30,0,417,30],[31,0,417,31],[36,0,417,36],[37,0,417,37],[38,0,417,38]],[[12,0,419,12],[16,0,419,16],[17,0,419,17],[21,0,419,21],[22,0,419,22],[37,0,419,37],[38,0,419,38],[42,0,419,42],[43,0,419,43],[45,0,419,45]],[[16,0,420,16],[20,0,420,20],[21,0,420,21],[34,0,420,34],[35,0,420,35],[40,0,420,40],[41,0,420,41],[42,0,420,42]],[[16,0,422,16],[23,0,422,23]],[[13,0,423,13]],[[9,0,424,9]],[[4,0,425,4],[5,0,425,5]],[[4,0,427,4]],[],[],[],[[7,0,431,7]],[[4,0,432,12],[26,0,432,34],[27,0,432,35],[32,0,432,48]],[[8,0,433,8],[12,0,433,12],[13,0,433,13],[33,0,433,33],[34,0,433,34],[38,0,433,38],[39,0,433,39],[55,0,433,55],[58,0,433,58],[63,0,433,63],[65,0,433,65],[70,0,433,70],[71,0,433,71],[72,0,433,72]],[[4,0,434,4],[5,0,434,5]],[[4,0,436,4]],[],[],[],[[7,0,440,7]],[[4,0,441,12],[24,0,441,32],[25,0,441,33],[30,0,441,46],[32,0,441,48],[45,0,441,69]],[[8,0,442,8],[14,0,442,14],[19,0,442,19],[22,0,442,22],[26,0,442,26],[27,0,442,27],[40,0,442,40],[42,0,442,42],[43,0,442,43]],[[8,0,444,8],[12,0,444,12],[13,0,444,13],[18,0,444,18],[19,0,444,19],[24,0,444,24],[25,0,444,25],[27,0,444,27]],[[12,0,444,29],[19,0,444,36]],[[9,0,444,38]],[[8,0,446,8],[12,0,446,12],[20,0,446,20],[23,0,446,23],[28,0,446,28],[29,0,446,29]],[[8,0,447,8],[15,0,447,15],[19,0,447,19],[20,0,447,20],[35,0,447,35],[36,0,447,36],[41,0,447,41],[42,0,447,42],[50,0,447,50],[51,0,447,51],[52,0,447,52],[54,0,447,54]],[[12,0,448,12],[20,0,448,20],[24,0,448,24],[37,0,448,37],[38,0,448,38]],[[12,0,450,12],[16,0,450,16],[17,0,450,17],[22,0,450,22],[23,0,450,23],[31,0,450,31],[32,0,450,32],[34,0,450,34]],[[16,0,450,36],[23,0,450,43]],[[13,0,450,45]],[[9,0,451,9]],[[8,0,453,8],[12,0,453,12],[13,0,453,13],[26,0,453,26],[27,0,453,27],[35,0,453,35],[36,0,453,36],[37,0,453,37]],[[4,0,454,4],[5,0,454,5]],[[4,0,456,4],[41,0,456,41]],[[4,0,457,12],[17,0,457,25]],[[8,0,458,8],[15,0,458,15],[19,0,458,19],[20,0,458,20],[26,0,458,26],[38,0,458,38],[47,0,458,47],[48,0,458,48],[49,0,458,49],[50,0,458,50],[54,0,458,54],[55,0,458,55],[61,0,458,61],[62,0,458,62],[69,0,458,69],[71,0,458,71],[72,0,458,72],[73,0,458,73],[74,0,458,74],[78,0,458,78],[79,0,458,79],[85,0,458,85],[86,0,458,86]],[[4,0,459,4],[5,0,459,5]],[[1,0,460,1]],[[0,0,462,0],[35,0,462,35]]],"sourcesContent":["import { QueryList } from '@angular/core';\nimport {\n    UP_ARROW,\n    DOWN_ARROW,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    TAB,\n    A,\n    Z,\n    ZERO,\n    NINE,\n    HOME,\n    END\n} from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { debounceTime, filter, map, tap } from 'rxjs/operators';\n\n\n// This interface is for items that can be passed to a ListKeyManager.\n// tslint:disable-next-line naming-convention\nexport interface ListKeyManagerOption {\n    // Whether the option is disabled.\n    disabled?: boolean;\n\n    // Gets the label for this option.\n    getLabel?(): string;\n}\n\n/** Modifier keys handled by the ListKeyManager. */\nexport type ListKeyManagerModifierKey = 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey';\n\n/* tslint:disable:member-ordering */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager<T extends ListKeyManagerOption> {\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     */\n    tabOut: Subject<void> = new Subject<void>();\n\n    /** Stream that emits whenever the active item of the list manager changes. */\n    change = new Subject<number>();\n\n    previousActiveItemIndex = -1;\n\n    // Index of the currently active item.\n    get activeItemIndex(): number {\n        return this._activeItemIndex;\n    }\n\n    private _activeItemIndex = -1;\n\n    // The active item.\n    get activeItem(): T | null {\n        return this._activeItem;\n    }\n\n    private _activeItem: T;\n\n    private wrap: boolean = false;\n    private letterKeyStream = new Subject<string>();\n    private typeaheadSubscription = Subscription.EMPTY;\n    private vertical = true;\n    private horizontal: 'ltr' | 'rtl' | null;\n\n    private scrollSize: number = 0;\n\n    // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n    private pressedLetters: string[] = [];\n\n    private homeAndEnd = false;\n\n    private allowedModifierKeys: ListKeyManagerModifierKey[] = [];\n\n    constructor(private _items: QueryList<T>) {\n        if (_items instanceof QueryList) {\n\n            _items.changes.subscribe((newItems: QueryList<T>) => {\n\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping(): boolean {\n        return this.pressedLetters.length > 0;\n    }\n\n    withScrollSize(scrollSize: number): this {\n        this.scrollSize = scrollSize;\n\n        return this;\n    }\n\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys: ListKeyManagerModifierKey[]): this {\n        this.allowedModifierKeys = keys;\n\n        return this;\n    }\n\n    /**\n     * Turns on wrapping mode, which ensures that the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     */\n\n    withWrap(shouldWrap = true): this {\n        this.wrap = shouldWrap;\n\n        return this;\n    }\n\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate: (item: T) => boolean): this {\n        this.skipPredicateFn = predicate;\n\n        return this;\n    }\n\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled: boolean = true): this {\n        this.vertical = enabled;\n\n        return this;\n    }\n\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction: 'ltr' | 'rtl' | null): this {\n        this.horizontal = direction;\n\n        return this;\n    }\n\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param searchLetterIndex letter index for incremental search, if is -1 search is disabled\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval: number = 200, searchLetterIndex: number = 0): this {\n        if (this._items.length && this._items.some((item) => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n\n        this.typeaheadSubscription.unsubscribe();\n\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters and convert those\n        // letters back into a string. Afterwards find the first item that starts with that string and select it.\n        this.typeaheadSubscription = this.letterKeyStream.pipe(\n            tap((keyCode) => this.pressedLetters.push(keyCode)),\n            debounceTime(debounceInterval),\n            filter(() => this.pressedLetters.length > 0),\n            map(() => this.pressedLetters.join(''))\n        ).subscribe((inputString) => {\n            if (searchLetterIndex === -1) {\n                this.pressedLetters = [];\n\n                return;\n            }\n\n            const items = this._items.toArray();\n\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n\n                if (\n                    !item.disabled &&\n                    item.getLabel!().toUpperCase().trim().indexOf(inputString) === searchLetterIndex\n                ) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n\n            this.pressedLetters = [];\n        });\n\n        return this;\n    }\n\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled: boolean = true): this {\n        this.homeAndEnd = enabled;\n\n        return this;\n    }\n\n    /**\n     * Sets the active item to the item at the index specified.\n     * @param index The index of the item to be set as active or item The item to be set as active.\n     */\n    setActiveItem(index: number | T): void;\n\n    /**\n     * Sets the active item to the item at the index specified.\n     * @param item The index of the item to be set as active.\n     */\n    setActiveItem(item: any): void {\n        this.previousActiveItemIndex = this._activeItemIndex;\n\n        this.updateActiveItem(item);\n\n        if (this._activeItemIndex !== this.previousActiveItemIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    // tslint:disable-next-line:cyclomatic-complexity\n    onKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        const modifiers: ListKeyManagerModifierKey[] = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every((modifier) => {\n            return !event[modifier] || this.allowedModifierKeys.indexOf(modifier) > -1;\n        });\n\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n\n                return;\n\n            case DOWN_ARROW:\n                if (this.vertical) {\n                    this.setNextItemActive();\n                    break;\n                } else {\n                    return;\n                }\n\n            case UP_ARROW:\n                if (this.vertical) {\n                    this.setPreviousItemActive();\n                    break;\n                } else {\n                    return;\n                }\n\n            case RIGHT_ARROW:\n                if (this.horizontal === 'ltr') {\n                    this.setNextItemActive();\n                    break;\n                } else if (this.horizontal === 'rtl') {\n                    this.setPreviousItemActive();\n                    break;\n                } else {\n                    return;\n                }\n\n            case LEFT_ARROW:\n                if (this.horizontal === 'ltr') {\n                    this.setPreviousItemActive();\n                    break;\n                } else if (this.horizontal === 'rtl') {\n                    this.setNextItemActive();\n                    break;\n                } else {\n                    return;\n                }\n\n            case HOME:\n                if (this.homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                } else {\n                    return;\n                }\n\n            case END:\n                if (this.homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                } else {\n                    return;\n                }\n\n            default:\n                // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                if (event.key && event.key.length === 1) {\n                    this.letterKeyStream.next(event.key.toLocaleUpperCase());\n                } else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                    this.letterKeyStream.next(String.fromCharCode(keyCode));\n                }\n\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n\n        this.pressedLetters = [];\n        event.preventDefault();\n    }\n\n    // Sets the active item to the first enabled item in the list.\n    setFirstItemActive(): void {\n        this.setActiveItemByIndex(0, 1);\n    }\n\n    // Sets the active item to the last enabled item in the list.\n    setLastItemActive(): void {\n        this.setActiveItemByIndex(this._items.length - 1, -1);\n    }\n\n    // Sets the active item to the next enabled item in the list.\n    setNextItemActive(): void {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this.setActiveItemByDelta(1);\n    }\n\n    // Sets the active item to a previous enabled item in the list.\n    setPreviousItemActive(): void {\n        this._activeItemIndex < 0 && this.wrap ? this.setLastItemActive()\n            : this.setActiveItemByDelta(-1);\n    }\n\n    setNextPageItemActive(delta: number = this.scrollSize): void {\n        const nextItemIndex = this._activeItemIndex + delta;\n\n        if (nextItemIndex >= this._items.length) {\n            this.setLastItemActive();\n        } else {\n            this.setActiveItemByDelta(delta);\n        }\n    }\n\n    setPreviousPageItemActive(delta: number = this.scrollSize): void {\n        const nextItemIndex = this._activeItemIndex - delta;\n\n        if (nextItemIndex <= 0) {\n            this.setFirstItemActive();\n        } else {\n            this.setActiveItemByDelta(-delta);\n        }\n    }\n\n    /**\n     * Allows setting the active without any other effects.\n     * @param index Index of the item to be set as active.\n     */\n    updateActiveItem(index: number): void;\n\n    /**\n     * Allows setting the active item without any other effects.\n     * @param item Item to be set as active or index Index of the item to be set as active..\n     */\n    // tslint:disable-next-line:unified-signatures\n    updateActiveItem(item: number | T): void;\n\n    updateActiveItem(item: any): void {\n        const itemArray = this._items.toArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n\n        this._activeItemIndex = index;\n        this._activeItem = itemArray[index];\n    }\n\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     */\n    private skipPredicateFn = (item: T) => item.disabled;\n\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    private setActiveItemByDelta(delta: number): void {\n        this.wrap ? this.setActiveInWrapMode(delta) : this.setActiveInDefaultMode(delta);\n    }\n\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    private setActiveInWrapMode(delta: number): void {\n        const items = this.getItemsArray();\n\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            const item = items[index];\n\n            if (!this.skipPredicateFn(item)) {\n                this.setActiveItem(index);\n\n                return;\n            }\n        }\n    }\n\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    private setActiveInDefaultMode(delta: number): void {\n        this.setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    private setActiveItemByIndex(index: number, fallbackDelta: number): void {\n        const items = this.getItemsArray();\n\n        if (!items[index]) { return; }\n\n        let curIndex = index;\n        while (this.skipPredicateFn(items[curIndex])) {\n            curIndex += fallbackDelta;\n\n            if (!items[curIndex]) { return; }\n        }\n\n        this.setActiveItem(curIndex);\n    }\n\n    /** Returns the items as an array. */\n    private getItemsArray(): T[] {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/* tslint:enable:member-ordering */\n"]},"resolvedIds":{"@angular/core":{"external":true,"id":"@angular/core","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"@ptsecurity/cdk/keycodes":{"external":true,"id":"@ptsecurity/cdk/keycodes","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs":{"external":true,"id":"rxjs","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false},"rxjs/operators":{"external":true,"id":"rxjs/operators","meta":{},"moduleSideEffects":true,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3714,"body":[{"type":"ImportDeclaration","start":0,"end":52,"specifiers":[{"type":"ImportSpecifier","start":9,"end":23,"imported":{"type":"Identifier","start":9,"end":23,"name":"ListKeyManager"},"local":{"type":"Identifier","start":9,"end":23,"name":"ListKeyManager"}}],"source":{"type":"Literal","start":31,"end":51,"value":"./list-key-manager","raw":"'./list-key-manager'"}},{"type":"ExportNamedDeclaration","start":53,"end":583,"declaration":{"type":"ClassDeclaration","start":60,"end":583,"id":{"type":"Identifier","start":66,"end":92,"name":"ActiveDescendantKeyManager"},"superClass":{"type":"Identifier","start":101,"end":115,"name":"ListKeyManager"},"body":{"type":"ClassBody","start":116,"end":583,"body":[{"type":"MethodDefinition","start":339,"end":581,"static":false,"computed":false,"key":{"type":"Identifier","start":339,"end":352,"name":"setActiveItem"},"kind":"method","value":{"type":"FunctionExpression","start":352,"end":581,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":353,"end":358,"name":"index"}],"body":{"type":"BlockStatement","start":360,"end":581,"body":[{"type":"IfStatement","start":370,"end":451,"test":{"type":"MemberExpression","start":374,"end":389,"object":{"type":"ThisExpression","start":374,"end":378},"property":{"type":"Identifier","start":379,"end":389,"name":"activeItem"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":391,"end":451,"body":[{"type":"ExpressionStatement","start":405,"end":441,"expression":{"type":"CallExpression","start":405,"end":440,"callee":{"type":"MemberExpression","start":405,"end":438,"object":{"type":"MemberExpression","start":405,"end":420,"object":{"type":"ThisExpression","start":405,"end":409},"property":{"type":"Identifier","start":410,"end":420,"name":"activeItem"},"computed":false,"optional":false},"property":{"type":"Identifier","start":421,"end":438,"name":"setInactiveStyles"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":null},{"type":"ExpressionStatement","start":460,"end":487,"expression":{"type":"CallExpression","start":460,"end":486,"callee":{"type":"MemberExpression","start":460,"end":479,"object":{"type":"Super","start":460,"end":465},"property":{"type":"Identifier","start":466,"end":479,"name":"setActiveItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":480,"end":485,"name":"index"}],"optional":false}},{"type":"IfStatement","start":496,"end":575,"test":{"type":"MemberExpression","start":500,"end":515,"object":{"type":"ThisExpression","start":500,"end":504},"property":{"type":"Identifier","start":505,"end":515,"name":"activeItem"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":517,"end":575,"body":[{"type":"ExpressionStatement","start":531,"end":565,"expression":{"type":"CallExpression","start":531,"end":564,"callee":{"type":"MemberExpression","start":531,"end":562,"object":{"type":"MemberExpression","start":531,"end":546,"object":{"type":"ThisExpression","start":531,"end":535},"property":{"type":"Identifier","start":536,"end":546,"name":"activeItem"},"computed":false,"optional":false},"property":{"type":"Identifier","start":547,"end":562,"name":"setActiveStyles"},"computed":false,"optional":false},"arguments":[],"optional":false}}]},"alternate":null}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZlZGVzY2VuZGFudC1rZXktbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2Nkay9hMTF5L2tleS1tYW5hZ2VyL2FjdGl2ZWRlc2NlbmRhbnQta2V5LW1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGNBQWMsRUFBd0IsTUFBTSxvQkFBb0IsQ0FBQztBQWlCMUUsTUFBTSxPQUFPLDBCQUE4QixTQUFRLGNBQWlDO0lBa0JoRjs7OztPQUlHO0lBQ0gsYUFBYSxDQUFDLEtBQVU7UUFDcEIsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztTQUN2QztRQUVELEtBQUssQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFM0IsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDckM7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IExpc3RLZXlNYW5hZ2VyLCBMaXN0S2V5TWFuYWdlck9wdGlvbiB9IGZyb20gJy4vbGlzdC1rZXktbWFuYWdlcic7XG5cblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBpbnRlcmZhY2UgZm9yIGhpZ2hsaWdodGFibGUgaXRlbXMgKHVzZWQgYnkgdGhlIEFjdGl2ZURlc2NlbmRhbnRLZXlNYW5hZ2VyKS5cbiAqIEVhY2ggaXRlbSBtdXN0IGtub3cgaG93IHRvIHN0eWxlIGl0c2VsZiBhcyBhY3RpdmUgb3IgaW5hY3RpdmUgYW5kIHdoZXRoZXIgb3Igbm90IGl0IGlzXG4gKiBjdXJyZW50bHkgZGlzYWJsZWQuXG4gKi9cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZSBuYW1pbmctY29udmVudGlvblxuZXhwb3J0IGludGVyZmFjZSBIaWdobGlnaHRhYmxlIGV4dGVuZHMgTGlzdEtleU1hbmFnZXJPcHRpb24ge1xuICAgIC8vIEFwcGxpZXMgdGhlIHN0eWxlcyBmb3IgYW4gYWN0aXZlIGl0ZW0gdG8gdGhpcyBpdGVtLlxuICAgIHNldEFjdGl2ZVN0eWxlcygpOiB2b2lkO1xuXG4gICAgLy8gQXBwbGllcyB0aGUgc3R5bGVzIGZvciBhbiBpbmFjdGl2ZSBpdGVtIHRvIHRoaXMgaXRlbS5cbiAgICBzZXRJbmFjdGl2ZVN0eWxlcygpOiB2b2lkO1xufVxuXG5leHBvcnQgY2xhc3MgQWN0aXZlRGVzY2VuZGFudEtleU1hbmFnZXI8VD4gZXh0ZW5kcyBMaXN0S2V5TWFuYWdlcjxIaWdobGlnaHRhYmxlICYgVD4ge1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgYWN0aXZlIGl0ZW0gdG8gdGhlIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCBpbmRleCBhbmQgYWRkcyB0aGVcbiAgICAgKiBhY3RpdmUgc3R5bGVzIHRvIHRoZSBuZXdseSBhY3RpdmUgaXRlbS4gQWxzbyByZW1vdmVzIGFjdGl2ZSBzdHlsZXNcbiAgICAgKiBmcm9tIHRoZSBwcmV2aW91c2x5IGFjdGl2ZSBpdGVtLlxuICAgICAqIEBwYXJhbSBpbmRleCBJbmRleCBvZiB0aGUgaXRlbSB0byBiZSBzZXQgYXMgYWN0aXZlLlxuICAgICAqL1xuICAgIHNldEFjdGl2ZUl0ZW0oaW5kZXg6IG51bWJlcik6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBhY3RpdmUgaXRlbSB0byB0aGUgaXRlbSB0byB0aGUgc3BlY2lmaWVkIG9uZSBhbmQgYWRkcyB0aGVcbiAgICAgKiBhY3RpdmUgc3R5bGVzIHRvIHRoZSBpdC4gQWxzbyByZW1vdmVzIGFjdGl2ZSBzdHlsZXMgZnJvbSB0aGVcbiAgICAgKiBwcmV2aW91c2x5IGFjdGl2ZSBpdGVtLlxuICAgICAqIEBwYXJhbSBpdGVtIEl0ZW0gdG8gYmUgc2V0IGFzIGFjdGl2ZS5cbiAgICAgKi9cbiAgICBzZXRBY3RpdmVJdGVtKGl0ZW06IFQpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2Qgc2V0cyB0aGUgYWN0aXZlIGl0ZW0gdG8gdGhlIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCBpbmRleC5cbiAgICAgKiBJdCBhbHNvIGFkZHMgYWN0aXZlIHN0eWxlcyB0byB0aGUgbmV3bHkgYWN0aXZlIGl0ZW0gYW5kIHJlbW92ZXMgYWN0aXZlXG4gICAgICogc3R5bGVzIGZyb20gdGhlIHByZXZpb3VzbHkgYWN0aXZlIGl0ZW0uXG4gICAgICovXG4gICAgc2V0QWN0aXZlSXRlbShpbmRleDogYW55KTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmFjdGl2ZUl0ZW0pIHtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlSXRlbS5zZXRJbmFjdGl2ZVN0eWxlcygpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3VwZXIuc2V0QWN0aXZlSXRlbShpbmRleCk7XG5cbiAgICAgICAgaWYgKHRoaXMuYWN0aXZlSXRlbSkge1xuICAgICAgICAgICAgdGhpcy5hY3RpdmVJdGVtLnNldEFjdGl2ZVN0eWxlcygpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19","start":584,"end":3714}]},"code":"import { ListKeyManager } from './list-key-manager';\nexport class ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds active styles to the newly active item and removes active\n     * styles from the previously active item.\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZlZGVzY2VuZGFudC1rZXktbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2Nkay9hMTF5L2tleS1tYW5hZ2VyL2FjdGl2ZWRlc2NlbmRhbnQta2V5LW1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGNBQWMsRUFBd0IsTUFBTSxvQkFBb0IsQ0FBQztBQWlCMUUsTUFBTSxPQUFPLDBCQUE4QixTQUFRLGNBQWlDO0lBa0JoRjs7OztPQUlHO0lBQ0gsYUFBYSxDQUFDLEtBQVU7UUFDcEIsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztTQUN2QztRQUVELEtBQUssQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFM0IsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDckM7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IExpc3RLZXlNYW5hZ2VyLCBMaXN0S2V5TWFuYWdlck9wdGlvbiB9IGZyb20gJy4vbGlzdC1rZXktbWFuYWdlcic7XG5cblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBpbnRlcmZhY2UgZm9yIGhpZ2hsaWdodGFibGUgaXRlbXMgKHVzZWQgYnkgdGhlIEFjdGl2ZURlc2NlbmRhbnRLZXlNYW5hZ2VyKS5cbiAqIEVhY2ggaXRlbSBtdXN0IGtub3cgaG93IHRvIHN0eWxlIGl0c2VsZiBhcyBhY3RpdmUgb3IgaW5hY3RpdmUgYW5kIHdoZXRoZXIgb3Igbm90IGl0IGlzXG4gKiBjdXJyZW50bHkgZGlzYWJsZWQuXG4gKi9cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZSBuYW1pbmctY29udmVudGlvblxuZXhwb3J0IGludGVyZmFjZSBIaWdobGlnaHRhYmxlIGV4dGVuZHMgTGlzdEtleU1hbmFnZXJPcHRpb24ge1xuICAgIC8vIEFwcGxpZXMgdGhlIHN0eWxlcyBmb3IgYW4gYWN0aXZlIGl0ZW0gdG8gdGhpcyBpdGVtLlxuICAgIHNldEFjdGl2ZVN0eWxlcygpOiB2b2lkO1xuXG4gICAgLy8gQXBwbGllcyB0aGUgc3R5bGVzIGZvciBhbiBpbmFjdGl2ZSBpdGVtIHRvIHRoaXMgaXRlbS5cbiAgICBzZXRJbmFjdGl2ZVN0eWxlcygpOiB2b2lkO1xufVxuXG5leHBvcnQgY2xhc3MgQWN0aXZlRGVzY2VuZGFudEtleU1hbmFnZXI8VD4gZXh0ZW5kcyBMaXN0S2V5TWFuYWdlcjxIaWdobGlnaHRhYmxlICYgVD4ge1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgYWN0aXZlIGl0ZW0gdG8gdGhlIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCBpbmRleCBhbmQgYWRkcyB0aGVcbiAgICAgKiBhY3RpdmUgc3R5bGVzIHRvIHRoZSBuZXdseSBhY3RpdmUgaXRlbS4gQWxzbyByZW1vdmVzIGFjdGl2ZSBzdHlsZXNcbiAgICAgKiBmcm9tIHRoZSBwcmV2aW91c2x5IGFjdGl2ZSBpdGVtLlxuICAgICAqIEBwYXJhbSBpbmRleCBJbmRleCBvZiB0aGUgaXRlbSB0byBiZSBzZXQgYXMgYWN0aXZlLlxuICAgICAqL1xuICAgIHNldEFjdGl2ZUl0ZW0oaW5kZXg6IG51bWJlcik6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBhY3RpdmUgaXRlbSB0byB0aGUgaXRlbSB0byB0aGUgc3BlY2lmaWVkIG9uZSBhbmQgYWRkcyB0aGVcbiAgICAgKiBhY3RpdmUgc3R5bGVzIHRvIHRoZSBpdC4gQWxzbyByZW1vdmVzIGFjdGl2ZSBzdHlsZXMgZnJvbSB0aGVcbiAgICAgKiBwcmV2aW91c2x5IGFjdGl2ZSBpdGVtLlxuICAgICAqIEBwYXJhbSBpdGVtIEl0ZW0gdG8gYmUgc2V0IGFzIGFjdGl2ZS5cbiAgICAgKi9cbiAgICBzZXRBY3RpdmVJdGVtKGl0ZW06IFQpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2Qgc2V0cyB0aGUgYWN0aXZlIGl0ZW0gdG8gdGhlIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCBpbmRleC5cbiAgICAgKiBJdCBhbHNvIGFkZHMgYWN0aXZlIHN0eWxlcyB0byB0aGUgbmV3bHkgYWN0aXZlIGl0ZW0gYW5kIHJlbW92ZXMgYWN0aXZlXG4gICAgICogc3R5bGVzIGZyb20gdGhlIHByZXZpb3VzbHkgYWN0aXZlIGl0ZW0uXG4gICAgICovXG4gICAgc2V0QWN0aXZlSXRlbShpbmRleDogYW55KTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmFjdGl2ZUl0ZW0pIHtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlSXRlbS5zZXRJbmFjdGl2ZVN0eWxlcygpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3VwZXIuc2V0QWN0aXZlSXRlbShpbmRleCk7XG5cbiAgICAgICAgaWYgKHRoaXMuYWN0aXZlSXRlbSkge1xuICAgICAgICAgICAgdGhpcy5hY3RpdmVJdGVtLnNldEFjdGl2ZVN0eWxlcygpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19","customTransformCache":false,"dependencies":["/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/list-key-manager.mjs"],"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/activedescendant-key-manager.mjs","meta":{},"moduleSideEffects":false,"originalCode":"import { ListKeyManager } from './list-key-manager';\nexport class ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds active styles to the newly active item and removes active\n     * styles from the previously active item.\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aXZlZGVzY2VuZGFudC1rZXktbWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2Nkay9hMTF5L2tleS1tYW5hZ2VyL2FjdGl2ZWRlc2NlbmRhbnQta2V5LW1hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGNBQWMsRUFBd0IsTUFBTSxvQkFBb0IsQ0FBQztBQWlCMUUsTUFBTSxPQUFPLDBCQUE4QixTQUFRLGNBQWlDO0lBa0JoRjs7OztPQUlHO0lBQ0gsYUFBYSxDQUFDLEtBQVU7UUFDcEIsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxVQUFVLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztTQUN2QztRQUVELEtBQUssQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFM0IsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxVQUFVLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDckM7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IExpc3RLZXlNYW5hZ2VyLCBMaXN0S2V5TWFuYWdlck9wdGlvbiB9IGZyb20gJy4vbGlzdC1rZXktbWFuYWdlcic7XG5cblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBpbnRlcmZhY2UgZm9yIGhpZ2hsaWdodGFibGUgaXRlbXMgKHVzZWQgYnkgdGhlIEFjdGl2ZURlc2NlbmRhbnRLZXlNYW5hZ2VyKS5cbiAqIEVhY2ggaXRlbSBtdXN0IGtub3cgaG93IHRvIHN0eWxlIGl0c2VsZiBhcyBhY3RpdmUgb3IgaW5hY3RpdmUgYW5kIHdoZXRoZXIgb3Igbm90IGl0IGlzXG4gKiBjdXJyZW50bHkgZGlzYWJsZWQuXG4gKi9cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZSBuYW1pbmctY29udmVudGlvblxuZXhwb3J0IGludGVyZmFjZSBIaWdobGlnaHRhYmxlIGV4dGVuZHMgTGlzdEtleU1hbmFnZXJPcHRpb24ge1xuICAgIC8vIEFwcGxpZXMgdGhlIHN0eWxlcyBmb3IgYW4gYWN0aXZlIGl0ZW0gdG8gdGhpcyBpdGVtLlxuICAgIHNldEFjdGl2ZVN0eWxlcygpOiB2b2lkO1xuXG4gICAgLy8gQXBwbGllcyB0aGUgc3R5bGVzIGZvciBhbiBpbmFjdGl2ZSBpdGVtIHRvIHRoaXMgaXRlbS5cbiAgICBzZXRJbmFjdGl2ZVN0eWxlcygpOiB2b2lkO1xufVxuXG5leHBvcnQgY2xhc3MgQWN0aXZlRGVzY2VuZGFudEtleU1hbmFnZXI8VD4gZXh0ZW5kcyBMaXN0S2V5TWFuYWdlcjxIaWdobGlnaHRhYmxlICYgVD4ge1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgYWN0aXZlIGl0ZW0gdG8gdGhlIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCBpbmRleCBhbmQgYWRkcyB0aGVcbiAgICAgKiBhY3RpdmUgc3R5bGVzIHRvIHRoZSBuZXdseSBhY3RpdmUgaXRlbS4gQWxzbyByZW1vdmVzIGFjdGl2ZSBzdHlsZXNcbiAgICAgKiBmcm9tIHRoZSBwcmV2aW91c2x5IGFjdGl2ZSBpdGVtLlxuICAgICAqIEBwYXJhbSBpbmRleCBJbmRleCBvZiB0aGUgaXRlbSB0byBiZSBzZXQgYXMgYWN0aXZlLlxuICAgICAqL1xuICAgIHNldEFjdGl2ZUl0ZW0oaW5kZXg6IG51bWJlcik6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBhY3RpdmUgaXRlbSB0byB0aGUgaXRlbSB0byB0aGUgc3BlY2lmaWVkIG9uZSBhbmQgYWRkcyB0aGVcbiAgICAgKiBhY3RpdmUgc3R5bGVzIHRvIHRoZSBpdC4gQWxzbyByZW1vdmVzIGFjdGl2ZSBzdHlsZXMgZnJvbSB0aGVcbiAgICAgKiBwcmV2aW91c2x5IGFjdGl2ZSBpdGVtLlxuICAgICAqIEBwYXJhbSBpdGVtIEl0ZW0gdG8gYmUgc2V0IGFzIGFjdGl2ZS5cbiAgICAgKi9cbiAgICBzZXRBY3RpdmVJdGVtKGl0ZW06IFQpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2Qgc2V0cyB0aGUgYWN0aXZlIGl0ZW0gdG8gdGhlIGl0ZW0gYXQgdGhlIHNwZWNpZmllZCBpbmRleC5cbiAgICAgKiBJdCBhbHNvIGFkZHMgYWN0aXZlIHN0eWxlcyB0byB0aGUgbmV3bHkgYWN0aXZlIGl0ZW0gYW5kIHJlbW92ZXMgYWN0aXZlXG4gICAgICogc3R5bGVzIGZyb20gdGhlIHByZXZpb3VzbHkgYWN0aXZlIGl0ZW0uXG4gICAgICovXG4gICAgc2V0QWN0aXZlSXRlbShpbmRleDogYW55KTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmFjdGl2ZUl0ZW0pIHtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlSXRlbS5zZXRJbmFjdGl2ZVN0eWxlcygpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3VwZXIuc2V0QWN0aXZlSXRlbShpbmRleCk7XG5cbiAgICAgICAgaWYgKHRoaXMuYWN0aXZlSXRlbSkge1xuICAgICAgICAgICAgdGhpcy5hY3RpdmVJdGVtLnNldEFjdGl2ZVN0eWxlcygpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19","originalSourcemap":{"version":3,"file":"activedescendant-key-manager.js","sourceRoot":"","sources":["../../../../../packages/cdk/a11y/key-manager/activedescendant-key-manager.ts"],"names":[],"mappings":[[[0,0,1,0],[7,0,1,7],[9,0,1,9],[23,0,1,23],[25,0,1,47],[31,0,1,53],[51,0,1,73],[52,0,1,74]],[[0,0,18,0],[6,0,18,6],[13,0,18,13],[39,0,18,43],[48,0,18,51],[62,0,18,84]],[[4,0,36,4]],[],[],[],[[7,0,40,7]],[[4,0,41,4],[17,0,41,17],[18,0,41,18],[23,0,41,28]],[[8,0,42,8],[12,0,42,12],[16,0,42,16],[17,0,42,17],[27,0,42,27],[29,0,42,29]],[[12,0,43,12],[16,0,43,16],[17,0,43,17],[27,0,43,27],[28,0,43,28],[45,0,43,45],[47,0,43,47],[48,0,43,48]],[[9,0,44,9]],[[8,0,46,8],[13,0,46,13],[14,0,46,14],[27,0,46,27],[28,0,46,28],[33,0,46,33],[34,0,46,34],[35,0,46,35]],[[8,0,48,8],[12,0,48,12],[16,0,48,16],[17,0,48,17],[27,0,48,27],[29,0,48,29]],[[12,0,49,12],[16,0,49,16],[17,0,49,17],[27,0,49,27],[28,0,49,28],[43,0,49,43],[45,0,49,45],[46,0,49,46]],[[9,0,50,9]],[[4,0,51,4],[5,0,51,5]],[[1,0,52,1]]],"sourcesContent":["\nimport { ListKeyManager, ListKeyManagerOption } from './list-key-manager';\n\n\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n */\n// tslint:disable-next-line naming-convention\nexport interface Highlightable extends ListKeyManagerOption {\n    // Applies the styles for an active item to this item.\n    setActiveStyles(): void;\n\n    // Applies the styles for an inactive item to this item.\n    setInactiveStyles(): void;\n}\n\nexport class ActiveDescendantKeyManager<T> extends ListKeyManager<Highlightable & T> {\n\n    /**\n     * Sets the active item to the item at the specified index and adds the\n     * active styles to the newly active item. Also removes active styles\n     * from the previously active item.\n     * @param index Index of the item to be set as active.\n     */\n    setActiveItem(index: number): void;\n\n    /**\n     * Sets the active item to the item to the specified one and adds the\n     * active styles to the it. Also removes active styles from the\n     * previously active item.\n     * @param item Item to be set as active.\n     */\n    setActiveItem(item: T): void;\n\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds active styles to the newly active item and removes active\n     * styles from the previously active item.\n     */\n    setActiveItem(index: any): void {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n\n        super.setActiveItem(index);\n\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n"]},"resolvedIds":{"./list-key-manager":{"external":false,"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/list-key-manager.mjs","meta":{},"moduleSideEffects":false,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":3395,"body":[{"type":"ImportDeclaration","start":0,"end":52,"specifiers":[{"type":"ImportSpecifier","start":9,"end":23,"imported":{"type":"Identifier","start":9,"end":23,"name":"ListKeyManager"},"local":{"type":"Identifier","start":9,"end":23,"name":"ListKeyManager"}}],"source":{"type":"Literal","start":31,"end":51,"value":"./list-key-manager","raw":"'./list-key-manager'"}},{"type":"ExportNamedDeclaration","start":53,"end":676,"declaration":{"type":"ClassDeclaration","start":60,"end":676,"id":{"type":"Identifier","start":66,"end":81,"name":"FocusKeyManager"},"superClass":{"type":"Identifier","start":90,"end":104,"name":"ListKeyManager"},"body":{"type":"ClassBody","start":105,"end":676,"body":[{"type":"MethodDefinition","start":111,"end":194,"static":false,"computed":false,"key":{"type":"Identifier","start":111,"end":122,"name":"constructor"},"kind":"constructor","value":{"type":"FunctionExpression","start":122,"end":194,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":125,"end":194,"body":[{"type":"ExpressionStatement","start":135,"end":155,"expression":{"type":"CallExpression","start":135,"end":154,"callee":{"type":"Super","start":135,"end":140},"arguments":[{"type":"SpreadElement","start":141,"end":153,"argument":{"type":"Identifier","start":144,"end":153,"name":"arguments"}}],"optional":false}},{"type":"ExpressionStatement","start":164,"end":188,"expression":{"type":"AssignmentExpression","start":164,"end":187,"operator":"=","left":{"type":"MemberExpression","start":164,"end":175,"object":{"type":"ThisExpression","start":164,"end":168},"property":{"type":"Identifier","start":169,"end":175,"name":"origin"},"computed":false,"optional":false},"right":{"type":"Literal","start":178,"end":187,"value":"program","raw":"'program'"}}}]}}},{"type":"MethodDefinition","start":380,"end":461,"static":false,"computed":false,"key":{"type":"Identifier","start":380,"end":394,"name":"setFocusOrigin"},"kind":"method","value":{"type":"FunctionExpression","start":394,"end":461,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":395,"end":401,"name":"origin"}],"body":{"type":"BlockStatement","start":403,"end":461,"body":[{"type":"ExpressionStatement","start":413,"end":434,"expression":{"type":"AssignmentExpression","start":413,"end":433,"operator":"=","left":{"type":"MemberExpression","start":413,"end":424,"object":{"type":"ThisExpression","start":413,"end":417},"property":{"type":"Identifier","start":418,"end":424,"name":"origin"},"computed":false,"optional":false},"right":{"type":"Identifier","start":427,"end":433,"name":"origin"}}},{"type":"ReturnStatement","start":443,"end":455,"argument":{"type":"ThisExpression","start":450,"end":454}}]}}},{"type":"MethodDefinition","start":466,"end":518,"static":false,"computed":false,"key":{"type":"Identifier","start":466,"end":480,"name":"getFocusOrigin"},"kind":"method","value":{"type":"FunctionExpression","start":480,"end":518,"id":null,"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":483,"end":518,"body":[{"type":"ReturnStatement","start":493,"end":512,"argument":{"type":"MemberExpression","start":500,"end":511,"object":{"type":"ThisExpression","start":500,"end":504},"property":{"type":"Identifier","start":505,"end":511,"name":"origin"},"computed":false,"optional":false}}]}}},{"type":"MethodDefinition","start":523,"end":674,"static":false,"computed":false,"key":{"type":"Identifier","start":523,"end":536,"name":"setActiveItem"},"kind":"method","value":{"type":"FunctionExpression","start":536,"end":674,"id":null,"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":537,"end":541,"name":"item"}],"body":{"type":"BlockStatement","start":543,"end":674,"body":[{"type":"ExpressionStatement","start":553,"end":579,"expression":{"type":"CallExpression","start":553,"end":578,"callee":{"type":"MemberExpression","start":553,"end":572,"object":{"type":"Super","start":553,"end":558},"property":{"type":"Identifier","start":559,"end":572,"name":"setActiveItem"},"computed":false,"optional":false},"arguments":[{"type":"Identifier","start":573,"end":577,"name":"item"}],"optional":false}},{"type":"IfStatement","start":588,"end":668,"test":{"type":"MemberExpression","start":592,"end":607,"object":{"type":"ThisExpression","start":592,"end":596},"property":{"type":"Identifier","start":597,"end":607,"name":"activeItem"},"computed":false,"optional":false},"consequent":{"type":"BlockStatement","start":609,"end":668,"body":[{"type":"ExpressionStatement","start":623,"end":658,"expression":{"type":"CallExpression","start":623,"end":657,"callee":{"type":"MemberExpression","start":623,"end":644,"object":{"type":"MemberExpression","start":623,"end":638,"object":{"type":"ThisExpression","start":623,"end":627},"property":{"type":"Identifier","start":628,"end":638,"name":"activeItem"},"computed":false,"optional":false},"property":{"type":"Identifier","start":639,"end":644,"name":"focus"},"computed":false,"optional":false},"arguments":[{"type":"MemberExpression","start":645,"end":656,"object":{"type":"ThisExpression","start":645,"end":649},"property":{"type":"Identifier","start":650,"end":656,"name":"origin"},"computed":false,"optional":false}],"optional":false}}]},"alternate":null}]}}}]}},"specifiers":[],"source":null}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMta2V5LW1hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jZGsvYTExeS9rZXktbWFuYWdlci9mb2N1cy1rZXktbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsY0FBYyxFQUF3QixNQUFNLG9CQUFvQixDQUFDO0FBYTFFLE1BQU0sT0FBTyxlQUFtQixTQUFRLGNBQW9DO0lBQTVFOztRQUNZLFdBQU0sR0FBZ0IsU0FBUyxDQUFDO0lBNkI1QyxDQUFDO0lBM0JHOzs7T0FHRztJQUNILGNBQWMsQ0FBQyxNQUFtQjtRQUM5QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUVyQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQsY0FBYztRQUNWLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBUUQsYUFBYSxDQUFDLElBQVM7UUFDbkIsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUUxQixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDakIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RDO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9jdXNPcmlnaW4gfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5cbmltcG9ydCB7IExpc3RLZXlNYW5hZ2VyLCBMaXN0S2V5TWFuYWdlck9wdGlvbiB9IGZyb20gJy4vbGlzdC1rZXktbWFuYWdlcic7XG5cblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBpbnRlcmZhY2UgZm9yIGZvY3VzYWJsZSBpdGVtcyAodXNlZCBieSB0aGUgRm9jdXNLZXlNYW5hZ2VyKS5cbiAqIEVhY2ggaXRlbSBtdXN0IGtub3cgaG93IHRvIGZvY3VzIGl0c2VsZiwgd2hldGhlciBvciBub3QgaXQgaXMgY3VycmVudGx5IGRpc2FibGVkXG4gKiBhbmQgYmUgYWJsZSB0byBzdXBwbHkgaXQncyBsYWJlbC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJRm9jdXNhYmxlT3B0aW9uIGV4dGVuZHMgTGlzdEtleU1hbmFnZXJPcHRpb24ge1xuICAgIC8vIEZvY3VzZXMgdGhlIGBGb2N1c2FibGVPcHRpb25gLiAqL1xuICAgIGZvY3VzKG9yaWdpbj86IEZvY3VzT3JpZ2luKTogdm9pZDtcbn1cblxuZXhwb3J0IGNsYXNzIEZvY3VzS2V5TWFuYWdlcjxUPiBleHRlbmRzIExpc3RLZXlNYW5hZ2VyPElGb2N1c2FibGVPcHRpb24gJiBUPiB7XG4gICAgcHJpdmF0ZSBvcmlnaW46IEZvY3VzT3JpZ2luID0gJ3Byb2dyYW0nO1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgZm9jdXMgb3JpZ2luIHRoYXQgd2lsbCBiZSBwYXNzZWQgaW4gdG8gdGhlIGl0ZW1zIGZvciBhbnkgc3Vic2VxdWVudCBgZm9jdXNgIGNhbGxzLlxuICAgICAqIEBwYXJhbSBvcmlnaW4gRm9jdXMgb3JpZ2luIHRvIGJlIHVzZWQgd2hlbiBmb2N1c2luZyBpdGVtcy5cbiAgICAgKi9cbiAgICBzZXRGb2N1c09yaWdpbihvcmlnaW46IEZvY3VzT3JpZ2luKTogdGhpcyB7XG4gICAgICAgIHRoaXMub3JpZ2luID0gb3JpZ2luO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGdldEZvY3VzT3JpZ2luKCk6IEZvY3VzT3JpZ2luIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3JpZ2luO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGFjdGl2ZSBpdGVtIG9yIGluZGV4IHRvIHRoZSBpdGVtIHRoYXQgaXMgc3BlY2lmaWVkIGFuZCBmb2N1c2VzIGl0LlxuICAgICAqIEBwYXJhbSBpdGVtIEl0ZW0gdG8gYmUgc2V0IGFzIGFjdGl2ZS5cbiAgICAgKi9cbiAgICBzZXRBY3RpdmVJdGVtKGl0ZW06IG51bWJlciB8IFQpOiB2b2lkO1xuXG4gICAgc2V0QWN0aXZlSXRlbShpdGVtOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIuc2V0QWN0aXZlSXRlbShpdGVtKTtcblxuICAgICAgICBpZiAodGhpcy5hY3RpdmVJdGVtKSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZUl0ZW0uZm9jdXModGhpcy5vcmlnaW4pO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19","start":677,"end":3395}]},"code":"import { ListKeyManager } from './list-key-manager';\nexport class FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this.origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this.origin = origin;\n        return this;\n    }\n    getFocusOrigin() {\n        return this.origin;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this.origin);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMta2V5LW1hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jZGsvYTExeS9rZXktbWFuYWdlci9mb2N1cy1rZXktbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsY0FBYyxFQUF3QixNQUFNLG9CQUFvQixDQUFDO0FBYTFFLE1BQU0sT0FBTyxlQUFtQixTQUFRLGNBQW9DO0lBQTVFOztRQUNZLFdBQU0sR0FBZ0IsU0FBUyxDQUFDO0lBNkI1QyxDQUFDO0lBM0JHOzs7T0FHRztJQUNILGNBQWMsQ0FBQyxNQUFtQjtRQUM5QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUVyQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQsY0FBYztRQUNWLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBUUQsYUFBYSxDQUFDLElBQVM7UUFDbkIsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUUxQixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDakIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RDO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9jdXNPcmlnaW4gfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5cbmltcG9ydCB7IExpc3RLZXlNYW5hZ2VyLCBMaXN0S2V5TWFuYWdlck9wdGlvbiB9IGZyb20gJy4vbGlzdC1rZXktbWFuYWdlcic7XG5cblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBpbnRlcmZhY2UgZm9yIGZvY3VzYWJsZSBpdGVtcyAodXNlZCBieSB0aGUgRm9jdXNLZXlNYW5hZ2VyKS5cbiAqIEVhY2ggaXRlbSBtdXN0IGtub3cgaG93IHRvIGZvY3VzIGl0c2VsZiwgd2hldGhlciBvciBub3QgaXQgaXMgY3VycmVudGx5IGRpc2FibGVkXG4gKiBhbmQgYmUgYWJsZSB0byBzdXBwbHkgaXQncyBsYWJlbC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJRm9jdXNhYmxlT3B0aW9uIGV4dGVuZHMgTGlzdEtleU1hbmFnZXJPcHRpb24ge1xuICAgIC8vIEZvY3VzZXMgdGhlIGBGb2N1c2FibGVPcHRpb25gLiAqL1xuICAgIGZvY3VzKG9yaWdpbj86IEZvY3VzT3JpZ2luKTogdm9pZDtcbn1cblxuZXhwb3J0IGNsYXNzIEZvY3VzS2V5TWFuYWdlcjxUPiBleHRlbmRzIExpc3RLZXlNYW5hZ2VyPElGb2N1c2FibGVPcHRpb24gJiBUPiB7XG4gICAgcHJpdmF0ZSBvcmlnaW46IEZvY3VzT3JpZ2luID0gJ3Byb2dyYW0nO1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgZm9jdXMgb3JpZ2luIHRoYXQgd2lsbCBiZSBwYXNzZWQgaW4gdG8gdGhlIGl0ZW1zIGZvciBhbnkgc3Vic2VxdWVudCBgZm9jdXNgIGNhbGxzLlxuICAgICAqIEBwYXJhbSBvcmlnaW4gRm9jdXMgb3JpZ2luIHRvIGJlIHVzZWQgd2hlbiBmb2N1c2luZyBpdGVtcy5cbiAgICAgKi9cbiAgICBzZXRGb2N1c09yaWdpbihvcmlnaW46IEZvY3VzT3JpZ2luKTogdGhpcyB7XG4gICAgICAgIHRoaXMub3JpZ2luID0gb3JpZ2luO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGdldEZvY3VzT3JpZ2luKCk6IEZvY3VzT3JpZ2luIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3JpZ2luO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGFjdGl2ZSBpdGVtIG9yIGluZGV4IHRvIHRoZSBpdGVtIHRoYXQgaXMgc3BlY2lmaWVkIGFuZCBmb2N1c2VzIGl0LlxuICAgICAqIEBwYXJhbSBpdGVtIEl0ZW0gdG8gYmUgc2V0IGFzIGFjdGl2ZS5cbiAgICAgKi9cbiAgICBzZXRBY3RpdmVJdGVtKGl0ZW06IG51bWJlciB8IFQpOiB2b2lkO1xuXG4gICAgc2V0QWN0aXZlSXRlbShpdGVtOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIuc2V0QWN0aXZlSXRlbShpdGVtKTtcblxuICAgICAgICBpZiAodGhpcy5hY3RpdmVJdGVtKSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZUl0ZW0uZm9jdXModGhpcy5vcmlnaW4pO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19","customTransformCache":false,"dependencies":["/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/list-key-manager.mjs"],"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/focus-key-manager.mjs","meta":{},"moduleSideEffects":false,"originalCode":"import { ListKeyManager } from './list-key-manager';\nexport class FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this.origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this.origin = origin;\n        return this;\n    }\n    getFocusOrigin() {\n        return this.origin;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this.origin);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMta2V5LW1hbmFnZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jZGsvYTExeS9rZXktbWFuYWdlci9mb2N1cy1rZXktbWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsY0FBYyxFQUF3QixNQUFNLG9CQUFvQixDQUFDO0FBYTFFLE1BQU0sT0FBTyxlQUFtQixTQUFRLGNBQW9DO0lBQTVFOztRQUNZLFdBQU0sR0FBZ0IsU0FBUyxDQUFDO0lBNkI1QyxDQUFDO0lBM0JHOzs7T0FHRztJQUNILGNBQWMsQ0FBQyxNQUFtQjtRQUM5QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUVyQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQsY0FBYztRQUNWLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBUUQsYUFBYSxDQUFDLElBQVM7UUFDbkIsS0FBSyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUUxQixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDakIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3RDO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9jdXNPcmlnaW4gfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5cbmltcG9ydCB7IExpc3RLZXlNYW5hZ2VyLCBMaXN0S2V5TWFuYWdlck9wdGlvbiB9IGZyb20gJy4vbGlzdC1rZXktbWFuYWdlcic7XG5cblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBpbnRlcmZhY2UgZm9yIGZvY3VzYWJsZSBpdGVtcyAodXNlZCBieSB0aGUgRm9jdXNLZXlNYW5hZ2VyKS5cbiAqIEVhY2ggaXRlbSBtdXN0IGtub3cgaG93IHRvIGZvY3VzIGl0c2VsZiwgd2hldGhlciBvciBub3QgaXQgaXMgY3VycmVudGx5IGRpc2FibGVkXG4gKiBhbmQgYmUgYWJsZSB0byBzdXBwbHkgaXQncyBsYWJlbC5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJRm9jdXNhYmxlT3B0aW9uIGV4dGVuZHMgTGlzdEtleU1hbmFnZXJPcHRpb24ge1xuICAgIC8vIEZvY3VzZXMgdGhlIGBGb2N1c2FibGVPcHRpb25gLiAqL1xuICAgIGZvY3VzKG9yaWdpbj86IEZvY3VzT3JpZ2luKTogdm9pZDtcbn1cblxuZXhwb3J0IGNsYXNzIEZvY3VzS2V5TWFuYWdlcjxUPiBleHRlbmRzIExpc3RLZXlNYW5hZ2VyPElGb2N1c2FibGVPcHRpb24gJiBUPiB7XG4gICAgcHJpdmF0ZSBvcmlnaW46IEZvY3VzT3JpZ2luID0gJ3Byb2dyYW0nO1xuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgZm9jdXMgb3JpZ2luIHRoYXQgd2lsbCBiZSBwYXNzZWQgaW4gdG8gdGhlIGl0ZW1zIGZvciBhbnkgc3Vic2VxdWVudCBgZm9jdXNgIGNhbGxzLlxuICAgICAqIEBwYXJhbSBvcmlnaW4gRm9jdXMgb3JpZ2luIHRvIGJlIHVzZWQgd2hlbiBmb2N1c2luZyBpdGVtcy5cbiAgICAgKi9cbiAgICBzZXRGb2N1c09yaWdpbihvcmlnaW46IEZvY3VzT3JpZ2luKTogdGhpcyB7XG4gICAgICAgIHRoaXMub3JpZ2luID0gb3JpZ2luO1xuXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGdldEZvY3VzT3JpZ2luKCk6IEZvY3VzT3JpZ2luIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3JpZ2luO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIGFjdGl2ZSBpdGVtIG9yIGluZGV4IHRvIHRoZSBpdGVtIHRoYXQgaXMgc3BlY2lmaWVkIGFuZCBmb2N1c2VzIGl0LlxuICAgICAqIEBwYXJhbSBpdGVtIEl0ZW0gdG8gYmUgc2V0IGFzIGFjdGl2ZS5cbiAgICAgKi9cbiAgICBzZXRBY3RpdmVJdGVtKGl0ZW06IG51bWJlciB8IFQpOiB2b2lkO1xuXG4gICAgc2V0QWN0aXZlSXRlbShpdGVtOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIuc2V0QWN0aXZlSXRlbShpdGVtKTtcblxuICAgICAgICBpZiAodGhpcy5hY3RpdmVJdGVtKSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZUl0ZW0uZm9jdXModGhpcy5vcmlnaW4pO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19","originalSourcemap":{"version":3,"file":"focus-key-manager.js","sourceRoot":"","sources":["../../../../../packages/cdk/a11y/key-manager/focus-key-manager.ts"],"names":[],"mappings":[[[0,0,2,0],[7,0,2,7],[9,0,2,9],[23,0,2,23],[25,0,2,47],[31,0,2,53],[51,0,2,73],[52,0,2,74]],[[0,0,15,0],[6,0,15,6],[13,0,15,13],[28,0,15,32],[37,0,15,40],[51,0,15,76]],[[4,0,15,0]],[],[[8,0,16,12],[19,0,16,18],[22,0,16,34],[31,0,16,43],[32,0,16,44]],[[4,0,45,0],[5,0,45,1]],[[4,0,18,4]],[],[],[[7,0,21,7]],[[4,0,22,4],[18,0,22,18],[19,0,22,19],[25,0,22,38]],[[8,0,23,8],[12,0,23,12],[13,0,23,13],[19,0,23,19],[22,0,23,22],[28,0,23,28],[29,0,23,29]],[[8,0,25,8],[15,0,25,15],[19,0,25,19],[20,0,25,20]],[[4,0,26,4],[5,0,26,5]],[[4,0,28,4],[18,0,28,18]],[[8,0,29,8],[15,0,29,15],[19,0,29,19],[20,0,29,20],[26,0,29,26],[27,0,29,27]],[[4,0,30,4],[5,0,30,5]],[[4,0,38,4],[17,0,38,17],[18,0,38,18],[22,0,38,27]],[[8,0,39,8],[13,0,39,13],[14,0,39,14],[27,0,39,27],[28,0,39,28],[32,0,39,32],[33,0,39,33],[34,0,39,34]],[[8,0,41,8],[12,0,41,12],[16,0,41,16],[17,0,41,17],[27,0,41,27],[29,0,41,29]],[[12,0,42,12],[16,0,42,16],[17,0,42,17],[27,0,42,27],[28,0,42,28],[33,0,42,33],[34,0,42,34],[38,0,42,38],[39,0,42,39],[45,0,42,45],[46,0,42,46],[47,0,42,47]],[[9,0,43,9]],[[4,0,44,4],[5,0,44,5]],[[1,0,45,1]]],"sourcesContent":["import { FocusOrigin } from '@angular/cdk/a11y';\n\nimport { ListKeyManager, ListKeyManagerOption } from './list-key-manager';\n\n\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply it's label.\n */\nexport interface IFocusableOption extends ListKeyManagerOption {\n    // Focuses the `FocusableOption`. */\n    focus(origin?: FocusOrigin): void;\n}\n\nexport class FocusKeyManager<T> extends ListKeyManager<IFocusableOption & T> {\n    private origin: FocusOrigin = 'program';\n\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin: FocusOrigin): this {\n        this.origin = origin;\n\n        return this;\n    }\n\n    getFocusOrigin(): FocusOrigin {\n        return this.origin;\n    }\n\n    /**\n     * Sets the active item or index to the item that is specified and focuses it.\n     * @param item Item to be set as active.\n     */\n    setActiveItem(item: number | T): void;\n\n    setActiveItem(item: any): void {\n        super.setActiveItem(item);\n\n        if (this.activeItem) {\n            this.activeItem.focus(this.origin);\n        }\n    }\n}\n"]},"resolvedIds":{"./list-key-manager":{"external":false,"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/list-key-manager.mjs","meta":{},"moduleSideEffects":false,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":723,"body":[{"type":"ExportAllDeclaration","start":0,"end":59,"exported":null,"source":{"type":"Literal","start":14,"end":58,"value":"./key-manager/activedescendant-key-manager","raw":"'./key-manager/activedescendant-key-manager'"}},{"type":"ExportAllDeclaration","start":60,"end":108,"exported":null,"source":{"type":"Literal","start":74,"end":107,"value":"./key-manager/focus-key-manager","raw":"'./key-manager/focus-key-manager'"}},{"type":"ExportAllDeclaration","start":109,"end":156,"exported":null,"source":{"type":"Literal","start":123,"end":155,"value":"./key-manager/list-key-manager","raw":"'./key-manager/list-key-manager'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL2Nkay9hMTF5L3B1YmxpYy1hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsY0FBYyw0Q0FBNEMsQ0FBQztBQUMzRCxjQUFjLGlDQUFpQyxDQUFDO0FBQ2hELGNBQWMsZ0NBQWdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCAqIGZyb20gJy4va2V5LW1hbmFnZXIvYWN0aXZlZGVzY2VuZGFudC1rZXktbWFuYWdlcic7XG5leHBvcnQgKiBmcm9tICcuL2tleS1tYW5hZ2VyL2ZvY3VzLWtleS1tYW5hZ2VyJztcbmV4cG9ydCAqIGZyb20gJy4va2V5LW1hbmFnZXIvbGlzdC1rZXktbWFuYWdlcic7XG4iXX0=","start":157,"end":723}]},"code":"export * from './key-manager/activedescendant-key-manager';\nexport * from './key-manager/focus-key-manager';\nexport * from './key-manager/list-key-manager';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL2Nkay9hMTF5L3B1YmxpYy1hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsY0FBYyw0Q0FBNEMsQ0FBQztBQUMzRCxjQUFjLGlDQUFpQyxDQUFDO0FBQ2hELGNBQWMsZ0NBQWdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCAqIGZyb20gJy4va2V5LW1hbmFnZXIvYWN0aXZlZGVzY2VuZGFudC1rZXktbWFuYWdlcic7XG5leHBvcnQgKiBmcm9tICcuL2tleS1tYW5hZ2VyL2ZvY3VzLWtleS1tYW5hZ2VyJztcbmV4cG9ydCAqIGZyb20gJy4va2V5LW1hbmFnZXIvbGlzdC1rZXktbWFuYWdlcic7XG4iXX0=","customTransformCache":false,"dependencies":["/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/activedescendant-key-manager.mjs","/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/focus-key-manager.mjs","/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/list-key-manager.mjs"],"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/public-api.mjs","meta":{},"moduleSideEffects":false,"originalCode":"export * from './key-manager/activedescendant-key-manager';\nexport * from './key-manager/focus-key-manager';\nexport * from './key-manager/list-key-manager';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL2Nkay9hMTF5L3B1YmxpYy1hcGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsY0FBYyw0Q0FBNEMsQ0FBQztBQUMzRCxjQUFjLGlDQUFpQyxDQUFDO0FBQ2hELGNBQWMsZ0NBQWdDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCAqIGZyb20gJy4va2V5LW1hbmFnZXIvYWN0aXZlZGVzY2VuZGFudC1rZXktbWFuYWdlcic7XG5leHBvcnQgKiBmcm9tICcuL2tleS1tYW5hZ2VyL2ZvY3VzLWtleS1tYW5hZ2VyJztcbmV4cG9ydCAqIGZyb20gJy4va2V5LW1hbmFnZXIvbGlzdC1rZXktbWFuYWdlcic7XG4iXX0=","originalSourcemap":{"version":3,"file":"public-api.js","sourceRoot":"","sources":["../../../../packages/cdk/a11y/public-api.ts"],"names":[],"mappings":[[[0,0,1,0],[14,0,1,14],[58,0,1,58],[59,0,1,59]],[[0,0,2,0],[14,0,2,14],[47,0,2,47],[48,0,2,48]],[[0,0,3,0],[14,0,3,14],[46,0,3,46],[47,0,3,47]]],"sourcesContent":["\nexport * from './key-manager/activedescendant-key-manager';\nexport * from './key-manager/focus-key-manager';\nexport * from './key-manager/list-key-manager';\n"]},"resolvedIds":{"./key-manager/activedescendant-key-manager":{"external":false,"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/activedescendant-key-manager.mjs","meta":{},"moduleSideEffects":false,"syntheticNamedExports":false},"./key-manager/list-key-manager":{"external":false,"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/list-key-manager.mjs","meta":{},"moduleSideEffects":false,"syntheticNamedExports":false},"./key-manager/focus-key-manager":{"external":false,"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/key-manager/focus-key-manager.mjs","meta":{},"moduleSideEffects":false,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":344,"body":[{"type":"ExportAllDeclaration","start":0,"end":29,"exported":null,"source":{"type":"Literal","start":14,"end":28,"value":"./public-api","raw":"'./public-api'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9jZGsvYTExeS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vcHVibGljLWFwaSc7XG4iXX0=","start":30,"end":344}]},"code":"export * from './public-api';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9jZGsvYTExeS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vcHVibGljLWFwaSc7XG4iXX0=","customTransformCache":false,"dependencies":["/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/public-api.mjs"],"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/index.mjs","meta":{},"moduleSideEffects":false,"originalCode":"export * from './public-api';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9jZGsvYTExeS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vcHVibGljLWFwaSc7XG4iXX0=","originalSourcemap":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../packages/cdk/a11y/index.ts"],"names":[],"mappings":[[[0,0,0,0],[14,0,0,14],[28,0,0,28],[29,0,0,29]]],"sourcesContent":["export * from './public-api';\n"]},"resolvedIds":{"./public-api":{"external":false,"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/public-api.mjs","meta":{},"moduleSideEffects":false,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]},{"ast":{"type":"Program","start":0,"end":503,"body":[{"type":"ExportAllDeclaration","start":48,"end":72,"exported":null,"source":{"type":"Literal","start":62,"end":71,"value":"./index","raw":"'./index'"}}],"sourceType":"module","_rollupRemoved":[{"type":"Line","value":"# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHRzZWN1cml0eS1jZGstYTExeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL2Nkay9hMTF5L3B0c2VjdXJpdHktY2RrLWExMXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLFNBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9pbmRleCc7XG4iXX0=","start":73,"end":503}]},"code":"/**\n * Generated bundle index. Do not edit.\n */\nexport * from './index';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHRzZWN1cml0eS1jZGstYTExeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL2Nkay9hMTF5L3B0c2VjdXJpdHktY2RrLWExMXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLFNBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9pbmRleCc7XG4iXX0=","customTransformCache":false,"dependencies":["/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/index.mjs"],"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/ptsecurity-cdk-a11y.mjs","meta":{},"moduleSideEffects":false,"originalCode":"/**\n * Generated bundle index. Do not edit.\n */\nexport * from './index';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHRzZWN1cml0eS1jZGstYTExeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL2Nkay9hMTF5L3B0c2VjdXJpdHktY2RrLWExMXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUc7QUFFSCxjQUFjLFNBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9pbmRleCc7XG4iXX0=","originalSourcemap":{"version":3,"file":"ptsecurity-cdk-a11y.js","sourceRoot":"","sources":["../../../../packages/cdk/a11y/ptsecurity-cdk-a11y.ts"],"names":[],"mappings":[[[0,0,0,0]],[],[[3,0,2,3]],[[0,0,4,0],[14,0,4,14],[23,0,4,23],[24,0,4,24]]],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]},"resolvedIds":{"./index":{"external":false,"id":"/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/dist/cdk/esm2020/a11y/index.mjs","meta":{},"moduleSideEffects":false,"syntheticNamedExports":false}},"sourcemapChain":[],"syntheticNamedExports":false,"transformDependencies":[]}],"plugins":{"node-resolve":{},"sourcemaps":{},"json":{}}}