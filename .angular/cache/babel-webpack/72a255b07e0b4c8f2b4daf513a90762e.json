{"ast":null,"code":"/**\n * @license Angular v13.1.1\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, createPlatformFactory, NgModule } from '@angular/core';\nimport { TestComponentRenderer } from '@angular/core/testing';\nimport { ɵplatformCoreDynamic, ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS } from '@angular/platform-browser-dynamic';\nimport { BrowserTestingModule } from '@angular/platform-browser/testing';\nimport { ɵgetDOM, DOCUMENT } from '@angular/common';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\n\nclass DOMTestComponentRenderer extends TestComponentRenderer {\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n  }\n\n  insertRootElement(rootElId) {\n    this.removeAllRootElements();\n    const rootElement = ɵgetDOM().getDefaultDocument().createElement('div');\n    rootElement.setAttribute('id', rootElId);\n\n    this._doc.body.appendChild(rootElement);\n  }\n\n  removeAllRootElements() {\n    // TODO(juliemr): can/should this be optional?\n    const oldRoots = this._doc.querySelectorAll('[id^=root]');\n\n    for (let i = 0; i < oldRoots.length; i++) {\n      ɵgetDOM().remove(oldRoots[i]);\n    }\n  }\n\n}\n\nDOMTestComponentRenderer.ɵfac = function DOMTestComponentRenderer_Factory(t) {\n  return new (t || DOMTestComponentRenderer)(i0.ɵɵinject(DOCUMENT));\n};\n\nDOMTestComponentRenderer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DOMTestComponentRenderer,\n  factory: DOMTestComponentRenderer.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DOMTestComponentRenderer, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Platform for dynamic tests\n *\n * @publicApi\n */\n\n\nconst platformCoreDynamicTesting = createPlatformFactory(ɵplatformCoreDynamic, 'coreDynamicTesting', []);\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\nconst platformBrowserDynamicTesting = createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\n\nclass BrowserDynamicTestingModule {}\n\nBrowserDynamicTestingModule.ɵfac = function BrowserDynamicTestingModule_Factory(t) {\n  return new (t || BrowserDynamicTestingModule)();\n};\n\nBrowserDynamicTestingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BrowserDynamicTestingModule,\n  exports: [BrowserTestingModule]\n});\nBrowserDynamicTestingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: TestComponentRenderer,\n    useClass: DOMTestComponentRenderer\n  }],\n  imports: [BrowserTestingModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrowserDynamicTestingModule, [{\n    type: NgModule,\n    args: [{\n      exports: [BrowserTestingModule],\n      providers: [{\n        provide: TestComponentRenderer,\n        useClass: DOMTestComponentRenderer\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BrowserDynamicTestingModule, platformBrowserDynamicTesting, DOMTestComponentRenderer as ɵDOMTestComponentRenderer, platformCoreDynamicTesting as ɵplatformCoreDynamicTesting };","map":{"version":3,"sources":["/Users/olegpimenov/Documents/PositiveTechnologies/git/github/mosaic/node_modules/@angular/platform-browser-dynamic/fesm2020/testing.mjs"],"names":["i0","Injectable","Inject","createPlatformFactory","NgModule","TestComponentRenderer","ɵplatformCoreDynamic","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","BrowserTestingModule","ɵgetDOM","DOCUMENT","DOMTestComponentRenderer","constructor","_doc","insertRootElement","rootElId","removeAllRootElements","rootElement","getDefaultDocument","createElement","setAttribute","body","appendChild","oldRoots","querySelectorAll","i","length","remove","ɵfac","ɵprov","type","undefined","decorators","args","platformCoreDynamicTesting","platformBrowserDynamicTesting","BrowserDynamicTestingModule","ɵmod","ɵinj","provide","useClass","exports","providers","ɵDOMTestComponentRenderer","ɵplatformCoreDynamicTesting"],"mappings":"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","sourcesContent":["/**\n * @license Angular v13.1.1\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, createPlatformFactory, NgModule } from '@angular/core';\nimport { TestComponentRenderer } from '@angular/core/testing';\nimport { ɵplatformCoreDynamic, ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS } from '@angular/platform-browser-dynamic';\nimport { BrowserTestingModule } from '@angular/platform-browser/testing';\nimport { ɵgetDOM, DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\nclass DOMTestComponentRenderer extends TestComponentRenderer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    insertRootElement(rootElId) {\n        this.removeAllRootElements();\n        const rootElement = ɵgetDOM().getDefaultDocument().createElement('div');\n        rootElement.setAttribute('id', rootElId);\n        this._doc.body.appendChild(rootElement);\n    }\n    removeAllRootElements() {\n        // TODO(juliemr): can/should this be optional?\n        const oldRoots = this._doc.querySelectorAll('[id^=root]');\n        for (let i = 0; i < oldRoots.length; i++) {\n            ɵgetDOM().remove(oldRoots[i]);\n        }\n    }\n}\nDOMTestComponentRenderer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DOMTestComponentRenderer, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDOMTestComponentRenderer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DOMTestComponentRenderer });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DOMTestComponentRenderer, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Platform for dynamic tests\n *\n * @publicApi\n */\nconst platformCoreDynamicTesting = createPlatformFactory(ɵplatformCoreDynamic, 'coreDynamicTesting', []);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst platformBrowserDynamicTesting = createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n * @publicApi\n */\nclass BrowserDynamicTestingModule {\n}\nBrowserDynamicTestingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserDynamicTestingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBrowserDynamicTestingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserDynamicTestingModule, exports: [BrowserTestingModule] });\nBrowserDynamicTestingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserDynamicTestingModule, providers: [\n        { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n    ], imports: [BrowserTestingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BrowserDynamicTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [BrowserTestingModule],\n                    providers: [\n                        { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserDynamicTestingModule, platformBrowserDynamicTesting, DOMTestComponentRenderer as ɵDOMTestComponentRenderer, platformCoreDynamicTesting as ɵplatformCoreDynamicTesting };\n"]},"metadata":{},"sourceType":"module"}